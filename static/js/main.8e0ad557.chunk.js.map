{"version":3,"sources":["MapChart.js","App.js","index.js"],"names":["confirmed","recovered","deaths","totConf","totRec","totDead","MapChart","props","state","setTooltipContent","setTotConf","setTotRec","setTotDead","chart","factor","width","that","this","Papa","parse","download","complete","results","skipRow","maxSize","data","size","i","length","Number","marker","markerOffset","name","coordinates","val","push","console","log","setState","Form","className","Check","inline","checked","label","type","id","onClick","value","change","e","target","step","max","min","projection","projectionConfig","scale","height","window","innerWidth","innerHeight","style","maxZoom","geography","geographies","map","geo","key","rsmKey","onMouseEnter","num","properties","NAME","POP_EST","Math","round","onMouseLeave","default","fill","outline","hover","pressed","display","x","y","r","sqrt","textAnchor","fontSize","endsWith","fontFamily","pointerEvents","React","Component","memo","date","Date","rounded","App","useState","content","setContent","hidden","setHidden","Navbar","bg","fixed","expand","Brand","icon","faDotCircle","Container","fluid","Row","noGutters","Col","marginTop","class","href","faDatabase","toLocaleDateString","toLocaleTimeString","faCode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e0ad557.chunk.js","sourcesContent":["import React, { memo} from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker\n} from \"react-simple-maps\";\n\nimport Papa from \"papaparse\";\nimport Form from 'react-bootstrap/Form';\nimport ReactBootstrapSlider from \"react-bootstrap-slider\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-10m.json\";\n\nconst confirmed = [];\nconst recovered = [];\nconst deaths = [];\nconst MAX_SIZE = 67786;\n\nlet totConf = 0;\nlet totRec = 0;\nlet totDead = 0;\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nclass MapChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTooltipContent: props.setTooltipContent,\n      setTotConf: props.setTotConf,\n      setTotRec: props.setTotRec,\n      setTotDead: props.setTotDead,\n      chart: \"pie\",\n      factor: 20,\n      width: 2\n    }\n  }\n\n  componentDidMount() {\n    let that = this;\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv\", {\n      download: true,\n      complete: function(results) {\n        that.confirmed = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          size = Number(size);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: (data[0] ? data[0] + \", \" + data[1] : data[1]) ? (data[0] ? data[0] + \", \" + data[1] : data[1]) : \"\",\n            coordinates: [data[3], data[2]],\n            size: size,\n            val: size\n          };\n          totConf += size;\n          confirmed.push(marker)\n        }\n        that.state.setTotConf(totConf);\n        console.log(maxSize);\n        for(let i = 0; i < confirmed.length; i++) {\n          confirmed[i].size = (confirmed[i].size - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv\", {\n      download: true,\n      complete: function(results) {\n        that.recovered = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          size = Number(size);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size,\n            val: size\n          };\n          totRec += size;\n          recovered.push(marker)\n        }\n        that.state.setTotRec(totRec);\n        for(let i = 0; i < recovered.length; i++) {\n          // console.log(recovered[i].size + \", \" + minSize + \", \" + maxSize);\n          recovered[i].size = (recovered[i].size - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv\", {\n      download: true,\n      complete: function(results) {\n        that.deaths = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          size = Number(size);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size,\n            val: size\n          };\n          totDead += size;\n          deaths.push(marker)\n        }\n        that.state.setTotDead(totDead);\n        for(let i = 0; i < deaths.length; i++) {\n          // console.log(deaths[i].size + \", \" + minSize + \", \" + maxSize);\n          deaths[i].size = (deaths[i].size - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n  }\n\n  render() {\n    let that = this;\n    return (\n      <>\n      <Form>\n        <div className=\"ml-3 small controls\">\n          <Form.Check inline checked={that.state.chart===\"pie\" } label=\"Circles\" type={\"radio\"} name={\"a\"} id={`inline-radio-1`} onClick={() => {that.setState({chart: \"pie\"});}}/>\n          <Form.Check inline checked={that.state.chart===\"bar\" } label=\"Bars\" type={\"radio\"} name={\"a\"} id={`inline-radio-2`} onClick={() => {that.setState({chart: \"bar\"});}} />\n        </div>\n      </Form>\n      <div className=\"small controls2\">\n        <ReactBootstrapSlider value={this.state.factor} change={e => {this.setState({ factor: e.target.value, width: e.target.value / 10 });}} step={1} max={100} min={1} />\n      </div>\n      <ComposableMap\n          projection={\"geoMercator\"}\n          projectionConfig={{scale: 200}}\n          height={window.innerWidth}\n          width={window.innerHeight - 50}\n          style={{width: \"100%\", height: \"100%\"}}\n      >\n        <ZoomableGroup maxZoom={1000}>\n          <Geographies geography={geoUrl}>\n            {\n              ({geographies}) =>\n                geographies.map(geo => (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      const {NAME, POP_EST} = geo.properties;\n                      if(NAME === \"Antarctica\") {\n                        return;\n                      }\n                      this.state.setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\n                    }}\n                    onMouseLeave={() => {\n                      this.state.setTooltipContent(\"\");\n                    }}\n                    style={{\n                      default: {\n                        fill: \"#ddd\",\n                        outline: \"none\"\n                      },\n                      hover: {\n                        fill: \"#999\",\n                        outline: \"none\"\n                      },\n                      pressed: {\n                        fill: \"#ddd\",\n                        outline: \"none\"\n                      }\n                    }}\n                  />\n                ))\n            }\n          </Geographies>\n          {\n            confirmed.map(({ name, coordinates, markerOffset, size, val }) => (\n              <Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#F00\"}} : {display: \"none\", hover: {fill: \"#F00\"}}} x={that.state.width * 0 - that.state.width * 1.5} y={-size * that.state.factor} width={that.state.width} height={size * that.state.factor} fill=\"#F008\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#F00\"}} : {display: \"none\", hover: {fill: \"#F00\"}}} r={Math.sqrt(size) * that.state.factor} fill=\"#F008\" />\n                <title>{name + \" - \" + val + \" confirmed\"}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: name.endsWith(\", US\") ? \"0.005em\" : \"2px\", fontFamily: \"Arial\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n                >\n                  {name}\n                </text>\n              </Marker>\n            ))\n          }\n          {\n            recovered.map(({ name, coordinates, markerOffset, size, val }) => (\n              <Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#0F0\"}} : {display: \"none\", hover: {fill: \"#0F0\"}}} x={that.state.width * 1 - that.state.width * 1.5} y={-size * that.state.factor} width={that.state.width} height={size * that.state.factor} fill=\"#0F08\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#0F0\"}} : {display: \"none\", hover: {fill: \"#0F0\"}}} r={Math.sqrt(size) * that.state.factor} fill=\"#0F08\" />\n                <title>{name + \" - \" + val + \" recovered\"}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: \"1px\", fontFamily: \"system-ui\", fill: \"#5D5A6D\", pointerEvents: \"none\" }}\n                >\n                  {/*name*/}\n                </text>\n              </Marker>\n            ))\n          }\n          {\n            deaths.map(({ name, coordinates, markerOffset, size, val }) => (\n              <Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#000\"}} : {display: \"none\", hover: {fill: \"#000\"}}} x={that.state.width * 2 - that.state.width * 1.5} y={-size * that.state.factor} width={that.state.width} height={size * that.state.factor} fill=\"#0008\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#000\"}} : {display: \"none\", hover: {fill: \"#000\"}}} r={Math.sqrt(size) * that.state.factor} fill=\"#0008\" />\n                <title>{name + \" - \" + val + \" deceased\"}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: \"1px\", fontFamily: \"system-ui\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n                >\n                  {/*name*/}\n                </text>\n              </Marker>\n            ))\n          }\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n    );\n  }\n}\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDatabase, faCode } from '@fortawesome/free-solid-svg-icons';\nimport { faDotCircle} from '@fortawesome/free-regular-svg-icons';\n\nconst date = new Date();\n\nconst rounded = (num) => {\n    if (num > 1000000000) {\n        return Math.round(num / 100000000) / 10 + \"Bn\";\n    } else if (num > 1000000) {\n        return Math.round(num / 100000) / 10 + \"M\";\n    } else {\n        return Math.round(num / 100) / 10 + \"K\";\n    }\n};\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  const [hidden, setHidden] = useState(false);\n  const [totConf, setTotConf] = useState(0);\n  const [totRec, setTotRec] = useState(0);\n  const [totDead, setTotDead] = useState(0);\n\n  return (\n    [\n      <Navbar bg=\"light\" fixed=\"top\" className={\"p-0 pl-2\"} expand={\"xs\"}>\n        <Navbar.Brand>\n            <span className=\"small\">C<FontAwesomeIcon icon={faDotCircle} />VID19 </span>\n        </Navbar.Brand>\n          <span>\n            <span className={\"small text-muted mr-3\"}>Total:</span>\n            <span className={\"small text-danger mr-3\"}>{rounded(totConf)}</span>\n            <span className={\"small text-success mr-3\"}>{rounded(totRec)}</span>\n            <span className={\"small text-dark mr-3\"}>{rounded(totDead)}</span>\n          </span>\n      </Navbar>,\n      <Container fluid className={\"w-100 h-100 p-0\"}>\n        <Row noGutters={\"true\"} className={\"h-100\"}>\n          <Col className={\"h-100\"}>\n            <MapChart\n                setTooltipContent={setContent}\n                style={{marginTop: \"50px\"}}\n                setTotConf={setTotConf}\n                setTotRec={setTotRec}\n                setTotDead={setTotDead}\n            />\n            <ReactTooltip>{content}</ReactTooltip>\n          </Col>\n        </Row>\n      </Container>,\n      <div className=\"info small text-muted\" style={hidden ? {display: \"none\"} : {display:\"block\"}} onClick={() => {setHidden(true)}}>\n        <span class=\"text-danger\">Red: confirmed</span><br />\n        <span class=\"text-success\">Green: recovered</span><br />\n        <span class=\"text-dark\">Black: deceased</span><br />\n        <sub>\n          Using live data from <br /><a target=\"_blank\" href={\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series\"}><FontAwesomeIcon icon={faDatabase} /> Johns Hopkins repository</a><br/>Last synchronized on {date.toLocaleDateString()} at {date.toLocaleTimeString()}<br/>\n            <a target=\"_blank\" href={\"https://github.com/daniel-karl/covid19-map\"}><FontAwesomeIcon icon={faCode} /> Who made this?</a>\n        </sub><br />\n        <span className=\"small text-danger\">Hold &lt;CTRL&gt; key to zoom</span>\n      </div>\n    ]\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}