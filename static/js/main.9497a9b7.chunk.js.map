{"version":3,"sources":["TestingRates.js","Population.js","MapChart.js","App.js","index.js"],"names":["RATES","ABSOLUTE","rounded","num","Math","round","MapChart","props","reset","deathsByRowId","recoveredAbsByRowId","deathsAbsByRowId","confirmed","recovered","deaths","projected","totConf","totRec","totDead","state","setTotConf","recoveryMode","datasource","setTotRec","setTotDead","reload","that","confirmedDataSource","recoveredDataSource","deceasedDataSource","Papa","parse","download","complete","results","a","skipRow","minSize","rowId","avgTested","avgPopulation","countTested","countPopulation","data","length","size","sizeMin1","sizeMin3","sizeMin7","console","log","idx","dayOffset","Number","maxSize","marker","markerOffset","name","coordinates","val","valMin1","valMin3","valMin7","push","Testing","Population","i","momentumLast1","momentumLast3","momentumLast7","globalTestRate","localTestRate","inverseTestFactor","sleep","max","recoverydays","setState","leafletMap","position","lat","lng","Map","ref","map","center","zoom","zoomControl","TileLayer","attribution","url","mapstyle","LayerGroup","key","momentumMarkers","className","projectedMarkers","confirmedMarkers","recoveredMarkers","deceasedMarkers","momentum","pop","alert","pos","abs","scaleLog","scalePpm","scaleLogAndPpm","CircleMarker","style","chart","display","fillColor","radius","isNaN","sqrt","factor","opacity","fillOpacity","testmode","active","scale","testscale","ppms","ppms2","text","mapLabels","Marker","textAnchor","y","fontSize","endsWith","fontFamily","fill","pointerEvents","color","type","Tooltip","direction","offset","tooltip","g","d1","d3","d7","d","stayAtHomeScore","icon","faUsers","faBiohazard","faBolt","Badge","variant","faProcedures","faHeartbeat","faHeartBroken","stayAtHomeAdvice","valign","e","value","population","scaleIfPillOrBar","logmode","ppmmode","msec","Promise","resolve","setTimeout","width","minimized","playmode","selectedData","this","prevProps","updateLeafletElement","layers","leafletElement","_layers","Object","values","layer","options","bringToFront","NAME","extension","population_sum","confirmed_sum","projected_sum","active_sum","recovered_sum","deaths_sum","c","selectedList","selectedItem","removedItem","shownDate","Date","setDate","getDate","hidden","onClick","faWindowMinimize","Form","Control","title","lineHeight","padding","height","as","onChange","nativeEvent","target","faQuestion","Check","inline","checked","label","id","ticks","ticks_labels","change","step","min","rel","href","faBug","faQuestionCircle","faBalanceScale","disabled","toLocaleDateString","document","getElementsByClassName","now","startDate","playpause","interval","setInterval","clearInterval","faPlayCircle","faPauseCircle","faStopCircle","dangerouslySetInnerHTML","__html","memo","App","useState","Navbar","bg","fixed","expand","Brand","faDotCircle","faGlobe","Container","fluid","Row","noGutters","Col","marginTop","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9497a9b7.chunk.js","sourcesContent":["export const RATES = {\n\n  // world in data\n  \"Armenia\": 813,\n  \"Australia\": 123449,\n  \"New South Wales, Australia\": 39089,\n  \"Queensland, Australia\": 27000,\n  \"Western Australia, Australia\": 8603,\n  \"Victoria, Australia\": 19337,\n  \"South Australia, Australia\": 16717,\n  \"Tasmania, Australia\": 807,\n  \"Austria\": 15613,\n  \"Bahrain\": 18645,\n  \"Belarus\": 19000,\n  \"Belgium\": 18360,\n  \"Bosnia and Herzegovina\": 717,\n  \"Brazil\": 2927,\n  \"Canada\": 38482,\n  \"Alberta, Canada\": 17013,\n  \"British Columbia, Canada\": 6326,\n  \"National lab, Canada\": 54956,\n  \"New Brunswick, Canada\": 520,\n  \"Northwest Territories, Canada\": 222,\n  \"Nova Scotia, Canada\": 1561,\n  \"Ontario, Canada\": 19511,\n  \"Quebec, Canada\": 10451,\n  \"Saskatchewan, Canada\": 2561,\n  \"China - Guangdong\": 320000,\n  \"Colombia\": 5034,\n  \"Costa Rica\": 1039,\n  \"Croatia\": 1264,\n  \"Czechia\": 11619,\n  \"Denmark\": 13599,\n  \"Ecuador\": 1964,\n  \"Estonia\": 2812,\n  \"Faroe Islands\": 1641,\n  \"Finland\": 7300,\n  \"France, France\": 36747,\n  \"Germany\": 167000,\n  \"Grenada\": 18,\n  \"Hong Kong\": 5271,\n  \"Hungary\": 3447,\n  \"Iceland\": 9786,\n  \"India\": 15404,\n  \"Indonesia\": 2365,\n  \"Iran\": 80000,\n  \"Ireland\": 6600,\n  \"Israel\": 17641,\n  \"Italy\": 206886,\n  \"Japan\": 18963,\n  \"Kuwait\": 120000,\n  \"Kazakhstan\": 5093,\n  \"Kyrgyzstan\": 1545,\n  \"Latvia\": 4446,\n  \"Lithuania\": 1466,\n  \"Malaysia\": 13876,\n  \"Malta\": 889,\n  \"Mexico\": 1533,\n  \"Netherlands, Netherlands\": 6000,\n  \"New Zealand\": 584,\n  \"Norway\": 43735,\n  \"Pakistan\": 1979,\n  \"Palestine\": 2519,\n  \"Panama\": 1455,\n  \"Peru\": 4298,\n  \"Philippines\": 1395,\n  \"Poland\": 15084,\n  \"Qatar\": 8400,\n  \"Romania\": 8915,\n  \"Russia\": 156060,\n  \"Slovakia\": 3247,\n  \"Slovenia\": 10980,\n  \"Spain\": 30000,\n  \"South Africa\": 7425,\n  \"South Korea\": 327509,\n  \"Sweden\": 14300,\n  \"Switzerland\": 4000,\n  \"Taiwan\": 21396,\n  \"Thailand\": 8710,\n  \"Turkey\": 2900,\n  \"Ukraine\": 450,\n  \"United Arab Emirates\": 125000,\n  \"United Kingdom\": 66976,\n  \"United States\": 182697,\n  \"Vietnam\": 17459,\n\n  // https://docs.google.com/spreadsheets/u/2/d/e/2PACX-1vRwAqp96T9sYYq2-i7Tj0pvTf6XVHjDSMIKBdZHXiCGGdNC0ypEU9NbngS8mxea55JuCFuua1MUeOj5/pubhtml#\n  \"Alaska, US\":\t        772,\n  \"Alabama, US\":        152,\n  \"Arkansas, US\":       839,\n  \"Arizona, US\":        516,\n  \"California, US\":     12528,\n  \"Colorado, US\":       3680,\n  \"Connecticut, US\":    2300,\n  \"DC\":                 583,              /* unkown */\n  \"Delaware, US\":       81,\n  \"Florida, US\":        8239,\n  \"Georgia, US\":        3064,\n  \"Guam\":               123,\n  \"Hawaii, US\":         170,\n  \"Iowa, US\":           1117,\n  \"Idaho, US\":          911,\n  \"Illinois, US\":       6247,\n  \"Indiana, US\":        833,\n  \"Kansas, US\":         472,\n  \"Kentucky, US\":       768,\n  \"Louisiana, US\":      2765,\n  \"Massachusetts, US\":  5277,\n  \"Maryland, US\":       284,\n  \"Maine, US\":          2337,\n  \"Michigan, US\":       2856,\n  \"Minnesota, US\":      4090,\n  \"Missouri, US\":       442,\n  \"MP\": 0,               /* unkown */\n  \"Mississippi, US\":    835,\n  \"Montana, US\":        1166,\n  \"North Carolina, US\": 5276,\n  \"North Dakota, US\":   1169,\n  \"Nebraska, US\":       394,\n  \"New Hampshire, US\":  1970,\n  \"New Jersey, US\":     1661,\n  \"New Mexico, US\":     3828,\n  \"Nevada, US\":         2508,\n  \"New York, US\":       45437,\n  \"Ohio, US\":           387,\n  \"Oklahoma, US\":       757,\n  \"Oregon, US\":         2550,\n  \"Pennsylvania, US\":   4137,\n  \"Puerto Rico\":        235,\n  \"Rhode Island, US\":   1218,\n  \"South Carolina, US\": 1407,\n  \"South Dakota, US\":   973,\n  \"Tennessee, US\":      3643,\n  \"Texas, US\":          6522,\n  \"Utah, US\":           2560,\n  \"Virginia, US\":       2790,\n  \"Virgin Islands\":     6,\n  \"Vermont, US\":        808,\n  \"Washington, US\":     23243,\n  \"Wisconsin, US\":      4967,\n  \"West Virginia, US\":  343,\n  \"Wyoming, US\":        461\n\n};\n","// Population counts extracted from the following sources:\n// US States: from https://www.census.gov/newsroom/press-kits/2019/national-state-estimates.html:\n// Countries: from https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2019_TotalPopulationBySex.csv\n// China: from https://www.worldatlas.com/articles/chinese-provinces-by-population.html\n// Australia: from https://en.wikipedia.org/wiki/States_and_territories_of_Australia\n// Diamond Princess: https://www.nytimes.com/2020/03/08/world/asia/coronavirus-cruise-ship.html\nexport const ABSOLUTE = {\n  \"Alabama, US\": 4903185,\n  \"Alaska, US\": 731545,\n  \"Arizona, US\": 7278717,\n  \"Arkansas, US\": 3017804,\n  \"California, US\": 39512223,\n  \"Colorado, US\": 5758736,\n  \"Connecticut, US\": 3565287,\n  \"Delaware, US\": 973764,\n  \"District of Columbia, US\": 705749,\n  \"Florida, US\": 21477737,\n  \"Georgia, US\": 10617423,\n  \"Hawaii, US\": 1415872,\n  \"Idaho, US\": 1787065,\n  \"Illinois, US\": 12671821,\n  \"Indiana, US\": 6732219,\n  \"Iowa, US\": 3155070,\n  \"Kansas, US\": 2913314,\n  \"Kentucky, US\": 4467673,\n  \"Louisiana, US\": 4648794,\n  \"Maine, US\": 1344212,\n  \"Maryland, US\": 6045680,\n  \"Massachusetts, US\": 6892503,\n  \"Michigan, US\": 9986857,\n  \"Minnesota, US\": 5639632,\n  \"Mississippi, US\": 2976149,\n  \"Missouri, US\": 6137428,\n  \"Montana, US\": 1068778,\n  \"Nebraska, US\": 1934408,\n  \"Nevada, US\": 3080156,\n  \"New Hampshire, US\": 1359711,\n  \"New Jersey, US\": 8882190,\n  \"New Mexico, US\": 2096829,\n  \"New York, US\": 19453561,\n  \"North Carolina, US\": 10488084,\n  \"North Dakota, US\": 762062,\n  \"Ohio, US\": 11689100,\n  \"Oklahoma, US\": 3956971,\n  \"Oregon, US\": 4217737,\n  \"Pennsylvania, US\": 12801989,\n  \"Rhode Island, US\": 1059361,\n  \"South Carolina, US\": 5148714,\n  \"South Dakota, US\": 884659,\n  \"Tennessee, US\": 6829174,\n  \"Texas, US\": 28995881,\n  \"Utah, US\": 3205958,\n  \"Vermont, US\": 623989,\n  \"Virginia, US\": 8535519,\n  \"Washington, US\": 7614893,\n  \"West Virginia, US\": 1792147,\n  \"Wisconsin, US\": 5822434,\n  \"Wyoming, US\": 578759,\n  \"Afghanistan\": 38928341,\n  \"Africa\": 1340598113,\n  \"African Group\": 1338826591,\n  \"African Union\": 1339423921,\n  \"African Union: Central Africa\": 158619638,\n  \"African Union: Eastern Africa\": 392563672,\n  \"African Union: Northern Africa\": 207032899,\n  \"African Union: Southern Africa\": 184002188,\n  \"African Union: Western Africa\": 397205524,\n  \"African, Caribbean and Pacific (ACP) Group of States\": 1179679906,\n  \"Albania\": 2877800,\n  \"Algeria\": 43851043,\n  \"American Samoa\": 55197,\n  \"Andean Community\": 113170819,\n  \"Andorra\": 77265,\n  \"Angola\": 32866267.999999996,\n  \"Anguilla\": 15002,\n  \"Antigua and Barbuda\": 97928,\n  \"Argentina\": 45195777,\n  \"Armenia\": 2963234,\n  \"Aruba, Netherlands\": 106766,\n  \"Asia\": 4641054786,\n  \"Asia-Pacific Economic Cooperation (APEC)\": 2972249482,\n  \"Asia-Pacific Group\": 4621682230,\n  \"Association of Southeast Asian Nations (ASEAN)\": 667301412,\n  \"Australia\": 25499881,\n  \"Australia/New Zealand\": 30322114,\n  \"Austria\": 9006400,\n  \"Azerbaijan\": 10139175,\n  \"BRIC\": 3177822028,\n  \"BRICS\": 3237130718,\n  \"The Bahamas\": 393248,\n  \"Bahrain\": 1701583,\n  \"Bangladesh\": 164689383,\n  \"Barbados\": 287371,\n  \"Belarus\": 9449321,\n  \"Belgium\": 11589616,\n  \"Belize\": 397621,\n  \"Belt-Road Initiative (BRI)\": 3403061795,\n  \"Belt-Road Initiative: Africa\": 1192659576,\n  \"Belt-Road Initiative: Asia\": 1572525725,\n  \"Belt-Road Initiative: Europe\": 413895375,\n  \"Belt-Road Initiative: Latin America and the Caribbean\": 208569955,\n  \"Belt-Road Initiative: Pacific\": 15411164,\n  \"Benin\": 12123198,\n  \"Bermuda, United Kingdom\": 62273,\n  \"Bhutan\": 771612,\n  \"Black Sea Economic Cooperation (BSEC)\": 343357186,\n  \"Bolivarian Alliance for the Americas (ALBA)\": 58690348,\n  \"Bolivia\": 11673029,\n  \"Bonaire, Sint Eustatius and Saba\": 26221,\n  \"Bosnia and Herzegovina\": 3280815,\n  \"Botswana\": 2351625,\n  \"Brazil\": 212559409,\n  \"British Virgin Islands\": 30237,\n  \"Brunei\": 437483,\n  \"Bulgaria\": 6948445,\n  \"Burkina Faso\": 20903278,\n  \"Burundi\": 11890781,\n  \"Cabo Verde\": 555988,\n  \"Cambodia\": 16718971.000000002,\n  \"Cameroon\": 26545864,\n  \"Canada\": 37742157,\n  \"Caribbean\": 43532374,\n  \"Caribbean Community and Common Market (CARICOM)\": 18849823,\n  \"Cayman Islands, United Kingdom\": 65720,\n  \"Central African Republic\": 4829764,\n  \"Central America\": 179670186,\n  \"Central Asia\": 74338926,\n  \"Central European Free Trade Agreement (CEFTA)\": 25746658,\n  \"Central and Southern Asia\": 2014708531,\n  \"Chad\": 16425859,\n  \"Channel Islands, United Kingdom\": 173859,\n  \"Chile\": 19116209,\n  \"China\": 1439323774,\n  \"China (and dependencies)\": 1471286879,\n  \"China, Hong Kong SAR\": 7496988,\n  \"China, Macao SAR\": 649342,\n  \"Taiwan*\": 23816775,\n  \"Colombia\": 50882884,\n  \"Commonwealth of Independent States (CIS)\": 290592838,\n  \"Commonwealth of Nations\": 2565385550,\n  \"Commonwealth: Africa\": 583993867,\n  \"Commonwealth: Asia\": 1825653173,\n  \"Commonwealth: Caribbean and Americas\": 44597814,\n  \"Commonwealth: Europe\": 69534904,\n  \"Commonwealth: Pacific\": 41605792,\n  \"Comoros\": 869595,\n  \"Congo (Kinshasa)\": 89561404,\n  \"Cook Islands\": 17564,\n  \"Costa Rica\": 5094114,\n  \"Countries with Access to the Sea\": 7199203331,\n  \"Countries with Access to the Sea: Africa\": 999209561,\n  \"Countries with Access to the Sea: Asia\": 4474222842,\n  \"Countries with Access to the Sea: Europe\": 679066702,\n  \"Countries with Access to the Sea: Latin America and the Caribbean\": 635156773,\n  \"Countries with Access to the Sea: Northern America\": 368869644,\n  \"Countries with Access to the Sea: Oceania\": 42677809,\n  \"Croatia\": 4105268,\n  \"Cuba\": 11326616,\n  \"Curacao, Netherlands\": 164100,\n  \"Cyprus\": 1207361,\n  \"Czechia\": 10708982,\n  \"Cote d'Ivoire\": 26378275,\n  \"Dem. People's Republic of Korea\": 25778815,\n  \"Denmark, Denmark\": 5792203,\n  \"Denmark\": 5792203,\n  \"Denmark (and dependencies)\": 5897840,\n  \"Djibouti\": 988002,\n  \"Dominica\": 71991,\n  \"Dominican Republic\": 10847904,\n  \"ECE: North America-2\": 368744804,\n  \"ECE: UNECE-52\": 1301482488,\n  \"ECLAC: Latin America\": 641934032,\n  \"ECLAC: The Caribbean\": 12024817,\n  \"ESCAP region: East and North-East Asia\": 1654272852,\n  \"ESCAP region: North and Central Asia\": 237364970,\n  \"ESCAP region: Pacific\": 42665213,\n  \"ESCAP region: South and South-West Asia\": 2024708672,\n  \"ESCAP region: South-East Asia\": 668619854,\n  \"ESCAP: ADB Developing member countries (DMCs)\": 4064234805,\n  \"ESCAP: ADB Group A (Concessional assistance only)\": 165457879,\n  \"ESCAP: ADB Group B (OCR blend)\": 1812617151,\n  \"ESCAP: ADB Group C (Regular OCR only)\": 2086159775,\n  \"ESCAP: ASEAN\": 667301412,\n  \"ESCAP: Central Asia\": 91430510,\n  \"ESCAP: ECO\": 512630793,\n  \"ESCAP: HDI groups\": 4627631561,\n  \"ESCAP: Landlocked countries (LLDCs)\": 166831944,\n  \"ESCAP: Least Developed Countries (LDCs)\": 314374173,\n  \"ESCAP: Pacific island dev. econ.\": 12343099,\n  \"ESCAP: SAARC\": 1856376652,\n  \"ESCAP: WB High income econ.\": 223305480,\n  \"ESCAP: WB Low income econ.\": 93843964,\n  \"ESCAP: WB Lower middle income econ.\": 2414189200,\n  \"ESCAP: WB Upper middle income econ.\": 1896273735,\n  \"ESCAP: WB income groups\": 4627612379,\n  \"ESCAP: high HDI\": 222728251,\n  \"ESCAP: high income\": 222956185,\n  \"ESCAP: income groups\": 4627631561,\n  \"ESCAP: low HDI\": 1933858787,\n  \"ESCAP: low income\": 2096735108,\n  \"ESCAP: lower middle HDI\": 2069715776,\n  \"ESCAP: lower middle income\": 586217954,\n  \"ESCAP: other Asia-Pacific countries/areas\": 200828133,\n  \"ESCAP: upper middle HDI\": 401328747,\n  \"ESCAP: upper middle income\": 1721722314,\n  \"ESCWA: Arab countries\": 436378875,\n  \"ESCWA: Arab least developed countries\": 96075713,\n  \"ESCWA: Gulf Cooperation Council countries\": 58664095,\n  \"ESCWA: Maghreb countries\": 99451506,\n  \"ESCWA: Mashreq countries\": 182187561,\n  \"ESCWA: member countries\": 374777016,\n  \"East African Community (EAC)\": 195283232,\n  \"Eastern Africa\": 445405578,\n  \"Eastern Asia\": 1678089627,\n  \"Eastern Europe\": 293013210,\n  \"Eastern European Group\": 339831453,\n  \"Eastern and South-Eastern Asia\": 2346709481,\n  \"Economic Community of Central African States (ECCAS)\": 204438115,\n  \"Economic Community of West African States (ECOWAS)\": 397205524,\n  \"Economic Cooperation Organization (ECO)\": 512630793,\n  \"Ecuador\": 17643060,\n  \"Egypt\": 102334403,\n  \"El Salvador\": 6486201,\n  \"Equatorial Guinea\": 1402985,\n  \"Eritrea\": 3546427,\n  \"Estonia\": 1326539,\n  \"Eswatini\": 1160164,\n  \"Ethiopia\": 114963583,\n  \"Eurasian Economic Community (Eurasec)\": 223691520,\n  \"Europe\": 747636045,\n  \"Europe (48)\": 747636045,\n  \"Europe and Northern America\": 1116505689,\n  \"European Community (EC: 12)\": 384860299,\n  \"European Free Trade Agreement (EFTA)\": 14455247,\n  \"European Union (EU: 15)\": 409506687,\n  \"European Union (EU: 28)\": 513136526,\n  \"Falkland Islands (Malvinas)\": 3483,\n  \"Faroe Islands, Denmark\": 48865,\n  \"Fiji\": 896444,\n  \"Finland\": 5540718,\n  \"France, France\": 65273512,\n  \"France\": 65273512,\n  \"France (and dependencies)\": 68147687,\n  \"French Guiana, France\": 298682,\n  \"French Polynesia, France\": 280904,\n  \"Gabon\": 2225728,\n  \"Gambia, The\": 2416664,\n  \"Gambia\": 2416664,\n  \"Georgia\": 3989175,\n  \"Germany\": 83783945,\n  \"Ghana\": 31072945,\n  \"Gibraltar, United Kingdom\": 33691,\n  \"Greater Arab Free Trade Area (GAFTA)\": 413978399,\n  \"Greece\": 10423056,\n  \"Greenland, Denmark\": 56772,\n  \"Grenada\": 112519,\n  \"Group of 77 (G77)\": 6135279467,\n  \"Group of Eight (G8)\": 918561011,\n  \"Group of Seven (G7)\": 772626551,\n  \"Group of Twenty (G20) - member states\": 4653331418,\n  \"Guadeloupe, France\": 400127,\n  \"Guam, US\": 168783,\n  \"Guatemala\": 17915567,\n  \"Guinea\": 13132792,\n  \"Guinea-Bissau\": 1967998,\n  \"Gulf Cooperation Council (GCC)\": 58664095,\n  \"Guyana\": 786559,\n  \"Haiti\": 11402533,\n  \"High-income countries\": 1263092934,\n  \"Holy Sea\": 809,\n  \"Honduras\": 9904608,\n  \"Hungary\": 9660350,\n  \"Iceland\": 341250,\n  \"India\": 1380004385,\n  \"Indonesia\": 273523621,\n  \"Iran\": 83992953,\n  \"Iraq\": 40222503,\n  \"Ireland\": 4937796,\n  \"Isle of Man\": 85032,\n  \"Israel\": 8655541,\n  \"Italy\": 60461828,\n  \"Jamaica\": 2961161,\n  \"Japan\": 126476458,\n  \"Jordan\": 10203140,\n  \"Kazakhstan\": 18776707,\n  \"Kenya\": 53771300,\n  \"Kiribati\": 119446,\n  \"Kosovo\": 1831000,\n  \"Kuwait\": 4270563,\n  \"Kyrgyzstan\": 6524191,\n  \"LLDC: Africa\": 341388552,\n  \"LLDC: Asia\": 166831944,\n  \"LLDC: Europe\": 6117343,\n  \"LLDC: Latin America\": 18805559,\n  \"Land-locked Countries\": 595596207,\n  \"Land-locked Countries (Others)\": 62452809,\n  \"Land-locked Developing Countries (LLDC)\": 533143398.00000006,\n  \"Lao People's Democratic Republic\": 7275556,\n  \"Latin America and the Caribbean\": 653962332,\n  \"Latin American Integration Association (ALADI)\": 573658551,\n  \"Latin American and Caribbean Group (GRULAC)\": 649376323,\n  \"Latvia\": 1886202,\n  \"League of Arab States (LAS, informal name: Arab League)\": 436378875,\n  \"Least developed countries\": 1057438163,\n  \"Least developed: Africa\": 701835489,\n  \"Least developed: Asia\": 343074875,\n  \"Least developed: Latin America and the Caribbean\": 11402533,\n  \"Least developed: Oceania\": 1125266,\n  \"Lebanon\": 6825442,\n  \"Lesotho\": 2142252,\n  \"Less developed regions\": 6521494468,\n  \"Less developed regions, excluding China\": 5050207589,\n  \"Less developed regions, excluding least developed countries\": 5464056305,\n  \"Less developed: Africa\": 1340598113,\n  \"Less developed: Asia\": 4514578328,\n  \"Less developed: Latin America and the Caribbean\": 653962332,\n  \"Less developed: Oceania\": 12355695,\n  \"Liberia\": 5057677,\n  \"Libya\": 6871287,\n  \"Liechtenstein\": 38137,\n  \"Lithuania\": 2722291,\n  \"Low-income countries\": 775710612,\n  \"Lower-middle-income countries\": 3098235284,\n  \"Luxembourg\": 625976,\n  \"Madagascar\": 27691019,\n  \"Malawi\": 19129955,\n  \"Malaysia\": 32365998,\n  \"Maldives\": 540542,\n  \"Mali\": 20250834,\n  \"Malta\": 441539,\n  \"Marshall Islands\": 59194,\n  \"Martinique, France\": 375265,\n  \"Mauritania\": 4649660,\n  \"Mauritius\": 1271767,\n  \"Mayotte, France\": 272813,\n  \"Melanesia\": 11122990,\n  \"Mexico\": 128932753,\n  \"Micronesia\": 548927,\n  \"Micronesia (Fed. States of)\": 115021,\n  \"Middle Africa\": 179595125,\n  \"Middle-income countries\": 5753051615,\n  \"Monaco\": 39244,\n  \"Mongolia\": 3278292,\n  \"Montenegro\": 628062,\n  \"Montserrat, United Kingdom\": 4999,\n  \"More developed regions\": 1273304261,\n  \"More developed: Asia\": 126476458,\n  \"More developed: Europe\": 747636045,\n  \"More developed: Northern America\": 368869644,\n  \"More developed: Oceania\": 30322114,\n  \"Morocco\": 36910558,\n  \"Mozambique\": 31255435,\n  \"Myanmar\": 54409794,\n  \"Namibia\": 2540916,\n  \"Nauru\": 10834,\n  \"Nepal\": 29136808,\n  \"Netherlands, Netherlands\": 17134873,\n  \"Netherlands\": 17134873,\n  \"Netherlands (and dependencies)\": 17474842,\n  \"New Caledonia, France\": 285491,\n  \"New EU member states (joined since 2004)\": 103629839,\n  \"New Zealand\": 4822233,\n  \"New Zealand (and dependencies)\": 4842765,\n  \"Nicaragua\": 6624554,\n  \"Niger\": 24206636,\n  \"Nigeria\": 206139587,\n  \"Niue\": 1618,\n  \"No income group available\": 2943568,\n  \"Non-Self-Governing Territories\": 1753672,\n  \"North American Free Trade Agreement (NAFTA)\": 497677557,\n  \"North Atlantic Treaty Organization (NATO)\": 944255667,\n  \"North Macedonia\": 2083380,\n  \"Northern Africa\": 246232508,\n  \"Northern Africa and Western Asia\": 525869282,\n  \"Northern America\": 368869644,\n  \"Northern Europe\": 106261271,\n  \"Northern Mariana Islands\": 57557,\n  \"Norway\": 5421242,\n  \"Oceania\": 42677809,\n  \"Oceania (excluding Australia and New Zealand)\": 12355695,\n  \"Oman\": 5106622,\n  \"Organisation for Economic Co-operation and Development (OECD)\": 1313469470,\n  \"Organization for Security and Co-operation in Europe (OSCE)\": 1296294632,\n  \"Organization of American States (OAS)\": 1018121127,\n  \"Organization of Petroleum Exporting countries (OPEC)\": 518144279,\n  \"Organization of the Islamic Conference (OIC)\": 1907530488,\n  \"Pakistan\": 220892331,\n  \"Palau\": 18092,\n  \"Panama\": 4314768,\n  \"Papua New Guinea\": 8947027,\n  \"Paraguay\": 7132530,\n  \"Peru\": 32971845.999999996,\n  \"Philippines\": 109581085,\n  \"Poland\": 37846605,\n  \"Polynesia\": 683778,\n  \"Portugal\": 10196707,\n  \"Puerto Rico, US\": 2860840,\n  \"Qatar\": 2881060,\n  \"Korea, South\": 51269183,\n  \"Moldova\": 4033963,\n  \"Romania\": 19237682,\n  \"Russia\": 145934460,\n  \"Rwanda\": 12952209,\n  \"Reunion, France\": 895308,\n  \"SIDS Atlantic, and Indian Ocean, Mediterranean and South China Sea (AIMS)\": 16226846,\n  \"SIDS Caribbean\": 43506153,\n  \"SIDS Pacific\": 12343099,\n  \"Saint Barthelemy, France\": 9885,\n  \"Saint Helena\": 6071,\n  \"Saint Kitts and Nevis\": 53192,\n  \"Saint Lucia\": 183629,\n  \"St Martin, France\": 38659,\n  \"Saint Pierre and Miquelon\": 5795,\n  \"Saint Vincent and the Grenadines\": 110947,\n  \"Samoa\": 198410,\n  \"San Marino\": 33938,\n  \"Sao Tome and Principe\": 219161,\n  \"Saudi Arabia\": 34813867,\n  \"Senegal\": 16743930,\n  \"Serbia\": 8737370,\n  \"Seychelles\": 98340,\n  \"Shanghai Cooperation Organization (SCO)\": 3254462689,\n  \"Sierra Leone\": 7976985,\n  \"Singapore\": 5850343,\n  \"Sint Maarten, Netherlands\": 42882,\n  \"Slovakia\": 5459643,\n  \"Slovenia\": 2078931.9999999998,\n  \"Small Island Developing States (SIDS)\": 72076098,\n  \"Solomon Islands\": 686878,\n  \"Somalia\": 15893219,\n  \"South Africa\": 59308690,\n  \"South America\": 430759772,\n  \"South Asian Association for Regional Cooperation (SAARC)\": 1856376652,\n  \"South Sudan\": 11193729,\n  \"South-Eastern Asia\": 668619854,\n  \"Southern Africa\": 67503647,\n  \"Southern African Development Community (SADC)\": 363228526,\n  \"Southern Asia\": 1940369605,\n  \"Southern Common Market (MERCOSUR)\": 308470415,\n  \"Southern Europe\": 152215243,\n  \"Spain\": 46754783,\n  \"Sri Lanka\": 21413250,\n  \"State of Palestine\": 5101416,\n  \"Sub-Saharan Africa\": 1094365605,\n  \"Sudan\": 43849269,\n  \"Suriname\": 586634,\n  \"Sweden\": 10099270,\n  \"Switzerland\": 8654618,\n  \"Syrian Arab Republic\": 17500657,\n  \"Tajikistan\": 9537642,\n  \"Thailand\": 69799978,\n  \"Timor-Leste\": 1318442,\n  \"Togo\": 8278736.999999999,\n  \"Tokelau\": 1350,\n  \"Tonga\": 105697,\n  \"Trinidad and Tobago\": 1399491,\n  \"Tunisia\": 11818618,\n  \"Turkey\": 84339067,\n  \"Turkmenistan\": 6031187,\n  \"Turks and Caicos Islands\": 38718,\n  \"Tuvalu\": 11792,\n  \"UN-ECE: member countries\": 1301671072,\n  \"UNFPA Regions\": 6435966035,\n  \"UNFPA: Arab States (AS)\": 377302147,\n  \"UNFPA: Asia and the Pacific (AP)\": 4082579031,\n  \"UNFPA: East and Southern Africa (ESA)\": 617189215,\n  \"UNFPA: Eastern Europe and Central Asia (EECA)\": 249965985,\n  \"UNFPA: Latin America and the Caribbean (LAC)\": 649907020,\n  \"UNFPA: West and Central Africa (WCA)\": 459022637,\n  \"UNICEF PROGRAMME REGIONS\": 6518336209,\n  \"UNICEF Programme Regions: East Asia and Pacific (EAPRO)\": 2142209426,\n  \"UNICEF Programme Regions: Eastern Caribbean\": 2406024,\n  \"UNICEF Programme Regions: Eastern and Southern Africa (ESARO)\": 542249263,\n  \"UNICEF Programme Regions: Europe and Central Asia (CEECIS)\": 280885442,\n  \"UNICEF Programme Regions: Latin America\": 646666007,\n  \"UNICEF Programme Regions: Latin America and Caribbean (LACRO)\": 649072031,\n  \"UNICEF Programme Regions: Middle East and North Africa (MENARO)\": 498959354,\n  \"UNICEF Programme Regions: South Asia (ROSA)\": 1856376652,\n  \"UNICEF Programme Regions: West and Central Africa (WCARO)\": 548584041,\n  \"UNICEF REGIONS\": 7794798729,\n  \"UNICEF Regions: East Asia and Pacific\": 2389387290,\n  \"UNICEF Regions: Eastern Europe and Central Asia\": 426819902,\n  \"UNICEF Regions: Eastern and Southern Africa\": 589624762,\n  \"UNICEF Regions: Europe and Central Asia\": 924612983,\n  \"UNICEF Regions: Latin America and Caribbean\": 653962332,\n  \"UNICEF Regions: Middle East and North Africa\": 463374954,\n  \"UNICEF Regions: North America\": 368869644,\n  \"UNICEF Regions: South Asia\": 1856376652,\n  \"UNICEF Regions: Sub-Saharan Africa\": 1138214874,\n  \"UNICEF Regions: West and Central Africa\": 548590112,\n  \"UNICEF Regions: Western Europe\": 497793081,\n  \"UNITED NATIONS Regional Groups of Member States\": 7789099185,\n  \"Uganda\": 45741000,\n  \"Ukraine\": 43733759,\n  \"United Arab Emirates\": 9890400,\n  \"United Kingdom, United Kingdom\": 67886004,\n  \"United Kingdom\": 67886004,\n  \"United Kingdom (and dependencies)\": 68405089,\n  \"United Nations Economic Commission for Africa (UN-ECA)\": 1338826591,\n  \"United Nations Economic Commission for Latin America and the Caribbean (UN-ECLAC)\": 653958849,\n  \"United Nations Economic and Social Commission for Asia and the Pacific (UN-ESCAP) Regions\": 4627631561,\n  \"United Nations Member States\": 7789099174,\n  \"Tanzania\": 59734213,\n  \"Virgin Islands, US\": 104423,\n  \"United States of America\": 331002647,\n  \"US\": 331002647,\n  \"United States of America (and dependencies)\": 334249447,\n  \"Upper-middle-income countries\": 2654816331,\n  \"Uruguay\": 3473727,\n  \"Uzbekistan\": 33469199,\n  \"Vanuatu\": 307150,\n  \"Venezuela\": 28435943,\n  \"Vietnam\": 97338583,\n  \"WB region: East Asia and Pacific (excluding high income)\": 2142225998.9999998,\n  \"WB region: Europe and Central Asia (excluding high income)\": 422714634,\n  \"WB region: Latin America and Caribbean (excluding high income)\": 575044612,\n  \"WB region: Middle East and North Africa (excluding high income)\": 396445990,\n  \"WB region: South Asia (excluding high income)\": 1856376652,\n  \"WB region: Sub-Saharan Africa (excluding high income)\": 1135954340,\n  \"WHO Regions\": 7750010916,\n  \"WHO: African region (AFRO)\": 1120161235,\n  \"WHO: Americas (AMRO)\": 1018121127,\n  \"WHO: Eastern Mediterranean Region (EMRO)\": 725720786,\n  \"WHO: European Region (EURO)\": 932888131,\n  \"WHO: South-East Asia region (SEARO)\": 2021386630,\n  \"WHO: Western Pacific region (WPRO)\": 1931733007,\n  \"Wallis and Futuna Islands\": 11246,\n  \"West African Economic and Monetary Union (UEMOA)\": 130852886,\n  \"Western Africa\": 401861255,\n  \"Western Asia\": 279636774,\n  \"Western Europe\": 196146321,\n  \"Western European and Others Group (WEOG)\": 923721644,\n  \"Western Sahara\": 597330,\n  \"World\": 7794798729,\n  \"World Bank Regional Groups (developing only)\": 6528762227,\n  \"Yemen\": 29825968,\n  \"Zambia\": 18383956,\n  \"Zimbabwe\": 14862927,\n\t\"Guangdong, China\":\t104303132,\n\t\"Shandong, China\":\t100063065,\n\t\"Henan, China\":\t94023567,\n\t\"Sichuan, China\":\t80418200,\n\t\"Jiangsu, China\":\t78659903,\n\t\"Hebei, China\":\t71854202,\n\t\"Hunan, China\":\t65683722,\n\t\"Anhui, China\":\t59500510,\n\t\"Hubei, China\":\t57237740,\n\t\"Zhejiang, China\":\t54426891,\n\t\"Guangxi, China\":\t46026629,\n\t\"Yunnan, China\":\t45966239,\n\t\"Jiangxi, China\":\t44567475,\n\t\"Liaoning, China\":\t43746323,\n\t\"Fujian, China\":\t36894216,\n\t\"Shaanxi, China\":\t37327378,\n\t\"Heilongjiang, China\":\t38312224,\n\t\"Shanxi, China\":\t37022111,\n\t\"Guizhou, China\":\t35806468,\n\t\"Chongqing, China\":\t28846170,\n\t\"Jilin, China\":\t27462297,\n\t\"Gansu, China\":\t25575254,\n\t\"Inner Mongolia, China\":\t24706321,\n\t\"Xinjiang, China\":\t21813334,\n\t\"Shanghai, China\":\t23019148,\n\t\"Beijing, China\":\t19612368,\n\t\"Tianjin, China\":\t12938224,\n\t\"Hainan, China\":\t9261518,\n\t\"Hong Kong, China\":\t7061200,\n\t\"Ningxia, China\":\t6176900,\n\t\"Qinghai, China\":\t5626722,\n\t\"Tibet, China\":\t3002166,\n\t\"Macau, China\":\t552503,\n\t\"New South Wales, Australia\": 8089952,\n    \"Australian Capital Territory, Australia\": 418440,\n    \"Northern Territory, Australia\": 244300,\n\t\"Queensland, Australia\": 5095100,\n\t\"South Australia, Australia\": 1044353,\n\t\"Tasmania, Australia\": 534281,\n\t\"Victoria, Australia\": 6594804,\n\t\"Western Australia, Australia\": 2621680,\n  \"Alberta, Canada\": 4335768,\n  \"British Columbia, Canada\": 5031893,\n  \"New Brunswick, Canada\": 772790,\n  \"Northwest Territories, Canada\": 45047,\n  \"Nova Scotia, Canada\": 965249,\n  \"Ontario, Canada\": 14441694,\n  \"Quebec, Canada\": 8429241,\n  \"Saskatchewan, Canada\": 1170028,\n  \"Manitoba, Canada\": 1361997,\n\n  \"Diamond Princess, Cruise Ship\": 3700,\n  \"Grand Princess, Canada\": 3100\n};\n","import React, {memo} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Map, TileLayer, Marker, Tooltip,\n    CircleMarker, LayerGroup } from \"react-leaflet\";\n\nimport * as Testing from \"./TestingRates\";\nimport * as Population from \"./Population\";\n\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport {Multiselect} from \"multiselect-react-dropdown\";\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faWindowMinimize,\n  faUsers,\n  faProcedures,\n  faHeartbeat,\n  faHeartBroken,\n  faBiohazard,\n  faPlayCircle,\n  faStopCircle,\n  faPauseCircle,\n  faQuestion,\n  faQuestionCircle, faBug, faBalanceScale, faBolt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Papa from \"papaparse\";\nimport Form from 'react-bootstrap/Form';\nimport Badge from 'react-bootstrap/Badge';\nimport ReactBootstrapSlider from \"react-bootstrap-slider\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-10m.json\";\n\nconst ONE_M = 1000000;\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else if (num > 1000) {\n    return Math.round(num / 100) / 10 + \"K\";\n  } else {\n    return Math.round(num);\n  }\n};\n\nclass MapChart extends Map {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTotConf: props.setTotConf,\n      setTotRec: props.setTotRec,\n      setTotDead: props.setTotDead,\n      chart: \"pie\",\n      factor: 50,\n      width: 2,\n      logmode: true,\n      momentum: \"none\",\n      ppmmode: false,\n      minimized: false,\n      testmode: true,\n      testscale: 0,\n      dayOffset: 0,\n      playmode: false,\n      recoverydays: 12,\n      mapstyle: \"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\",\n      selectedData: [\"projected\", \"confirmed\", \"recovered\", \"deceased\"],\n      datasource: \"jh2\",\n      recoveryMode: false,\n\n      maxSize: 67021,\n\n      // leaflet map\n      lat: 0,\n      lng: 0,\n      zoom: 2\n    };\n\n    this.map = null;\n\n    this.deathsByRowId = {};\n    this.recoveredAbsByRowId = {};\n    this.deathsAbsByRowId = {};\n\n    this.confirmed = [];\n    this.recovered = [];\n    this.deaths = [];\n    this.projected = []; /* this will be local_confirmed_rate * avg_test_rate / local_test_rate */\n\n    this.totConf = 0;\n    this.totRec = 0;\n    this.totDead = 0;\n\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  componentDidUpdate (prevProps) {\n      this.updateLeafletElement(prevProps, this.props);\n      const layers = this.map.leafletElement._layers;\n\n      // bring to front one by one\n      Object.values(layers).map((layer) => {\n        if(layer.options.className ===\"projected\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if(layer.options.className ===\"confirmed\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if(layer.options.className ===\"recovered\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if(layer.options.className ===\"deceased\") {\n          layer.bringToFront();\n        }\n      });\n\n    /*\n    Object.values(layers)\n      .filter((layer) => {\n        return typeof layer.options.priority !== \"undefined\";\n      })\n      .sort((layerA, layerB) => {\n        return layerA.options.priority - layerB.options.priority;\n      })\n      .forEach((layer) => {\n        layer.bringToFront();\n      });*/\n  }\n\n  get_sums(NAME, extension) {\n\t  let that = this;\n\t\t\t  let population_sum = 0;\n\t\t\t  let confirmed_sum = 0;\n\t\t\t  let projected_sum = 0;\n\t\t\t  let active_sum = 0;\n\t\t\t  let recovered_sum = 0;\n\t\t\t  let deaths_sum = 0;\n\t\t          for(let c of that.confirmed) {\n                    if (c.name.endsWith(extension)) {\n                      if (!isNaN(Population.ABSOLUTE[c.name])) {\n                        population_sum += Population.ABSOLUTE[c.name];\n                        confirmed_sum += that.confirmed[c.rowId].val;\n                        projected_sum += that.projected[c.rowId].val;\n                        active_sum += that.confirmed[c.rowId].val - that.recoveredAbsByRowId[c.rowId] - that.deathsAbsByRowId[c.rowId];\n                        recovered_sum += that.recovered[c.rowId].val;\n                        deaths_sum += that.deaths[c.rowId].val;\n                      }\n                    }\n                  }\n\t  return [population_sum, confirmed_sum, projected_sum, active_sum, recovered_sum, deaths_sum];\n  }\n\n  reset = () => {\n    this.deathsByRowId = {};\n    this.recoveredAbsByRowId = {};\n    this.deathsAbsByRowId = {};\n\n    this.confirmed = [];\n    this.recovered = [];\n    this.deaths = [];\n    this.projected = []; /* this will be local_confirmed_rate * avg_test_rate / local_test_rate */\n\n    this.totConf = 0;\n    this.totRec = 0;\n    this.totDead = 0;\n\n    this.state.setTotConf(this.totConf);\n    if(this.state.recoveryMode || this.state.datasource == \"jh\") {\n      this.state.setTotRec(this.totRec);\n    } else {\n      this.state.setTotRec(\"-\");\n    }\n    this.state.setTotDead(this.totDead);\n  };\n\n  reload = () => {\n    let that = this;\n    that.totConf = 0;\n    that.totRec = 0;\n    that.totDead = 0;\n    that.deathsByRowId = {};\n    that.recoveredAbsByRowId = {};\n    that.deathsAbsByRowId = {};\n\n    let confirmedDataSource = null;\n    let recoveredDataSource = null;\n    let deceasedDataSource = null;\n    switch(that.state.datasource) {\n      case \"jh\":\n        confirmedDataSource = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv\";\n        recoveredDataSource = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv\";\n        deceasedDataSource = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv\";\n        break;\n      case \"jh2\":\n        confirmedDataSource = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\n        recoveredDataSource = null;\n        deceasedDataSource = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\"\n    }\n\n    Papa.parse(confirmedDataSource, {\n      download: true,\n      complete: async function(results) {\n        // confirmed\n        that.confirmed = [];\n        let skipRow = true;\n        let minSize = 0;\n        let rowId = 0;\n        let avgTested = 0;\n        let avgPopulation = 0;\n        let countTested = 0;\n        let countPopulation = 0;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          if(data.length === 1 ) {\n              continue;\n          }\n          let size = \"\";\n          let sizeMin1 = \"\";\n          let sizeMin3 = \"\";\n          let sizeMin7 = \"\";\n          console.log(data.length);\n          let idx = data.length - 1 + that.state.dayOffset;\n          size = data[idx];\n          sizeMin1 = data[idx - 1];\n          sizeMin3 = data[idx - 3];\n          sizeMin7 = data[idx - 7];\n          if(size===\"\") {\n            size = 0;\n          }\n          if(sizeMin1===\"\") {\n            sizeMin1 = 0;\n          }\n          if(sizeMin3===\"\") {\n            sizeMin3 = 0;\n          }\n          if(sizeMin7===\"\") {\n            sizeMin7 = 0;\n          }\n          size = Number(size);\n          sizeMin1 = Number(sizeMin1);\n          sizeMin3 = Number(sizeMin3);\n          sizeMin7 = Number(sizeMin7);\n          if(size > that.state.maxSize) {\n            that.state.maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: (data[0] ? data[0] + \", \" + data[1] : data[1]) ? (data[0] ? data[0] + \", \" + data[1] : data[1]) : \"\",\n            coordinates: [data[3], data[2]],\n            size: size,\n            sizeMin1: sizeMin1,\n            sizeMin3: sizeMin3,\n            sizeMin7: sizeMin7,\n            val: size,\n            rowId: rowId,\n            valMin1: size - sizeMin1,\n            valMin3: size - sizeMin3,\n            valMin7: size - sizeMin7\n          };\n          that.totConf += size;\n          that.confirmed.push(marker);\n\n          // compute total tested and total population\n          if(Testing.RATES[marker.name] && Population.ABSOLUTE[marker.name]) {\n            avgTested += Testing.RATES[marker.name];\n            avgPopulation += Population.ABSOLUTE[marker.name];\n            countTested++;\n            countPopulation++;\n          }\n          rowId++;\n        }\n        avgTested /= countTested;\n        avgPopulation /= countPopulation;\n        that.state.setTotConf(that.totConf);\n        for(let i = 0; i < that.confirmed.length; i++) {\n          that.confirmed[i].size = (that.confirmed[i].size - minSize) / (that.state.maxSize - minSize);\n          that.confirmed[i].momentumLast1 = that.confirmed[i].size - (that.confirmed[i].sizeMin1 - minSize) / (that.state.maxSize - minSize);\n          that.confirmed[i].momentumLast3 = that.confirmed[i].size - (that.confirmed[i].sizeMin3 - minSize) / (that.state.maxSize - minSize);\n          that.confirmed[i].momentumLast7 = that.confirmed[i].size - (that.confirmed[i].sizeMin7 - minSize) / (that.state.maxSize - minSize);\n        }\n\n        // projected\n        let globalTestRate = avgTested / avgPopulation;\n        that.projected = [];\n        skipRow = true;\n        rowId = 0;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          if(data.length === 1 ) {\n              continue;\n          }\n          let size = that.confirmed[rowId].size;\n          let val = that.confirmed[rowId].val;\n          if(Testing.RATES[that.confirmed[rowId].name] && Population.ABSOLUTE[that.confirmed[rowId].name]) {\n            let localTestRate = Testing.RATES[that.confirmed[rowId].name] / Population.ABSOLUTE[that.confirmed[rowId].name];\n            let inverseTestFactor = globalTestRate / localTestRate;\n            size = size * inverseTestFactor;\n            val = val * inverseTestFactor;\n          } else {\n            size = 0;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: that.confirmed[rowId].name,\n            coordinates: that.confirmed[rowId].coordinates,\n            size: size,\n            val: val,\n            rowId: that.confirmed[rowId].rowId,\n          };\n          that.projected.push(marker);\n          rowId++;\n        }\n        if(that.state.datasource === \"jh2\") {\n          that.recovered = [];\n          let skipRow = true;\n          let minSize = 0;\n          let rowId = 0;\n          for (let data of results.data) {\n            if (skipRow) {\n              skipRow = false;\n              continue;\n            }\n            if(data.length === 1 ) {\n              continue;\n            }\n            let size = \"\";\n            let sizeMin1 = \"\";\n            let sizeMin3 = \"\";\n            let sizeMin7 = \"\";\n            let idx = data.length - 1 + that.state.dayOffset;\n            while(that.deaths.length < idx) {\n              await that.sleep(50);\n            }\n            size =      Math.max(0, data[Math.max(0, idx     - that.state.recoverydays)] - that.deaths[rowId].val);\n            sizeMin1 =  Math.max(data[Math.max(0, idx - 1 - that.state.recoverydays)] - that.deaths[rowId].valMin1);\n            sizeMin3 =  Math.max(data[Math.max(0, idx - 3 - that.state.recoverydays)] - that.deaths[rowId].valMin3);\n            sizeMin7 =  Math.max(data[Math.max(0, idx - 7 - that.state.recoverydays)] - that.deaths[rowId].valMin7);\n            if (size === \"\") {\n              size = 0;\n            }\n            if (sizeMin1 === \"\") {\n              sizeMin1 = 0;\n            }\n            if (sizeMin3 === \"\") {\n              sizeMin3 = 0;\n            }\n            if (sizeMin7 === \"\") {\n              sizeMin7 = 0;\n            }\n            size = Number(size);\n            sizeMin1 = Number(sizeMin1);\n            sizeMin3 = Number(sizeMin3);\n            sizeMin7 = Number(sizeMin7);\n            if (size > that.state.maxSize) {\n              that.state.maxSize = size;\n            }\n            let marker = {\n              markerOffset: 0,\n              name: data[0] ? data[0] + \", \" + data[1] : data[1],\n              coordinates: [data[3], data[2]],\n              size: size,\n              sizeMin1: sizeMin1,\n              sizeMin3: sizeMin3,\n              sizeMin7: sizeMin7,\n              val: size,\n              rowId: rowId,\n              valMin1: size - sizeMin1,\n              valMin3: size - sizeMin3,\n              valMin7: size - sizeMin7\n            };\n            that.totRec += size;\n            that.recovered.push(marker);\n            rowId++;\n          }\n          if(that.state.recoveryMode || that.state.datasource == \"jh\") {\n            that.state.setTotRec(that.totRec);\n          } else {\n            that.state.setTotRec(0);\n          }\n          for (let i = 0; i < that.recovered.length; i++) {\n            that.recoveredAbsByRowId[that.recovered[i].rowId] = that.recovered[i].size;\n            that.recovered[i].size = (that.recovered[i].size - minSize) / (that.state.maxSize - minSize);\n            that.recovered[i].momentumLast1 = that.recovered[i].size - (that.recovered[i].sizeMin1 - minSize) / (that.state.maxSize - minSize);\n            that.recovered[i].momentumLast3 = that.recovered[i].size - (that.recovered[i].sizeMin3 - minSize) / (that.state.maxSize - minSize);\n            that.recovered[i].momentumLast7 = that.recovered[i].size - (that.recovered[i].sizeMin7 - minSize) / (that.state.maxSize - minSize);\n          }\n        }\n        that.setState({});\n      }\n    });\n\n    if(recoveredDataSource) {\n      Papa.parse(recoveredDataSource, {\n        download: true,\n        complete: function (results) {\n          that.recovered = [];\n          let skipRow = true;\n          let minSize = 0;\n          let rowId = 0;\n          for (let data of results.data) {\n            if (skipRow) {\n              skipRow = false;\n              continue;\n            }\n            if(data.length === 1 ) {\n              continue;\n            }\n            let size = \"\";\n            let sizeMin1 = \"\";\n            let sizeMin3 = \"\";\n            let sizeMin7 = \"\";\n            let idx = data.length - 1 + that.state.dayOffset;\n            size = data[idx];\n            sizeMin1 = data[idx - 1];\n            sizeMin3 = data[idx - 3];\n            sizeMin7 = data[idx - 7];\n            if (size === \"\") {\n              size = 0;\n            }\n            if (sizeMin1 === \"\") {\n              sizeMin1 = 0;\n            }\n            if (sizeMin3 === \"\") {\n              sizeMin3 = 0;\n            }\n            if (sizeMin7 === \"\") {\n              sizeMin7 = 0;\n            }\n            size = Number(size);\n            sizeMin1 = Number(sizeMin1);\n            sizeMin3 = Number(sizeMin3);\n            sizeMin7 = Number(sizeMin7);\n            if (size > that.state.maxSize) {\n              that.state.maxSize = size;\n            }\n            let marker = {\n              markerOffset: 0,\n              name: data[0] ? data[0] + \", \" + data[1] : data[1],\n              coordinates: [data[3], data[2]],\n              size: size,\n              sizeMin1: sizeMin1,\n              sizeMin3: sizeMin3,\n              sizeMin7: sizeMin7,\n              val: size,\n              rowId: rowId,\n              valMin1: size - sizeMin1,\n              valMin3: size - sizeMin3,\n              valMin7: size - sizeMin7\n            };\n            that.totRec += size;\n            that.recovered.push(marker);\n            rowId++;\n          }\n          that.state.setTotRec(that.totRec);\n          for (let i = 0; i < that.recovered.length; i++) {\n            that.recoveredAbsByRowId[that.recovered[i].rowId] = that.recovered[i].size;\n            that.recovered[i].size = (that.recovered[i].size - minSize) / (that.state.maxSize - minSize);\n            that.recovered[i].momentumLast1 = that.recovered[i].size - (that.recovered[i].sizeMin1 - minSize) / (that.state.maxSize - minSize);\n            that.recovered[i].momentumLast3 = that.recovered[i].size - (that.recovered[i].sizeMin3 - minSize) / (that.state.maxSize - minSize);\n            that.recovered[i].momentumLast7 = that.recovered[i].size - (that.recovered[i].sizeMin7 - minSize) / (that.state.maxSize - minSize);\n          }\n          that.setState({});\n        }\n      });\n    }\n\n    Papa.parse(deceasedDataSource, {\n      download: true,\n      complete: function(results) {\n        that.deaths = [];\n        let skipRow = true;\n        let minSize = 0;\n        let rowId = 0;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          if(data.length === 1 ) {\n              continue;\n            }\n          let size = \"\";\n          let sizeMin1 = \"\";\n          let sizeMin3 = \"\";\n          let sizeMin7 = \"\";\n          let idx = data.length - 1 + that.state.dayOffset;\n          size = data[idx];\n          sizeMin1 = data[idx - 1];\n          sizeMin3 = data[idx - 3];\n          sizeMin7 = data[idx - 7];\n          if(size===\"\") {\n            size = 0;\n          }\n          if(sizeMin1===\"\") {\n            sizeMin1 = 0;\n          }\n          if(sizeMin3===\"\") {\n            sizeMin3 = 0;\n          }\n          if(sizeMin7===\"\") {\n            sizeMin7 = 0;\n          }\n          size = Number(size);\n          sizeMin1 = Number(sizeMin1);\n          sizeMin3 = Number(sizeMin3);\n          sizeMin7 = Number(sizeMin7);\n          if(size > that.state.maxSize) {\n            that.state.maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size,\n            sizeMin1: sizeMin1,\n            sizeMin3: sizeMin3,\n            sizeMin7: sizeMin7,\n            val: size,\n            rowId: rowId,\n            valMin1: size - sizeMin1,\n            valMin3: size - sizeMin3,\n            valMin7: size - sizeMin7\n          };\n          that.totDead += size;\n          that.deaths.push(marker);\n          rowId++;\n        }\n        that.state.setTotDead(that.totDead);\n        for(let i = 0; i < that.deaths.length; i++) {\n          // console.log(deaths[i].size + \", \" + minSize + \", \" + maxSize);\n          that.deathsAbsByRowId[that.deaths[i].rowId] = that.deaths[i].size;\n          that.deaths[i].size = (that.deaths[i].size - minSize) / (that.state.maxSize - minSize);\n          that.deathsByRowId[that.deaths[i].rowId] = that.deaths[i].size;\n          that.deaths[i].momentumLast1 = that.deaths[i].size - (that.deaths[i].sizeMin1 - minSize) / (that.state.maxSize - minSize);\n          that.deaths[i].momentumLast3 = that.deaths[i].size - (that.deaths[i].sizeMin3 - minSize) / (that.state.maxSize - minSize);\n          that.deaths[i].momentumLast7 = that.deaths[i].size - (that.deaths[i].sizeMin7 - minSize) / (that.state.maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n  };\n\n  onSelect(selectedList, selectedItem) {\n\n}\n\nonRemove(selectedList, removedItem) {\n\n}\n\n  render() {\n    let that = this;\n    let shownDate = new Date();\n    shownDate.setDate(shownDate.getDate() + this.state.dayOffset);\n\n    let dataOptions = [{name: 'Srigar', id: 1},{name: 'Sam', id: 2}];\n\n    return (\n      <>\n      <div className={\"small controls\" + (that.state.minimized ? \" minimized\" : \"\")}>\n        {/*<Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"none\" } label=\"Live situation\" type={\"radio\"} name={\"a\"} id={`inline-radio-4`} onClick={() => {that.setState({momentum: \"none\"});}} />\n        <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last1\" } label=\"Momentum last 1 day\" type={\"radio\"} name={\"b\"} id={`inline-radio-5`} onClick={() => {that.setState({momentum: \"last1\", chart: \"pie\"});}} />\n        <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last3\" } label=\"Momentum last 3 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-6`} onClick={() => {that.setState({momentum: \"last3\", chart: \"pie\"});}} />\n        <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last7\" } label=\"Momentum last 7 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-7`} onClick={() => {that.setState({momentum: \"last7\", chart: \"pie\"});}} />*/}\n        <button hidden={that.state.minimized} className={\"btn-collapse\"} onClick={() => {that.setState({minimized: true})}}>minimize <FontAwesomeIcon icon={faWindowMinimize}/></button>\n        <button hidden={!that.state.minimized} className={\"btn-collapse\"} onClick={() => {that.setState({minimized: false})}}>open</button>\n        <div hidden={that.state.minimized}>\n          <span className=\"small text-muted\">Mode:</span>\n          <Form.Control title={\"Live mode: Show live data (updated daily). Change: Show increase/decrease in numbers since last 1, 3 or 7 days.\"} value={that.state.momentum} style={{lineHeight: \"12px\", padding: \"0px\", fontSize: \"12px\", height: \"24px\"}} size=\"sm\" as=\"select\" onChange={(e) => {that.setState({momentum: e.nativeEvent.target.value, chart: \"pie\", testmode: false, testscale: 0});}}>\n            <option value=\"none\">Live</option>\n            <option value=\"last1\">Change since last 24 hours</option>\n            <option value=\"last3\">Change since last 3 days</option>\n            <option value=\"last7\">Change since last 7 days</option>\n          </Form.Control>\n          {/*<Multiselect\n            selectedValues={this.state.selectedData}\n            options={[\"projected\", \"confirmed\", \"recovered\", \"deceased\"]}\n            isObject={false}\n            placeholder={\"toggle data\"}\n            showCheckbox={true}\n          />*/}\n          <span className=\"small text-muted mr-2\">Normalization:</span>\n          <FontAwesomeIcon size={\"xs\"} icon={faQuestion} title={\"Scale the glyphs on the map according to different criteria.\"}/>\n          <br />\n          <Form.Check inline className=\"small\" checked={that.state.logmode} label={<span title={\"Scales the glyphs on the map logarithmically.\"}>Log</span>} type={\"checkbox\"} name={\"a\"} id={`inline-checkbox-2`}\n            onChange={() => {that.setState({logmode: !that.state.logmode});}} />\n          <Form.Check inline className=\"small\" checked={that.state.ppmmode} label={<span title={\"Scales the glyphs on the map according to the number of people in each country/region.\"}>Population</span>} type={\"checkbox\"} name={\"a\"} id={`inline-checkbox-3`}\n            onChange={() => {that.setState({ppmmode: !that.state.ppmmode});}} /><br />\n          {\n            that.state.momentum === \"none\" && !that.state.playmode &&\n            [\n              <span className=\"small text-muted mr-2\">Project testing rates:</span>,\n              <FontAwesomeIcon size={\"xs\"} icon={faQuestion} title={\"Display blue bubbles projecting how many confirmed cases there might be if local testing rate was coinciding with global average.\"}/>,\n              <br/>,\n              <ReactBootstrapSlider\n                  ticks={[0, 1, 2, 3]}\n                  ticks_labels = {[\"off\", \"global avg.\", \"x2\", \"x3\"]}\n                  value={this.state.testscale}\n                  change={e => {this.setState({ testscale: e.target.value, testmode: true });}}\n                  step={0.1}\n                  max={3}\n                  min={0}\n              ></ReactBootstrapSlider>,\n              <br />\n            ]\n          }\n          {\n            this.state.recoveryMode && that.state.datasource === \"jh2\" &&\n            [\n              <span className=\"small text-muted mr-2\">Number of days to recover:</span>,\n              <FontAwesomeIcon size={\"xs\"} icon={faQuestion}\n                               title={\"Johns Hopkins v2 does not report recovery data. Therefore we estimate recovery data by assuming patients recover after X days on average. This is early work and may be revised in line with new research.\"} />,\n              <br/>,\n              <ReactBootstrapSlider\n                  ticks={[6, 9, 12, 15, 18]}\n                  ticks_labels={[\"6\", \"9\", \"12\", \"15\", \"18\"]}\n                  value={this.state.recoverydays}\n                  change={e => {\n                    this.setState({recoverydays: e.target.value});\n                    this.reload();\n                  }}\n                  step={1}\n                  max={18}\n                  min={6}\n              ></ReactBootstrapSlider>\n            ]\n          }\n          <span className=\"small text-muted mr-2\">Bubble size:</span><br/>\n          <ReactBootstrapSlider value={this.state.factor} change={e => {this.setState({ factor: e.target.value, width: e.target.value / 10 });}} step={1} max={100} min={1}></ReactBootstrapSlider><br />\n          {/*<Form.Check inline title=\"Represent data as bubbles. Hover bubbles on map to see more details.\" className=\"small\" checked={that.state.chart===\"pie\" } label=\"Bubbles\" type={\"radio\"} name={\"a\"} id={`inline-radio-1`} onChange={() => {that.setState({chart: \"pie\"});}}/><br />*/}\n          {/*<Form.Check inline title=\"Represent data as vertical bars. Hover bars on map to see more details.\" className=\"small hideInMomentum\" checked={that.state.chart===\"bar\" } label=\"Bars\" type={\"radio\"} name={\"a\"} id={`inline-radio-2`} onChange={() => {that.setState({chart: \"bar\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/>\n          <Form.Check inline title=\"Represent data as horizontal pill. Hover pill on map to see more details.\" className=\"small hideInMomentum\" checked={that.state.chart===\"pill\" } label=\"Pills\" type={\"radio\"} name={\"a\"} id={`inline-radio-3`} onChange={() => {that.setState({chart: \"pill\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/><br />*/}\n          <span className=\"small text-muted\">Map style:</span><br/>\n          <Form.Control value={that.state.mapstyle} style={{lineHeight: \"12px\", padding: \"0px\", fontSize: \"12px\", height: \"24px\"}} size=\"sm\" as=\"select\" onChange={(e) => {that.setState({mapstyle: e.nativeEvent.target.value});}}>\n            <option value=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\">Light</option>\n            <option value=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\">Color</option>\n            <option value=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\">Dark</option>\n          </Form.Control>\n          <span className=\"small text-muted\">Data source:</span>\n          <Form.Control value={that.state.datasource} style={{lineHeight: \"12px\", padding: \"0px\", fontSize: \"12px\", height: \"24px\"}} size=\"sm\" as=\"select\" onChange={(e) => {that.state.datasource = e.nativeEvent.target.value; that.reset(); that.reload();}}>\n            <option value=\"jh2\">Johns Hopkins v2</option>\n            <option value=\"jh\">Johns Hopkins v1 until 03/23/2020</option>\n          </Form.Control>\n\n          <div className={\"credits\"}>\n            <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\" href={\"https://github.com/daniel-karl/covid19-map/issues\"}><FontAwesomeIcon icon={faBug} /> Issues</a></Badge>\n            <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\" href={\"https://github.com/daniel-karl/covid19-map#about\"}><FontAwesomeIcon icon={faQuestionCircle} /> About</a></Badge>\n            <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\" href={\"https://github.com/daniel-karl/covid19-map/blob/master/LICENSE.txt\"}><FontAwesomeIcon icon={faBalanceScale} /> License</a></Badge>\n          </div>\n        </div>\n      </div>\n      <div className=\"small timeline\">\n        <button disabled style={{color: \"black\", opacity: 1, pointerEvents: \"none\"}} className={\"btn btn-sm\"}><b>{shownDate.toLocaleDateString()}</b></button>\n        <button\n            className={this.state.dayOffset < 0 ? \"btn btn-sm btn-dark leftTime\" : \"btn btn-sm btn-outline-dark leftTime\"}\n            style={{height: \"30px\", lineHeight: \"20px\"}}\n            onClick={() => {\n              this.state.dayOffset = this.state.dayOffset - 1;\n              this.state.testmode = false;\n              this.reload();\n            }}\n        >Back</button>\n\n        <button\n            className={\"btn btn-sm btn-secondary midTime\"}\n            style={this.state.dayOffset < 0 && !this.state.playmode ? {height: \"30px\", lineHeight: \"20px\"} : {display: \"none\"}}\n            onClick={() => {\n              this.state.dayOffset = Math.min(0, this.state.dayOffset + 1);\n              if(this.state.dayOffset === 0) {\n                this.state.playmode = false;\n              } else {\n                this.state.testmode = false;\n              }\n              this.reload();\n            }}\n        >Forward</button>\n\n        <button\n            className={this.state.dayOffset < 0 ? \"btn btn-sm btn-outline-danger todayTime\" : \"btn btn-sm btn-danger todayTime\"}\n            style={{height: \"30px\", lineHeight: \"20px\"}}\n            onClick={()=>{\n              this.state.dayOffset = 0;\n              this.reload();\n            }}\n        >Today</button>\n\n        <button\n            className={\"btn btn-sm btn-success play\"}\n            style={{height: \"30px\", lineHeight: \"20px\"}}\n            onClick={()=>{\n              document.getElementsByClassName(\"todayTime\")[0].style.display = \"none\";\n              document.getElementsByClassName(\"play\")[0].style.display = \"none\";\n              document.getElementsByClassName(\"leftTime\")[0].style.display = \"none\";\n              document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n\n              var now = new Date();\n              var startDate = new Date(\"January 22, 2020 00:00:00\");\n              const oneDay = 24 * 60 * 60 * 1000;\n              this.state.dayOffset = - Math.round(Math.abs((now - startDate) / oneDay));\n              this.state.testmode = false;\n              this.state.playmode = true;\n              this.state.playpause = false;\n              this.state.lat = 0.01;//30.5928;\n              this.state.lng = 0.01;//114.3055;\n              this.state.zoom = 2.01;\n              let interval = setInterval(() => {\n                if(!that.state.playmode) {\n                  clearInterval(interval);\n                  this.state.dayOffset = 0;\n                  this.reload();\n                  return;\n                }\n                if(!this.state.playpause) {\n                  this.state.dayOffset++;\n                  this.reload();\n                  if(this.state.dayOffset === 0) {\n                    document.getElementsByClassName(\"todayTime\")[0].style.display = \"inline\";\n                    document.getElementsByClassName(\"play\")[0].style.display = \"inline\";\n                    document.getElementsByClassName(\"leftTime\")[0].style.display = \"inline\";\n                    document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n                    this.state.playmode = false;\n                    this.state.testscale = 0;\n                    this.setState({\n                      lat: 0,\n                      lng: 0,\n                      zoom: 1.99\n                    });\n                  }\n                }\n              }, 500);\n            }}\n        ><FontAwesomeIcon icon={faPlayCircle}/> Play</button>\n\n        <button\n            className={\"btn btn-sm pause \" + (this.state.playpause ? \"btn-success\" : \"btn-outline-dark\")}\n            style={this.state.playmode ? {height: \"30px\", lineHeight: \"20px\"} : {display : \"none\"}}\n            onClick={()=>{\n              this.state.playpause = !this.state.playpause;\n              this.reload();\n            }}\n        >\n          {\n            !this.state.playpause &&\n            [<FontAwesomeIcon icon={faPauseCircle}/>, \" Pause\"]\n          }\n          {\n            this.state.playpause &&\n            [<FontAwesomeIcon icon={faPlayCircle}/>, \" Continue\"]\n          }\n        </button>\n\n        <button\n            className={\"btn btn-sm btn-danger stop\"}\n            style={this.state.playmode ? {height: \"30px\", lineHeight: \"20px\"} : {display : \"none\"}}\n            onClick={()=>{\n              document.getElementsByClassName(\"todayTime\")[0].style.display = \"inline\";\n              document.getElementsByClassName(\"play\")[0].style.display = \"inline\";\n              document.getElementsByClassName(\"leftTime\")[0].style.display = \"inline\";\n              document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n              this.state.playmode = false;\n              this.state.testscale = 0;\n              this.setState({\n                lat: 0,\n                lng: 0,\n                zoom: 1.99\n              });\n            }}\n        ><FontAwesomeIcon icon={faStopCircle}/> Stop</button>\n      </div>\n      {\n        that.state.momentum !== \"none\" &&\n        <style dangerouslySetInnerHTML={{__html: `\n          .hideInMomentum {\n            display: none !important;\n          }\n          .showInMomentum {\n            display: block !important;\n          }\n        `}} />\n      }\n        { /*that.reactSimpleMap()*/ }\n        { that.leafletMap() }\n\n    </>\n    );\n  }\n\n  leafletMap = () => {\n    const position = [this.state.lat, this.state.lng];\n    return (\n      <Map ref={(ref) => { this.map = ref}} center={position} zoom={this.state.zoom} zoomControl={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          // url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n          // url='https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png'\n            url={this.state.mapstyle}\n        />\n\n        { /* this.mapLabels() */ }\n\n        <LayerGroup key={5}>\n          { this.momentumMarkers()  }\n        </LayerGroup>\n\n        <LayerGroup key={4} className={\"deceasedLayer\"}>\n          { this.projectedMarkers() }\n        </LayerGroup>\n\n        <LayerGroup key={3} className={\"deceasedLayer\"}>\n          { this.confirmedMarkers() }\n        </LayerGroup>\n\n        <LayerGroup key={2} className={\"recoveredLayer\"}>\n          { (this.state.recoveryMode || this.state.datasource == \"jh\") && this.recoveredMarkers() }\n        </LayerGroup>\n\n        <LayerGroup key={1} className={\"deceasedLayer\"}>\n          { this.deceasedMarkers() }\n        </LayerGroup>\n      </Map>\n    );\n  };\n\n  /*reactSimpleMap = () => {\n    return(\n        <ComposableMap\n        projection={\"geoMercator\"}\n        projectionConfig={{scale: 200}}\n        height={window.innerWidth}\n        width={window.innerHeight - 50}\n        style={{width: \"100%\", height: \"100%\"}}\n      >\n        <ZoomableGroup maxZoom={1000}>\n          { this.geographies() }\n          { this.momentumMarkers() }\n          { this.projectedMarkers() }\n          { this.confirmedMarkers() }\n          { this.mapLabels() }\n          { this.recoveredMarkers() }\n          { this.deceasedMarkers() }\n        </ZoomableGroup>\n      </ComposableMap>\n    )\n  };*/\n\n  /*geographies = () => {\n    return (\n      <Geographies geography={geoUrl}>\n            {\n              ({geographies}) =>\n                geographies.map(geo => (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      const {NAME} = geo.properties;\n                      if(NAME === \"Antarctica\") {\n                        return;\n                      }\n                      let rowId = -1;\n                      for(let c of this.confirmed) {\n                        if(c.name === NAME) {\n                          rowId = c.rowId;\n                          break;\n                        }\n                      }\n                      if(rowId < 0) {\n\t\t\tif (NAME === \"United States of America\") {\n\t\t          this.get_sums(NAME, \", US\");\n\t\t        }\n\t\t\t      else if (NAME === \"China\") {\n\t\t          this.get_sums(NAME, \", China\");\n\t\t        }\n\t\t\t      else if (NAME === \"Australia\") {\n\t\t          this.get_sums(NAME, \", Australia\");\n\t\t        }\n\t\t\t      else if (NAME === \"Canada\") {\n\t\t          this.get_sums(NAME, \", Canada\");\n\t\t        }\n\t\t\t      else if (NAME === \"France\") {\n\t\t          this.get_sums(NAME, \", France\");\n\t\t        }\n\n\t\t\t      else { this.state.setTooltipContent(`Could not retrieve data for ${NAME}.`); }\n                      } else {\n                        let active = this.confirmed[rowId].val - this.recoveredAbsByRowId[rowId] - this.deathsAbsByRowId[rowId];\n                        this.state.setTooltipContent(\n                          <div>\n                            <b>{NAME}</b> &nbsp;\n                            <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[NAME])}</span><br />\n                            <span><FontAwesomeIcon icon={faBiohazard}/> {rounded(this.confirmed[rowId].val)} confirmed (>{rounded(this.projected[rowId].val)} at avg. test rate)</span><br/>\n                            <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                            &nbsp;<span><FontAwesomeIcon icon={faHeartbeat}/> {rounded(this.recovered[rowId].val)} recovered</span>\n                            &nbsp;<span><FontAwesomeIcon icon={faHeartBroken}/> {rounded(this.deaths[rowId].val)} deceased</span>\n                          </div>\n                        );\n                      }\n                    }}\n                    onMouseLeave={() => {\n                      this.state.setTooltipContent(\"\");\n                    }}\n                    style={{\n                      default: {\n                        fill: `#ddd`,\n                        outline: \"none\"\n                      },\n                      hover: {\n                        fill: `#999` ,\n                        outline: \"none\"\n                      },\n                      pressed: {\n                        fill: `#ddd`,\n                        outline: \"none\"\n                      }\n                    }}\n                  />\n                ))\n            }\n          </Geographies>\n    )\n  };*/\n\n  momentumMarkers = () => {\n    return (\n      this.state.momentum !== \"none\" &&\n      this.confirmed.map(({rowId, name, coordinates, markerOffset, momentumLast1, momentumLast3, momentumLast7, valMin1, valMin3, valMin7}) => {\n        let pop = Population.ABSOLUTE[name];\n        let size;\n        let val;\n        switch (this.state.momentum) {\n          case \"last1\":\n            size = momentumLast1 - this.recovered[rowId].momentumLast1;\n            val = valMin1 - this.recovered[rowId].valMin1;\n            break;\n          case \"last3\":\n            size = momentumLast3 - this.recovered[rowId].momentumLast3;\n            val = valMin3 - this.recovered[rowId].valMin3;\n            break;\n          case \"last7\":\n            size = momentumLast7 - this.recovered[rowId].momentumLast7;\n            val = valMin7 - this.recovered[rowId].valMin7;\n            break;\n          default:\n            alert(\"something went wrong\");\n            console.log(\"something went wrong\");\n            break;\n        }\n        let pos = size >= 0;\n        size = Math.abs(size);\n        size = this.scaleLog(size);\n        size = this.scalePpm(size, pop);\n        size = this.scaleLogAndPpm(size);\n        if (size > 0 && name !== \"US, US\") {\n          return (\n              <CircleMarker\n                  key={\"change_\" + rowId}\n                  style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n                  center={[coordinates[1], coordinates[0]]}\n                  fillColor={pos ? \"#FF0000\" : \"#00FF00\"}\n                  radius={isNaN(size) ? 0 : Math.sqrt(size) * this.state.factor}\n                  opacity={0}\n                  fillOpacity={0.5}\n              />\n          );\n        }\n        return \"\";\n      })\n    )\n  };\n\n  /*<Marker coordinates={coordinates} key={\"change_\" + rowId}>\n              <circle r={isNaN(size)?0:Math.sqrt(size) * this.state.factor} fill={pos ? \"#F008\" : \"#0F08\"} />\n              <title>\n                {`${name} - ${Math.abs(val)} ${pos ? \"INCREASE\" : \"DECREASE\"} in active(= confirmed-recovered) cases (excl. deceased) (${Math.round(ONE_M*val/pop)} ppm)`\n                }\n              </title>\n              <text\n                textAnchor=\"middle\"\n                y={markerOffset}\n                style={{ fontSize: name.endsWith(\", US\") ? \"0.005em\" : \"2px\", fontFamily: \"Arial\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n              >\n                {name}\n              </text>\n            </Marker>*/\n\n  projectedMarkers = () => {\n    return (\n      this.state.momentum===\"none\" && this.state.testmode &&\n        this.projected.map(({ rowId, name, coordinates, markerOffset, size, val }) => {\n          let color = \"#00f\";\n          let pop = Population.ABSOLUTE[name];\n          let active = val - this.recoveredAbsByRowId[rowId] - this.deathsAbsByRowId[rowId];\n          size = this.scale(size, pop);\n          size = size * this.state.testscale;\n          let ppms = pop && !isNaN(val) ? '(' + Math.round(ONE_M * val / pop) + ' ppm)'  : '';\n          let ppms2 = pop && !isNaN(active) ? '(' + Math.round(ONE_M * active / pop) + ' ppm)'  : '';\n          let text = `${name} - could be >${rounded(val)} confirmed ${ppms}, >${rounded(active)} active ${ppms2} if local test rate was like global average test rate`;\n          return this.marker(coordinates, rowId, color, text, size, val, name, markerOffset, \"projected\", 0.5);\n        })\n    )\n  };\n\n  confirmedMarkers = () => {\n    return (\n      this.state.momentum===\"none\" &&\n        this.confirmed.map(({ rowId, name, coordinates, markerOffset, size, val }) => {\n          let color = \"#F00\";\n          let pop = Population.ABSOLUTE[name];\n          let active = val - this.recoveredAbsByRowId[rowId] - this.deathsAbsByRowId[rowId];\n          size = this.scale(size, pop);\n          let ppms = pop && !isNaN(val) ? '(' + Math.round(ONE_M * val / pop) + ' ppm)'  : '';\n          let ppms2 = pop && !isNaN(active) ? '(' + Math.round(ONE_M * active / pop) + ' ppm)'  : '';\n          let text = `${name} - ${rounded(val)} confirmed ${ppms}, ${rounded(active)} active ${ppms2}`;\n          return this.marker(coordinates, rowId, color, text, size, val, name, markerOffset, \"confirmed\", 0.5);\n        })\n    )\n  };\n\n  mapLabels = () => {\n    return (\n      this.confirmed.map(({ rowId, name, coordinates, markerOffset, size }) => {\n        if (size > 0) {\n          return (<Marker coordinates={coordinates} key={\"label_\" + rowId}>\n            <text\n                textAnchor=\"middle\"\n                y={markerOffset}\n                style={{\n                  fontSize: name.endsWith(\", US\") ? \"1.5px\" : \"2px\",\n                  fontFamily: \"Arial\",\n                  fill: \"#5D5A6D33\",\n                  pointerEvents: \"none\"\n                }}\n            >\n              {name}\n            </text>\n          </Marker>)\n        }\n        else {\n          return (\"\");\n        }\n      })\n    )\n  };\n\n  recoveredMarkers = () => {\n    return (\n      this.state.momentum===\"none\" &&\n        this.recovered.map(({rowId, name, coordinates, markerOffset, size, val }) => {\n          let color = \"#0F0\";\n          let pop = Population.ABSOLUTE[name];\n          if (this.state.chart === \"pie\" || this.state.chart === \"pill\") {\n            size += this.deathsByRowId[rowId];\n          }\n          size = this.scale(size, pop);\n          let ppms = pop && !isNaN(val) ? '(' + Math.round(ONE_M * val / pop) + ' ppm)' : '';\n          let text = name + \" - \" + rounded(val) + \" recovered \" + ppms;\n          return this.marker(coordinates, rowId, color, text, size, val, name, markerOffset, \"recovered\", 0.5);\n        })\n    )\n  };\n\n  deceasedMarkers = () => {\n    return(\n        this.state.momentum===\"none\" &&\n          this.deaths.map(({rowId, name, coordinates, markerOffset, size, val }) => {\n            let color = \"#000\";\n            let pop = Population.ABSOLUTE[name];\n            size = this.scale(size, pop);\n            let ppms = pop && !isNaN(val) ? '(' + Math.round(ONE_M * val / pop) + ' ppm)'  : '';\n            let text = name + \" - \" + rounded(val) + \" deceased \" + ppms;\n            return this.marker(coordinates, rowId, color, text, size, val, name, markerOffset, \"deceased\", 0.8);\n        })\n    )\n  };\n\n  marker = (coordinates, rowId, color, text, size, val, name, markerOffset, type, opacity) => {\n    if(size > 0 && name !== \"US, US\") {\n      return (\n        // bubble\n        <CircleMarker\n          className={type}\n          key={type + \"_\" + rowId}\n          style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n          center={[coordinates[1], coordinates[0]]}\n          fillColor={color}\n          radius={size && size > 0 ? Math.sqrt(size) * this.state.factor : 0}\n          opacity={0}\n          fillOpacity={opacity}\n        >\n          <Tooltip direction=\"bottom\" offset={[0, 20]} opacity={1}>\n            {this.tooltip(name, rowId)}\n          </Tooltip>\n        </CircleMarker>\n      );\n    }\n    return \"\";\n  };\n\n\n  tooltip = (name, rowId) => {\n    try {\n      let confirmed = this.confirmed[rowId].val;\n      let projected = this.projected[rowId].val;\n      let recovered = this.recovered[rowId].val;\n      let deaths = this.deaths[rowId].val;\n      let active = this.confirmed[rowId].val - this.recoveredAbsByRowId[rowId] - this.deathsAbsByRowId[rowId];\n\n      let g1 = 0.5 * this.confirmed[rowId].momentumLast1 / this.confirmed[rowId].size; // difference between current and last 1\n      let g3 = 0.3 * this.confirmed[rowId].momentumLast3 / this.confirmed[rowId].size; // difference between current and last 3\n      let g7 = 0.2 * this.confirmed[rowId].momentumLast7 / this.confirmed[rowId].size; // difference between current and last 7\n      let g = (g1 + g3 + g7);\n      if(g >= 1) {\n        g = 0;\n      }\n      else if(g >= 0.5) {\n        g = 1;\n      }\n      else if(g >= 0.2) {\n        g = 2;\n      }\n      else if(g >= 0.1) {\n        g = 3;\n      }\n      else if(g >= 0.05) {\n        g = 4;\n      }\n      else if(g >= 0.02) {\n        g = 5;\n      }\n      else if(g >= 0.01) {\n        g = 6;\n      }\n      else if(g >= 0.005) {\n        g = 7;\n      }\n      else if(g >= 0.002) {\n        g = 8;\n      }\n      else if(g >= 0.001) {\n        g = 9;\n      }\n      else if(g >= 0.0) {\n        g = 10;\n      }\n      else {\n        g = \"N/A\";\n      }\n\n      let d1 = 0.7 * this.deaths[rowId].momentumLast1; // death factor\n      let d3 = 0.2 * this.deaths[rowId].momentumLast3; // death factor\n      let d7 = 0.1 * this.deaths[rowId].momentumLast7; // death factor\n      let d = (d1 ? d1 : 0 + d3 ? d3 : 0 + d7 ? d7 : 0);\n      if(d <= 0) {\n        d = 10;\n      }\n      else if(d <= 0.001) {\n        d = 9;\n      }\n      else if(d <= 0.002) {\n        d = 8;\n      }\n      else if(d <= 0.005) {\n        d = 7;\n      }\n      else if(d <= 0.01) {\n        d = 6;\n      }\n      else if(d <= 0.02) {\n        d = 5;\n      }\n      else if(d <= 0.022) {\n        d = 4;\n      }\n      else if(d <= 0.24) {\n        d = 3;\n      }\n      else if(d <= 0.26) {\n        d = 2;\n      }\n      else if(d <= 0.28) {\n        d = 1;\n      }\n      else {\n        d = 0;\n      }\n\n      let stayAtHomeScore = Math.round(g);\n      if(confirmed < 1 || !stayAtHomeScore) {\n        stayAtHomeScore = \"N/A\";\n      }\n\n      let lifeSaverScore = Math.round(d);\n      if(deaths < 1 && confirmed > 0) {\n        lifeSaverScore = \"10\";\n      }\n      else if(deaths < 1) {\n        lifeSaverScore = \"N/A\";\n      }\n      return (\n        <div>\n          <div>\n              <b>{name}</b><br />\n              <FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])} &middot; <FontAwesomeIcon icon={faBiohazard}/> {rounded(confirmed)} &middot; <FontAwesomeIcon icon={faBolt}/> {rounded(1000000*confirmed/Population.ABSOLUTE[name])} ppm\n          </div>\n          <div>\n            {\n              (this.state.recoveryMode || this.state.datasource == \"jh\") &&\n              [\n                <Badge variant={\"danger\"}><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</Badge>,\n                <Badge className=\"ml-1 mr-1\" variant={\"success\"}><FontAwesomeIcon icon={faHeartbeat}/> {rounded(recovered)} recovered</Badge>\n              ]\n            }\n            <Badge variant={\"dark\"}><FontAwesomeIcon icon={faHeartBroken}/> {rounded(deaths)} deceased</Badge><br />\n            {\n              projected > confirmed && this.state.testmode && this.state.testscale > 0 &&\n              <Badge variant={\"primary\"}><FontAwesomeIcon icon={faBiohazard}/> &gt;{rounded(projected)} projected at global avg. testing rate</Badge>\n            }\n          </div>\n          <div className=\"stayAtHomeScoreLabel\">\n            {\n              [\n                <span className=\"stayAtHomeAdvice\">{this.stayAtHomeAdvice(active)}</span>,\n                <br/>\n              ]\n            }\n            <table>\n              <tbody>\n                <tr>\n                  <td valign={\"top\"}>\n                    <div className={`stayAtHomeScore stayAtHomeScore${stayAtHomeScore}`}>\n                      {stayAtHomeScore}{stayAtHomeScore !== \"N/A\" ? \"/10\" : \"\"}\n                    </div>\n                  </td>\n                  <td>\n                    <div>\n                      Score reflects how well this region contained<br/>\n                      the spread of COVID19 over the past 14 days.<br/>\n                    </div>\n                  </td>\n                </tr>\n                {/*<tr>\n                  <td valign={\"top\"}>\n                    <div className={`stayAtHomeScore stayAtHomeScore${lifeSaverScore}`}>\n                      {lifeSaverScore}{lifeSaverScore !== \"N/A\" ? \"/10\" : \"\"}\n                    </div>\n                  </td>\n                  <td>\n                    <div>\n                      <i>LifeSaver Score</i> reflects how well this region mitigated<br/>\n                      increasing fatalities from COVID19 in relation to their<br />\n                      local threat level over the past 7 days.\n                    </div>\n                  </td>\n                </tr>*/}\n                <tr>\n                  <td></td>\n                  <td><b>Continue to follow the advice of the WHO<br/>and your local administration.</b></td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td>ppm: confirmed cases per one million people</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )\n    } catch(e) {\n      return \"Could not load tooltip data.\";\n    }\n  };\n\n  stayAtHomeAdvice = (active) => {\n    if(active > 150) {\n      return \"You save lives by staying at home today!\"\n    }\n    if (active > 0) {\n      return \"Avoid crowds! Keep social distance!\";\n    }\n    return \"No active cases detected in this region.\";\n  };\n\n      /*\n\n        <Marker coordinates={coordinates} key={type + \"_\" + rowId}>\n          // pill\n          <rect\n              fill={color + transparency}\n              style={this.state.chart === \"pill\" ? {display: \"block\"} : {display: \"none\"}}\n              x={isNaN(size) ? 0 : -size * this.state.factor / 2}\n              y={-this.state.width / 2 * 3}\n              height={(this.state.width < 0) ? 0 : this.state.width * 3}\n              width={isNaN(size) ? 0 : (size * this.state.factor > 0) ? size * this.state.factor : 0}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          // bar\n          <rect\n              fill={color + transparency}\n              style={this.state.chart === \"bar\" ? {display: \"block\"} : {display: \"none\"}}\n              x={this.state.width * 3 * 2 - this.state.width * 3 * 1.5}\n              y={isNaN(size) ? 0 : -size * this.state.factor}\n              height={isNaN(size) ? 0 : (size * this.state.factor < 0) ? 0 : size * this.state.factor}\n              width={(this.state.width < 0) ? 0 : this.state.width * 3}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          // bubble\n          <circle\n              fill={color + transparency}\n              style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n              r={size && size > 0 ? Math.sqrt(size) * this.state.factor : 0}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          <title>{text}</title>\n        </Marker>\n      */\n\n  scale = (value, population) => {\n    value = this.scaleIfPillOrBar(value);\n    value = this.scaleLog(value);\n    value = this.scalePpm(value, population);\n    value = this.scaleLogAndPpm(value);\n    return value;\n  };\n\n  scaleIfPillOrBar = (value) => {\n    if(this.state.chart===\"pill\" || this.state.chart===\"bar\") {\n      return value * 10;\n    }\n    return value;\n  };\n\n  scaleLog = (value) => {\n    if(!this.state.logmode) {\n      return value;\n    }\n    if(value > 0) {\n      return Math.log(value * 10000) / 100;\n    }\n    return 0;\n  };\n\n  scalePpm = (value, population) => {\n    if(!this.state.ppmmode) {\n      return value;\n    }\n    if(population) {\n      if((value > 0)&&(population>ONE_M)) {\n        return ONE_M * value / population * 10;\n      }\n    }\n    return 0;\n  };\n\n  scaleLogAndPpm = (value) => {\n    if(this.state.logmode && this.state.ppmmode) {\n      return value / 10;\n    }\n    return value;\n  };\n\n  sleep = async (msec) => {\n    return new Promise(resolve => setTimeout(resolve, msec));\n  }\n\n}\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDotCircle} from '@fortawesome/free-regular-svg-icons';\nimport { faGlobe} from '@fortawesome/free-solid-svg-icons';\n\nconst rounded = (num) => {\n    if (num > 1000000000) {\n        return Math.round(num / 100000000) / 10 + \"Bn\";\n    } else if (num > 1000000) {\n        return Math.round(num / 100000) / 10 + \"M\";\n    } else {\n        return Math.round(num / 100) / 10 + \"K\";\n    }\n};\n\nfunction App() {\n  const [totConf, setTotConf] = useState(0);\n  const [totRec, setTotRec] = useState(0);\n  const [totDead, setTotDead] = useState(0);\n\n  return (\n    [\n      <Navbar bg=\"light\" fixed=\"top\" className={\"p-0 pl-2\"} expand={\"xs\"}>\n        <Navbar.Brand>\n            <span className=\"small\">C<FontAwesomeIcon icon={faDotCircle} />VID19 </span>\n        </Navbar.Brand>\n          <span>\n            <span className={\"small text-muted mr-3\"}><FontAwesomeIcon icon={faGlobe} /></span>\n            <span className={\"small text-danger mr-3\"}>{rounded(totConf)}</span>\n            {\n              totRec > 0 &&\n              <span className={\"small text-success mr-3\"}>{rounded(totRec)}</span>\n            }\n            <span className={\"small mr-3\"}>{rounded(totDead)}</span>\n          </span>\n      </Navbar>,\n      <Container fluid className={\"w-100 h-100 p-0\"}>\n        <Row noGutters={\"true\"} className={\"h-100\"}>\n          <Col className={\"h-100\"}>\n            <MapChart\n                key={\"mapChart\"}\n                style={{marginTop: \"50px\"}}\n                setTotConf={setTotConf}\n                setTotRec={setTotRec}\n                setTotDead={setTotDead}\n            />\n          </Col>\n        </Row>\n      </Container>\n    ]\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}