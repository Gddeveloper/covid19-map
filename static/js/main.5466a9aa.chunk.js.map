{"version":3,"sources":["MapChart.js","App.js","index.js"],"names":["confirmed","recovered","deaths","MapChart","props","state","setTooltipContent","chart","that","this","Papa","parse","download","complete","results","skipRow","maxSize","data","size","i","length","Number","marker","markerOffset","name","coordinates","push","console","log","setState","Form","key","className","Check","inline","label","type","id","onClick","projection","height","window","innerWidth","width","innerHeight","style","zoom","maxZoom","geography","geographies","map","geo","rsmKey","onMouseEnter","num","properties","NAME","POP_EST","Math","round","onMouseLeave","default","fill","outline","hover","pressed","display","x","WIDTH","y","r","textAnchor","fontSize","fontFamily","React","Component","memo","App","useState","content","setContent","hidden","setHidden","Navbar","bg","fixed","expand","Brand","icon","faUserMd","Toggle","aria-controls","Collapse","Nav","Link","href","faDatabase","faCode","Container","fluid","Row","noGutters","Col","marginTop","class","Date","toLocaleDateString","toLocaleTimeString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5466a9aa.chunk.js","sourcesContent":["import React, { memo} from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker\n} from \"react-simple-maps\";\n\nimport Papa from \"papaparse\";\nimport Form from 'react-bootstrap/Form';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-10m.json\";\n\nconst confirmed = [];\nconst recovered = [];\nconst deaths = [];\nconst MAX_SIZE = 67786;\n\nconst FACTOR = 20;\nconst WIDTH = 1;\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nclass MapChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTooltipContent: props.setTooltipContent,\n      chart: \"pie\"\n    }\n  }\n\n  componentDidMount() {\n    let that = this;\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv\", {\n      download: true,\n      complete: function(results) {\n        that.confirmed = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          size = Number(size);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size\n          };\n          confirmed.push(marker)\n        }\n        console.log(maxSize);\n        for(let i = 0; i < confirmed.length; i++) {\n          confirmed[i].size = (confirmed[i].size - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv\", {\n      download: true,\n      complete: function(results) {\n        that.recovered = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          size = Number(size);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size\n          };\n          recovered.push(marker)\n        }\n\n        for(let i = 0; i < recovered.length; i++) {\n          // console.log(recovered[i].size + \", \" + minSize + \", \" + maxSize);\n          recovered[i].size = (recovered[i].size - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv\", {\n      download: true,\n      complete: function(results) {\n        that.deaths = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          size = Number(size);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size\n          };\n          deaths.push(marker)\n        }\n\n        for(let i = 0; i < deaths.length; i++) {\n          // console.log(deaths[i].size + \", \" + minSize + \", \" + maxSize);\n          deaths[i].size = (deaths[i].size - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n  }\n\n  render() {\n    let that = this;\n    return (\n      <>\n      <Form>\n        <div key={`inline-checkbox`} className=\"ml-3 small\">\n          <Form.Check inline label=\"Pie chart\" type={\"checkbox\"} id={`inline-checkbox-1`} onClick={() => {that.setState({chart: \"bar\"});}}/>\n          <Form.Check inline label=\"Bar chart\" type={\"checkbox\"} id={`inline-checkbox-2`} onClick={() => {that.setState({chart: \"pie\"});}} />\n        </div>\n      </Form>\n      <ComposableMap\n          projection={\"geoMercator\"}\n          height={window.innerWidth}\n          width={window.innerHeight - 50}\n          style={{width: \"100%\", height: \"100%\"}}\n      >\n        <ZoomableGroup zoom={1} maxZoom={1000}>\n          <Geographies geography={geoUrl}>\n            {\n              ({geographies}) =>\n                geographies.map(geo => (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      const {NAME, POP_EST} = geo.properties;\n                      if(NAME === \"Antarctica\") {\n                        return;\n                      }\n                      this.state.setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\n                    }}\n                    onMouseLeave={() => {\n                      this.state.setTooltipContent(\"\");\n                    }}\n                    style={{\n                      default: {\n                        fill: \"#ddd\",\n                        outline: \"none\"\n                      },\n                      hover: {\n                        fill: \"#999\",\n                        outline: \"none\"\n                      },\n                      pressed: {\n                        fill: \"#ddd\",\n                        outline: \"none\"\n                      }\n                    }}\n                  />\n                ))\n            }\n          </Geographies>\n          {\n            confirmed.map(({ name, coordinates, markerOffset, size }) => (\n              <Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#F00\"}} : {display: \"none\", hover: {fill: \"#F00\"}}} x={WIDTH * 0 - WIDTH * 1.5} y={-size * FACTOR / WIDTH} width={WIDTH} height={size * FACTOR / WIDTH} fill=\"#F008\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#F00\"}} : {display: \"none\", hover: {fill: \"#F00\"}}} r={size * 10} fill=\"#F008\" />\n                <title>{name}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: \"2px\", fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n                >\n                  {/*name*/}\n                </text>\n              </Marker>\n            ))\n          }\n          {\n            recovered.map(({ name, coordinates, markerOffset, size }) => (\n              <Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#0F0\"}} : {display: \"none\", hover: {fill: \"#0F0\"}}} x={WIDTH * 1 - WIDTH * 1.5} y={-size * FACTOR / WIDTH} width={WIDTH} height={size * FACTOR / WIDTH} fill=\"#0F08\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#0F0\"}} : {display: \"none\", hover: {fill: \"#0F0\"}}} r={size * 10} fill=\"#0F08\" />\n                <title>{name}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: \"2px\", fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n                >\n                  {/*name*/}\n                </text>\n              </Marker>\n            ))\n          }\n          {\n            deaths.map(({ name, coordinates, markerOffset, size }) => (\n              <Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#000\"}} : {display: \"none\", hover: {fill: \"#000\"}}} x={WIDTH * 2 - WIDTH * 1.5} y={-size * FACTOR / WIDTH} width={WIDTH} height={size * FACTOR / WIDTH} fill=\"#0008\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#000\"}} : {display: \"none\", hover: {fill: \"#000\"}}} r={size * 5} fill=\"#0008\" />\n                <title>{name}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: \"2px\", fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n                >\n                  {/*name*/}\n                </text>\n              </Marker>\n            ))\n          }\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n    );\n  }\n}\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserMd, faDatabase, faCode } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  const [hidden, setHidden] = useState(false);\n  return (\n    [\n      <Navbar bg=\"light\" fixed=\"top\" className={\"p-0 pl-2\"}  expand=\"lg\">\n        <Navbar.Brand>\n            <FontAwesomeIcon icon={faUserMd} />\n            <span className=\"small\"> COVID19 </span>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className={\"border-0 \"} />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <span className=\"small text-danger\">Map data responsibly!</span>\n          <Nav className=\"mr-auto\">\n            <Nav.Link className=\"small\" href={\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series\"}>\n              <FontAwesomeIcon icon={faDatabase} /> Data source\n            </Nav.Link>\n            <Nav.Link className=\"small\" href={\"https://github.com/daniel-karl/covid19-map\"}>\n              <FontAwesomeIcon icon={faCode} /> Source code\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>,\n      <Container fluid className={\"w-100 h-100 p-0\"}>\n        <Row noGutters={\"true\"} className={\"h-100\"}>\n          <Col className={\"h-100\"}>\n            <MapChart setTooltipContent={setContent} style={{marginTop: \"50px\"}}/>\n            <ReactTooltip>{content}</ReactTooltip>\n          </Col>\n        </Row>\n      </Container>,\n      <div className=\"info small text-muted\" style={hidden ? {display: \"none\"} : {display:\"block\"}} onClick={() => {setHidden(true)}}>\n        <span class=\"text-danger\">Red: confirmed</span><br />\n        <span class=\"text-success\">Green: recovered</span><br />\n        <span class=\"text-dark\">Black: deceased</span><br />\n        <sub>\n          Using live data from John Hopkins repository.<br />\n          Last synchronized on:<br />\n          {new Date().toLocaleDateString()}<br />\n          {new Date().toLocaleTimeString()}<br />\n        </sub>\n      </div>\n    ]\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}