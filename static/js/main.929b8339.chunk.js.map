{"version":3,"sources":["MapChart.js","App.js","index.js"],"names":["deathsByRowId","recoveredAbsByRowId","deathsAbsByRowId","confirmed","recovered","deaths","totConf","totRec","totDead","MapChart","props","state","setTooltipContent","setTotConf","setTotRec","setTotDead","chart","factor","width","jhmode","momentum","that","this","Papa","parse","download","complete","results","skipRow","maxSize","rowId","data","size","sizeMin1","sizeMin3","sizeMin7","i","length","Number","marker","markerOffset","name","coordinates","val","valMin1","valMin3","valMin7","push","console","log","momentumLast1","momentumLast3","momentumLast7","setState","Form","className","Check","inline","checked","label","type","id","onClick","disabled","Control","style","lineHeight","padding","fontSize","height","as","onChange","e","nativeEvent","target","value","selected","change","step","max","min","color","background","dangerouslySetInnerHTML","__html","projection","projectionConfig","scale","window","innerWidth","innerHeight","maxZoom","geography","geographies","map","geo","key","rsmKey","onMouseEnter","num","properties","NAME","POP_EST","Math","round","onMouseLeave","default","fill","outline","hover","pressed","indexOf","pos","abs","r","sqrt","textAnchor","y","endsWith","fontFamily","pointerEvents","active","display","x","React","Component","memo","date","Date","rounded","App","useState","content","setContent","hidden","setHidden","Navbar","bg","fixed","expand","Brand","icon","faDotCircle","Container","fluid","Row","noGutters","Col","marginTop","href","faDatabase","toLocaleDateString","toLocaleTimeString","faCode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.929b8339.chunk.js","sourcesContent":["import React, { memo} from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker\n} from \"react-simple-maps\";\n\nimport Papa from \"papaparse\";\nimport Form from 'react-bootstrap/Form';\nimport ReactBootstrapSlider from \"react-bootstrap-slider\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-10m.json\";\n\nconst deathsByRowId = {};\nconst recoveredAbsByRowId = {};\nconst deathsAbsByRowId = {};\n\nconst confirmed = [];\nconst recovered = [];\nconst deaths = [];\nconst MAX_SIZE = 67786;\n\nlet totConf = 0;\nlet totRec = 0;\nlet totDead = 0;\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nclass MapChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      setTooltipContent: props.setTooltipContent,\n      setTotConf: props.setTotConf,\n      setTotRec: props.setTotRec,\n      setTotDead: props.setTotDead,\n      chart: \"pie\",\n      factor: 20,\n      width: 2,\n      jhmode: false,\n      momentum: \"none\"\n    }\n  }\n\n  componentDidMount() {\n    let that = this;\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv\", {\n      download: true,\n      complete: function(results) {\n        that.confirmed = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        let rowId = 0;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let sizeMin1 = \"\";\n          let sizeMin3 = \"\";\n          let sizeMin7 = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            sizeMin1 = data[i - 1];\n            sizeMin3 = data[i - 3];\n            sizeMin7 = data[i - 7];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          if(sizeMin1===\"\") {\n            sizeMin1 = 0;\n          }\n          if(sizeMin3===\"\") {\n            sizeMin3 = 0;\n          }\n          if(sizeMin7===\"\") {\n            sizeMin7 = 0;\n          }\n          size = Number(size);\n          sizeMin1 = Number(sizeMin1);\n          sizeMin3 = Number(sizeMin3);\n          sizeMin7 = Number(sizeMin7);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: (data[0] ? data[0] + \", \" + data[1] : data[1]) ? (data[0] ? data[0] + \", \" + data[1] : data[1]) : \"\",\n            coordinates: [data[3], data[2]],\n            size: size,\n            sizeMin1: sizeMin1,\n            sizeMin3: sizeMin3,\n            sizeMin7: sizeMin7,\n            val: size,\n            rowId: rowId,\n            valMin1: size - sizeMin1,\n            valMin3: size - sizeMin3,\n            valMin7: size - sizeMin7\n          };\n          totConf += size;\n          confirmed.push(marker);\n          rowId++;\n        }\n        that.state.setTotConf(totConf);\n        console.log(maxSize);\n        for(let i = 0; i < confirmed.length; i++) {\n          confirmed[i].size = (confirmed[i].size - minSize) / (maxSize - minSize);\n          confirmed[i].momentumLast1 = confirmed[i].size - (confirmed[i].sizeMin1 - minSize) / (maxSize - minSize);\n          confirmed[i].momentumLast3 = confirmed[i].size - (confirmed[i].sizeMin3 - minSize) / (maxSize - minSize);\n          confirmed[i].momentumLast7 = confirmed[i].size - (confirmed[i].sizeMin7 - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Recovered.csv\", {\n      download: true,\n      complete: function(results) {\n        that.recovered = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        let rowId = 0;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let sizeMin1 = \"\";\n          let sizeMin3 = \"\";\n          let sizeMin7 = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            sizeMin1 = data[i - 1];\n            sizeMin3 = data[i - 3];\n            sizeMin7 = data[i - 7];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          if(sizeMin1===\"\") {\n            sizeMin1 = 0;\n          }\n          if(sizeMin3===\"\") {\n            sizeMin3 = 0;\n          }\n          if(sizeMin7===\"\") {\n            sizeMin7 = 0;\n          }\n          size = Number(size);\n          sizeMin1 = Number(sizeMin1);\n          sizeMin3 = Number(sizeMin3);\n          sizeMin7 = Number(sizeMin7);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size,\n            sizeMin1: sizeMin1,\n            sizeMin3: sizeMin3,\n            sizeMin7: sizeMin7,\n            val: size,\n            rowId: rowId,\n            valMin1: size - sizeMin1,\n            valMin3: size - sizeMin3,\n            valMin7: size - sizeMin7\n          };\n          totRec += size;\n          recovered.push(marker);\n          rowId++;\n        }\n        that.state.setTotRec(totRec);\n        for(let i = 0; i < recovered.length; i++) {\n          // console.log(recovered[i].size + \", \" + minSize + \", \" + maxSize);\n          recoveredAbsByRowId[recovered[i].rowId] = recovered[i].size;\n          recovered[i].size = (recovered[i].size - minSize) / (maxSize - minSize);\n          recovered[i].momentumLast1 = recovered[i].size - (recovered[i].sizeMin1 - minSize) / (maxSize - minSize);\n          recovered[i].momentumLast3 = recovered[i].size - (recovered[i].sizeMin3 - minSize) / (maxSize - minSize);\n          recovered[i].momentumLast7 = recovered[i].size - (recovered[i].sizeMin7 - minSize) / (maxSize - minSize);\n        }\n        that.setState({});\n      }\n    });\n\n    Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Deaths.csv\", {\n      download: true,\n      complete: function(results) {\n        that.deaths = [];\n        let skipRow = true;\n        let minSize = 0;\n        let maxSize = MAX_SIZE;\n        let rowId = 0;\n        for(let data of results.data) {\n          if(skipRow) {\n            skipRow = false;\n            continue;\n          }\n          let size = \"\";\n          let i = data.length - 1;\n          while(size===\"\" && i > 0) {\n            size = data[i];\n            i = i - 1;\n          }\n          if(size===\"\") {\n            size = 0;\n          }\n          size = Number(size);\n          if(size > maxSize) {\n            maxSize = size;\n          }\n          let marker = {\n            markerOffset: 0,\n            name: data[0] ? data[0] + \", \" + data[1] : data[1],\n            coordinates: [data[3], data[2]],\n            size: size,\n            val: size,\n            rowId: rowId\n          };\n          totDead += size;\n          deaths.push(marker);\n          rowId++;\n        }\n        that.state.setTotDead(totDead);\n        for(let i = 0; i < deaths.length; i++) {\n          // console.log(deaths[i].size + \", \" + minSize + \", \" + maxSize);\n          deathsAbsByRowId[deaths[i].rowId] = deaths[i].size;\n          deaths[i].size = (deaths[i].size - minSize) / (maxSize - minSize);\n          deathsByRowId[deaths[i].rowId] = deaths[i].size;\n        }\n        that.setState({});\n      }\n    });\n  }\n\n  render() {\n    let that = this;\n    return (\n      <>\n      <Form>\n        <div className=\"ml-3 small controls\">\n          <Form.Check inline className=\"small\" checked={that.state.chart===\"pie\" } label=\"Circles\" type={\"radio\"} name={\"a\"} id={`inline-radio-1`} onClick={() => {that.setState({chart: \"pie\"});}}/>\n          <Form.Check inline className=\"small hideInJh\" checked={that.state.chart===\"pill\" } label=\"Progress\" type={\"radio\"} name={\"a\"} id={`inline-radio-3`} onClick={() => {that.setState({chart: \"pill\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/>\n          <Form.Check inline className=\"small hideInJh\" checked={that.state.chart===\"bar\" } label=\"Bars\" type={\"radio\"} name={\"a\"} id={`inline-radio-2`} onClick={() => {that.setState({chart: \"bar\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/>\n        </div>\n      </Form>\n      <div className=\"small controls2\">\n        {/*<Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"none\" } label=\"Live situation\" type={\"radio\"} name={\"a\"} id={`inline-radio-4`} onClick={() => {that.setState({momentum: \"none\"});}} />\n        <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last1\" } label=\"Momentum last 1 day\" type={\"radio\"} name={\"b\"} id={`inline-radio-5`} onClick={() => {that.setState({momentum: \"last1\", chart: \"pie\"});}} />\n        <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last3\" } label=\"Momentum last 3 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-6`} onClick={() => {that.setState({momentum: \"last3\", chart: \"pie\"});}} />\n        <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last7\" } label=\"Momentum last 7 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-7`} onClick={() => {that.setState({momentum: \"last7\", chart: \"pie\"});}} />*/}\n        <Form.Control disabled={that.state.jhmode} inline style={{lineHeight: \"12px\", padding: \"0px\", fontSize: \"12px\", height: \"24px\"}} size=\"sm\" as=\"select\" onChange={(e) => {that.setState({momentum: e.nativeEvent.target.value, chart: \"pie\"});}}>\n          <option selected={that.state.momentum===\"none\"} value=\"none\">Show live situation</option>\n          <option selected={that.state.momentum===\"last1\"} value=\"last1\">Show change last 1 day</option>\n          <option selected={that.state.momentum===\"last3\"} value=\"last3\">Show change last 3 days</option>\n          <option selected={that.state.momentum===\"last7\"} value=\"last7\">Show change last 7 day</option>\n        </Form.Control>\n        <ReactBootstrapSlider value={this.state.factor} change={e => {this.setState({ factor: e.target.value, width: e.target.value / 10 });}} step={1} max={100} min={1} />\n        <Form.Check inline className=\"small\" checked={that.state.jhmode} label={<span style={{color: \"white\", background: \"black\", padding: \"0 3px\"}}>Johns Hopkins Mode 🤔🤷</span>} type={\"checkbox\"} name={\"a\"} id={`inline-checkbox-2`}\n                    onClick={() => {that.setState({jhmode: !that.state.jhmode, chart: \"pie\", factor: 20, momentum: \"none\"});}} />\n      </div>\n      {\n        that.state.jhmode &&\n        <style dangerouslySetInnerHTML={{__html: `\n          .container-fluid { background: #000914 }\n          .hideInJh {\n            display: none !important;\n          }\n          .lightInJh {\n            color: #eee;\n          }\n          * {\n            border-radius: 0 !important;\n          }\n          .info, .controls, .controls2 {\n            border: 1px solid #444;\n            background: #222;\n            color: white;\n          }\n        `}} />\n      }\n      {\n        that.state.momentum !== \"none\" &&\n        <style dangerouslySetInnerHTML={{__html: `\n          .hideInMomentum {\n            display: none !important;\n          }\n          .showInMomentum {\n            display: block !important;\n          }\n        `}} />\n      }\n      <ComposableMap\n          projection={\"geoMercator\"}\n          projectionConfig={{scale: 200}}\n          height={window.innerWidth}\n          width={window.innerHeight - 50}\n          style={{width: \"100%\", height: \"100%\"}}\n      >\n        <ZoomableGroup maxZoom={1000}>\n          <Geographies geography={geoUrl}>\n            {\n              ({geographies}) =>\n                geographies.map(geo => (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseEnter={() => {\n                      const {NAME, POP_EST} = geo.properties;\n                      if(NAME === \"Antarctica\") {\n                        return;\n                      }\n                      this.state.setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\n                    }}\n                    onMouseLeave={() => {\n                      this.state.setTooltipContent(\"\");\n                    }}\n                    style={{\n                      default: {\n                        fill: that.state.jhmode ? \"#333\" : \"#ddd\" ,\n                        outline: \"none\"\n                      },\n                      hover: {\n                        fill: that.state.jhmode ? \"#666\" : \"#999\",\n                        outline: \"none\"\n                      },\n                      pressed: {\n                        fill: that.state.jhmode ? \"#333\" : \"#ddd\",\n                        outline: \"none\"\n                      }\n                    }}\n                  />\n                ))\n            }\n          </Geographies>\n          {\n            that.state.momentum!==\"none\" &&\n              confirmed.map(({ rowId, name, coordinates, markerOffset, momentumLast1, momentumLast3, momentumLast7, valMin1, valMin3, valMin7 }) => {\n                let size;\n                let val;\n                if(name.indexOf(\"Hubei\") !== -1) {\n                  console.log(\"hubei\");\n                }\n                switch(that.state.momentum) {\n                  case \"last1\":\n                    size = momentumLast1 - recovered[rowId].momentumLast1;\n                    val = valMin1 - recovered[rowId].valMin1;\n                    break;\n                  case \"last3\":\n                    size = momentumLast3 - recovered[rowId].momentumLast3;\n                    val = valMin3 - recovered[rowId].valMin3;\n                    break;\n                  case \"last7\":\n                    size = momentumLast7 - recovered[rowId].momentumLast7;\n                    val = valMin7 - recovered[rowId].valMin7;\n                    break;\n                };\n                let pos = size >= 0;\n                size = Math.abs(size);\n                //if(that.state.jhmode) {\n                //  size = Math.log(size * 100000) / 25;\n                //}\n                return (<Marker coordinates={coordinates}>\n                  <circle r={Math.sqrt(size) * that.state.factor} fill={pos ? \"#F008\" : \"#0F08\"} />\n                  <title>{`${name} - ${Math.abs(val)} ${pos ? \"INCREASE\" : \"DECREASE\"} in active(= confirmed-recovered) cases (excl. deceased)`}</title>\n                  <text\n                    textAnchor=\"middle\"\n                    y={markerOffset}\n                    style={{ fontSize: name.endsWith(\", US\") ? \"0.005em\" : \"2px\", fontFamily: \"Arial\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n                  >\n                    {name}\n                  </text>\n                </Marker>\n            )})\n          }\n          {\n            that.state.momentum===\"none\" &&\n            confirmed.map(({ rowId, name, coordinates, markerOffset, size, val }) => {\n              let active = val - recoveredAbsByRowId[rowId] - deathsAbsByRowId [rowId];\n              if(that.state.jhmode) {\n                size = Math.log(size * 100000) / 25;\n              }\n              if(that.state.chart===\"pill\" || that.state.chart===\"bar\") {\n                size *= 10;\n              }\n              return (<Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"pill\" ? {display: \"block\", hover: {fill: \"#F00\"}} : {display: \"none\", hover: {fill: \"#F00\"}}} x={- size * that.state.factor / 2} y={-that.state.width/2*3} height={that.state.width*3} width={size * that.state.factor} fill=\"#F008\" />\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#F00\"}} : {display: \"none\", hover: {fill: \"#F00\"}}} x={that.state.width * 3 * 0 - that.state.width * 3 * 1.5} y={-size * that.state.factor} width={that.state.width * 3} height={size * that.state.factor} fill=\"#F008\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#F00\"}} : {display: \"none\", hover: {fill: \"#F00\"}}} r={Math.sqrt(size) * that.state.factor} fill=\"#F008\" />\n                <title>{`${name} - ${val} confirmed, ${active} active`}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: name.endsWith(\", US\") ? \"0.005em\" : \"2px\", fontFamily: \"Arial\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n                >\n                  {name}\n                </text>\n              </Marker>\n            )})\n          }\n          {\n            that.state.momentum===\"none\" && !that.state.jhmode &&\n            recovered.map(({rowId, name, coordinates, markerOffset, size, val }) => {\n              if(that.state.jhmode) {\n                size = Math.log(size * 100000) / 25;\n              }\n              if(that.state.chart===\"pie\" || that.state.chart===\"pill\") {\n                size += deathsByRowId[rowId];\n              }\n              if(that.state.chart===\"pill\" || that.state.chart===\"bar\") {\n                size *= 10;\n              }\n              return (<Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"pill\" ? {display: \"block\", hover: {fill: \"#0F0\"}} : {display: \"none\", hover: {fill: \"#0F0\"}}} x={- size * that.state.factor / 2} y={-that.state.width/2*3} height={that.state.width*3} width={size * that.state.factor} fill=\"#0F08\" />\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#0F0\"}} : {display: \"none\", hover: {fill: \"#0F0\"}}} x={that.state.width * 3 * 1 - that.state.width * 3 * 1.5} y={-size * that.state.factor} width={that.state.width * 3} height={size * that.state.factor} fill=\"#0F08\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#0F0\"}} : {display: \"none\", hover: {fill: \"#0F0\"}}} r={Math.sqrt(size) * that.state.factor} fill=\"#0F08\" />\n                <title>{name + \" - \" + val + \" recovered\"}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: \"1px\", fontFamily: \"system-ui\", fill: \"#5D5A6D\", pointerEvents: \"none\" }}\n                >\n                  {/*name*/}\n                </text>\n              </Marker>\n            )})\n          }\n          {\n            that.state.momentum===\"none\" && !that.state.jhmode &&\n            deaths.map(({name, coordinates, markerOffset, size, val }) => {\n              if(that.state.jhmode) {\n                size = Math.log(size * 100000) / 25;\n              }\n              if(that.state.chart===\"pill\" || that.state.chart===\"bar\") {\n                size *= 10;\n              }\n              return (<Marker coordinates={coordinates}>\n                <rect style={that.state.chart===\"pill\" ? {display: \"block\", hover: {fill: \"#000\"}} : {display: \"none\", hover: {fill: \"#000\"}}} x={- size * that.state.factor / 2} y={-that.state.width/2*3} height={that.state.width*3} width={size * that.state.factor} fill=\"#000\" />\n                <rect style={that.state.chart===\"bar\" ? {display: \"block\", hover: {fill: \"#000\"}} : {display: \"none\", hover: {fill: \"#000\"}}} x={that.state.width * 3 * 2 - that.state.width * 3 * 1.5} y={-size * that.state.factor} width={that.state.width * 3} height={size * that.state.factor} fill=\"#000\" />\n                <circle style={that.state.chart===\"pie\" ? {display: \"block\", hover: {fill: \"#000\"}} : {display: \"none\", hover: {fill: \"#2128\"}}} r={Math.sqrt(size) * that.state.factor} fill=\"#2128\" />\n                <title>{name + \" - \" + val + \" deceased\"}</title>\n                <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{ fontSize: \"1px\", fontFamily: \"system-ui\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n                >\n                  {/*name*/}\n                </text>\n              </Marker>\n            )})\n          }\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n    );\n  }\n}\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDatabase, faCode } from '@fortawesome/free-solid-svg-icons';\nimport { faDotCircle} from '@fortawesome/free-regular-svg-icons';\n\nconst date = new Date();\n\nconst rounded = (num) => {\n    if (num > 1000000000) {\n        return Math.round(num / 100000000) / 10 + \"Bn\";\n    } else if (num > 1000000) {\n        return Math.round(num / 100000) / 10 + \"M\";\n    } else {\n        return Math.round(num / 100) / 10 + \"K\";\n    }\n};\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  const [hidden, setHidden] = useState(false);\n  const [totConf, setTotConf] = useState(0);\n  const [totRec, setTotRec] = useState(0);\n  const [totDead, setTotDead] = useState(0);\n\n  return (\n    [\n      <Navbar bg=\"light\" fixed=\"top\" className={\"p-0 pl-2\"} expand={\"xs\"}>\n        <Navbar.Brand>\n            <span className=\"small\">C<FontAwesomeIcon icon={faDotCircle} />VID19 </span>\n        </Navbar.Brand>\n          <span>\n            <span className={\"small text-muted mr-3\"}>Total:</span>\n            <span className={\"small text-danger mr-3\"}>{rounded(totConf)}</span>\n            <span className={\"small text-success mr-3\"}>{rounded(totRec)}</span>\n            <span className={\"small mr-3\"}>{rounded(totDead)}</span>\n          </span>\n      </Navbar>,\n      <Container fluid className={\"w-100 h-100 p-0\"}>\n        <Row noGutters={\"true\"} className={\"h-100\"}>\n          <Col className={\"h-100\"}>\n            <MapChart\n                setTooltipContent={setContent}\n                style={{marginTop: \"50px\"}}\n                setTotConf={setTotConf}\n                setTotRec={setTotRec}\n                setTotDead={setTotDead}\n            />\n            <ReactTooltip>{content}</ReactTooltip>\n          </Col>\n        </Row>\n      </Container>,\n      <div className=\"info small text-muted\" style={hidden ? {display: \"none\"} : {display:\"block\"}} onClick={() => {setHidden(true)}}>\n        <span className=\"text-danger showInMomentum\">Red: increase active</span>\n        <span className=\"text-success showInMomentum\">Green: decrease active</span>\n        <span className=\"text-dark showInMomentum\">where \"active\" is newly confirmed minus newly recovered (excluding deceased)</span>\n        <span className=\"text-danger hideInMomentum\">Red: confirmed</span><br className=\"hideInMomentum\"/>\n        <span className=\"text-success hideInJh hideInMomentum\">Green: recovered</span><br className=\"hideInJh hideInMomentum\" />\n        <span className=\"text-dark hideInJh hideInMomentum\">Black: deceased</span><br className=\"hideInJh hideInMomentum\" />\n        <sub className={\"lightInJh\"}>\n          Using live data from <br /><a target=\"_blank\" href={\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series\"}><FontAwesomeIcon icon={faDatabase} /> Johns Hopkins repository</a><br/>Last synchronized on {date.toLocaleDateString()} at {date.toLocaleTimeString()}<br/>\n            <a target=\"_blank\" href={\"https://github.com/daniel-karl/covid19-map\"}><FontAwesomeIcon icon={faCode} /> Who made this?</a>\n        </sub><br />\n        <span className=\"small text-danger\">Hold &lt;CTRL&gt; key to zoom</span>\n      </div>\n    ]\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}