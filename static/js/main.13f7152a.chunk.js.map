{"version":3,"sources":["MapChart.js","App.js","index.js"],"names":["markers","markerOffset","name","coordinates","memo","setTooltipContent","projection","zoom","geography","geographies","map","geo","key","rsmKey","onMouseEnter","num","properties","NAME","POP_EST","Math","round","onMouseLeave","style","default","fill","outline","hover","pressed","r","stroke","strokeWidth","textAnchor","y","fontFamily","App","useState","content","setContent","className","ReactDOM","render","document","getElementById"],"mappings":"uMAYMA,EAAU,CACd,CAAEC,cAAe,GAAIC,KAAM,eAAgBC,YAAa,EAAE,SAAU,UACpE,CAAEF,cAAe,GAAIC,KAAM,SAAUC,YAAa,EAAE,SAAU,UAC9D,CAAEF,aAAc,GAAIC,KAAM,WAAYC,YAAa,EAAE,SAAU,UAC/D,CAAEF,aAAc,GAAIC,KAAM,WAAYC,YAAa,EAAE,SAAU,UAC/D,CAAEF,aAAc,GAAIC,KAAM,SAAUC,YAAa,EAAE,QAAS,QAC5D,CAAEF,aAAc,GAAIC,KAAM,QAASC,YAAa,EAAE,SAAU,QAC5D,CAAEF,cAAe,GAAIC,KAAM,aAAcC,YAAa,EAAE,QAAS,SACjE,CAAEF,cAAe,GAAIC,KAAM,WAAYC,YAAa,EAAE,SAAU,UAChE,CAAEF,aAAc,GAAIC,KAAM,aAAcC,YAAa,EAAE,QAAS,QAChE,CAAEF,aAAc,GAAIC,KAAM,aAAcC,YAAa,EAAE,SAAU,UACjE,CAAEF,cAAe,GAAIC,KAAM,UAAWC,YAAa,EAAE,QAAS,UAC9D,CAAEF,cAAe,GAAIC,KAAM,OAAQC,YAAa,EAAE,SAAU,WAoE/CC,kBAvDE,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBACjB,OACE,kBAAC,gBAAD,CAAeC,WAAY,eACvB,kBAAC,gBAAD,CAAeC,KAAM,GACvB,kBAAC,cAAD,CAAaC,UA/BjB,2GAiCQ,qBAAEC,YACcC,KAAI,SAAAC,GAAG,OACf,kBAAC,YAAD,CACIC,IAAKD,EAAIE,OACTL,UAAWG,EACXG,aAAc,WAAO,IArB3BC,EAqB0B,EACMJ,EAAIK,WAArBC,EADW,EACXA,KAAMC,EADK,EACLA,QACbb,EAAkB,GAAD,OAAIY,EAAJ,oBAvBzBF,EAuB+CG,GAtBnD,IACDC,KAAKC,MAAML,EAAM,KAAa,GAAK,KACjCA,EAAM,IACRI,KAAKC,MAAML,EAAM,KAAU,GAAK,IAEhCI,KAAKC,MAAML,EAAM,KAAO,GAAK,OAmBlBM,aAAc,WACZhB,EAAkB,KAEpBiB,MAAO,CACTC,QAAS,CACPC,KAAM,UACNC,QAAS,QAEXC,MAAO,CACLF,KAAM,OACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,OACNC,QAAS,kBASvBzB,EAAQU,KAAI,gBAAER,EAAF,EAAEA,KAAMC,EAAR,EAAQA,YAAaF,EAArB,EAAqBA,aAArB,OACR,kBAAC,SAAD,CAAQW,IAAKV,EAAMC,YAAaA,GAC9B,4BAAQyB,EAAG,GAAIJ,KAAK,OAAOK,OAAO,OAAOC,YAAa,IACtD,0BACIC,WAAW,SACXC,EAAG/B,EACHqB,MAAO,CAACW,WAAY,YAAaT,KAAM,YAExCtB,W,OCnEFgC,MAZf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,KAEb,OACE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,CAAUjC,kBAAmBgC,IAC7B,kBAAC,IAAD,KAAeD,MCLvBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.13f7152a.chunk.js","sourcesContent":["import React, { memo} from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst markers = [\n  { markerOffset: -15, name: \"Buenos Aires\", coordinates: [-58.3816, -34.6037] },\n  { markerOffset: -15, name: \"La Paz\", coordinates: [-68.1193, -16.4897] },\n  { markerOffset: 25, name: \"Brasilia\", coordinates: [-47.8825, -15.7942] },\n  { markerOffset: 25, name: \"Santiago\", coordinates: [-70.6693, -33.4489] },\n  { markerOffset: 25, name: \"Bogota\", coordinates: [-74.0721, 4.711] },\n  { markerOffset: 25, name: \"Quito\", coordinates: [-78.4678, -0.1807] },\n  { markerOffset: -15, name: \"Georgetown\", coordinates: [-58.1551, 6.8013] },\n  { markerOffset: -15, name: \"Asuncion\", coordinates: [-57.5759, -25.2637] },\n  { markerOffset: 25, name: \"Paramaribo\", coordinates: [-55.2038, 5.852] },\n  { markerOffset: 25, name: \"Montevideo\", coordinates: [-56.1645, -34.9011] },\n  { markerOffset: -15, name: \"Caracas\", coordinates: [-66.9036, 10.4806] },\n  { markerOffset: -15, name: \"Lima\", coordinates: [-77.0428, -12.0464] }\n];\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({setTooltipContent}) => {\n  return (\n    <ComposableMap projection={\"geoMercator\"}>\n        <ZoomableGroup zoom={1}>\n      <Geographies geography={geoUrl}>\n        {\n          ({geographies}) =>\n              geographies.map(geo => (\n                  <Geography\n                      key={geo.rsmKey}\n                      geography={geo}\n                      onMouseEnter={() => {\n                        const {NAME, POP_EST} = geo.properties;\n                        setTooltipContent(`${NAME} â€” ${rounded(POP_EST)}`);\n                      }}\n                      onMouseLeave={() => {\n                        setTooltipContent(\"\");\n                      }}\n                      style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\"\n                    }\n                  }}\n                  />\n              ))\n        }\n      </Geographies>\n        </ZoomableGroup>\n      {\n        markers.map(({name, coordinates, markerOffset}) => (\n            <Marker key={name} coordinates={coordinates}>\n              <circle r={10} fill=\"#F00\" stroke=\"#fff\" strokeWidth={2}/>\n              <text\n                  textAnchor=\"middle\"\n                  y={markerOffset}\n                  style={{fontFamily: \"system-ui\", fill: \"#5D5A6D\"}}\n              >\n                {name}\n              </text>\n            </Marker>\n        ))\n      }\n    </ComposableMap>\n  );\n};\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MapChart setTooltipContent={setContent} />\n        <ReactTooltip>{content}</ReactTooltip>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}