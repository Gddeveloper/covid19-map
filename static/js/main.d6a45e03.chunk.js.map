{"version":3,"sources":["BarChart.js","datasource/DatasourceProvider.js","datasource/Datasource.js","Population.js","TestingRates.js","datasource/JHDatasourceProvider.js","Utils.js","RaceChart.js","MapChart.js","App.js","index.js"],"names":["BarChart","datasource","this","props","name","logmode","dayOffset","width","heigth","role","Object","values","datasets","map","dataset","dateIndex","confirmedBarHeight","recoveredBarHeight","deceasedBarHeight","barWidth","length","max","maxValue","Math","round","log","data","absolute","current","confirmed","recovered","deceased","className","x","String","y","height","React","Component","DatasourceProvider","getDatasource","Error","Datasource","locations","Dataset","date","cameraCoordinates","totalConfirmed","totalRecovered","totalDeceased","totalActive","totalConfirmedProjected","Data","containmentScore","active","confirmedProjected","growthLast1Day","growthLast3Days","growthLast7Days","ppm","ABSOLUTE","RATES","JHDatasourceProvider","callback","ds","loadFromUrl","confirmedUrl","rawConfirmed","recoveredUrl","rawRecovered","deceasedUrl","rawDeceased","parse","tableConfirmed","tableRecovered","tableDeceased","parseTable","computeActive","computeConfirmedProjected","computeContainmentScore","computeTotals","datasetIndex","locationData","locationIndex","g","avgTested","avgPopulation","countTested","countPopulation","keys","index","Testing","Population","globalTestingRate","computeConfirmedProjectedBlock","block","scale","calculateConfirmedProjected","value","computeActiveBlock","calculateActive","attribute","table","parseHeader","header","parseRow","i","push","row","parseBlock","Number","url","Papa","download","complete","results","a","Utils","rounded","num","RaceChart","names","points","LightTooltip","withStyles","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","Tooltip","MapChart","componentDidMount","render","componentDidUpdate","prevProps","state","updateLeafletElement","layers","leafletElement","_layers","layer","options","bringToFront","leaderboard","align","title","style","textAlign","small","disableTouchListener","onClick","setState","leadership","icon","faProcedures","size","faShieldAlt","faBiohazard","faHeartbeat","faHeartBroken","sort","b","mode","ppmmode","c","isNaN","lng","lat","zoom","random","leafletMap","position","Map","ref","center","zoomControl","TileLayer","attribution","mapstyle","LayerGroup","key","momentumMarkers","projectedMarkers","confirmedMarkers","recoveredMarkers","deceasedMarkers","momentum","pop","pos","abs","scaleLog","scalePpm","scaleLogAndPpm","coordinates","CircleMarker","chart","display","fillColor","radius","sqrt","factor","opacity","fillOpacity","that","testscale","marker","type","direction","offset","unit","faUsers","testmode","Badge","variant","faVial","stayAtHomeAdvice","valign","faExclamationTriangle","e","console","population","scaleIfPillOrBar","sleep","msec","Promise","resolve","setTimeout","setTotalConfirmed","setTotalRecovered","setTotalDeceased","setTotalConfirmedProjected","minimized","playmode","selectedData","hidden","faWindowMinimize","arrow","faQuestion","Form","Control","lineHeight","padding","fontSize","as","onChange","nativeEvent","target","Check","inline","checked","label","id","ticks","ticks_labels","change","step","min","rel","href","faBug","faQuestionCircle","faBalanceScale","disabled","pointerEvents","faStepBackward","faStepForward","document","getElementsByClassName","now","Date","startDate","playpause","interval","setInterval","clearInterval","faPlayCircle","faPauseCircle","faStopCircle","dangerouslySetInnerHTML","__html","LinearProgress","memo","App","useState","Navbar","bg","fixed","expand","Brand","faDotCircle","Container","fluid","Row","noGutters","Col","marginTop","ReactDOM","getElementById"],"mappings":"ibAEqBA,E,iLAEjB,IAAIC,EAAaC,KAAKC,MAAMF,WACxBG,EAAOF,KAAKC,MAAMC,KAClBC,EAAUH,KAAKC,MAAME,QACrBC,EAAYJ,KAAKC,MAAMG,UAC3B,OACE,yBAAKC,MAAM,MAAMC,OAAO,MAAMC,KAAK,OAE/BC,OAAOC,OAAOV,EAAWW,UAAUC,KAAI,SAACC,EAASC,GAC/C,IAKIC,EACAC,EACAC,EALAC,EAFW,IAEYlB,EAAWW,SAASQ,OAC3CC,EAAMpB,EAAWqB,SAgBrB,OAXGjB,GAECW,EAAqBO,KAAKC,MAAOD,KAAKE,IAAIX,EAAQY,KAAKtB,GAAMuB,SAASC,QAAQC,WAAaN,KAAKE,IAAIJ,GATxF,KAUZJ,EAAqBM,KAAKC,MAAOD,KAAKE,IAAIX,EAAQY,KAAKtB,GAAMuB,SAASC,QAAQE,WAAaP,KAAKE,IAAIJ,GAVxF,KAWZH,EAAoBK,KAAKC,MAAOD,KAAKE,IAAIX,EAAQY,KAAKtB,GAAMuB,SAASC,QAAQG,UAAYR,KAAKE,IAAIJ,GAXtF,OAcZL,EAAqBO,KAAKC,MAAOV,EAAQY,KAAKtB,GAAMuB,SAASC,QAAQC,UAAYR,EAdrE,KAeZJ,EAAqBM,KAAKC,MAAOV,EAAQY,KAAKtB,GAAMuB,SAASC,QAAQE,UAAYT,EAfrE,KAgBZH,EAAoBK,KAAKC,MAAOV,EAAQY,KAAKtB,GAAMuB,SAASC,QAAQG,SAAWV,EAhBnE,MAmBd,2BAEIf,IAAcS,EAAYd,EAAWW,SAASQ,OAAS,GACvD,uBAAGY,UAAU,eACX,0BAAMC,EAAGC,OAAOnB,EAAYI,GAAWgB,EAAG,EAAG5B,MAAOY,EAAUiB,OAvBtD,OA+BZ,uBAAGJ,UAAU,gBACZ,0BAAMC,EAAGC,OAAOnB,EAAYI,GAAWgB,EAhC5B,IAgC2CnB,EAAoBT,MAAOY,EAAUiB,OAAQpB,KAEpG,uBAAGgB,UAAU,gBACX,0BAAMC,EAAGC,OAAOnB,EAAYI,GAAWgB,EAnC7B,IAmC4ClB,EAAoBV,MAAOY,EAAUiB,OAAQnB,KAErG,uBAAGe,UAAU,eACX,0BAAMC,EAAGC,OAAOnB,EAAYI,GAAWgB,EAtC7B,IAsC4CjB,EAAmBX,MAAOY,EAAUiB,OAAQlB,c,GAjD9EmB,IAAMC,WCF/BC,EAET,WAAYnC,GAAO,yBAInBoC,cAAgB,WACZ,MAAMC,MAAM,oBAJZvC,KAAKE,KAAOA,G,iBCDPsC,EAET,aAAe,oBAGXxC,KAAKU,SAAW,GAGhBV,KAAKyC,UAAY,GAGjBzC,KAAKoB,SAAW,GAKXsB,EAET,WAAYC,GAAO,oBAEf3C,KAAK2C,KAAOA,EAGZ3C,KAAK4C,kBAAoB,KAGzB5C,KAAKwB,KAAO,GAGZxB,KAAK6C,eAAiB,EACtB7C,KAAK8C,eAAiB,EACtB9C,KAAK+C,cAAgB,EACrB/C,KAAKgD,YAAc,EACnBhD,KAAKiD,wBAA0B,GAI1BC,EACT,aAAe,oBAEXlD,KAAKmD,iBAAmB,KAExBnD,KAAKyB,SAAW,CACZC,QAAS,CACLC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,MAExBC,eAAgB,CACZ3B,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,MAExBE,gBAAiB,CACb5B,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,MAExBG,gBAAiB,CACb7B,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,OAI5BrD,KAAKyD,IAAM,CACP/B,QAAS,CACLC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,MAExBC,eAAgB,CACZ3B,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,MAExBE,gBAAiB,CACb5B,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,MAExBG,gBAAiB,CACb7B,UAAW,KACXC,UAAW,KACXC,SAAU,KACVuB,OAAQ,KACRC,mBAAoB,QChGvBK,EAAW,CACtB,cAAe,QACf,aAAc,OACd,cAAe,QACf,eAAgB,QAChB,iBAAkB,SAClB,eAAgB,QAChB,kBAAmB,QACnB,eAAgB,OAChB,2BAA4B,OAC5B,cAAe,SACf,cAAe,SACf,aAAc,QACd,YAAa,QACb,eAAgB,SAChB,cAAe,QACf,WAAY,QACZ,aAAc,QACd,eAAgB,QAChB,gBAAiB,QACjB,YAAa,QACb,eAAgB,QAChB,oBAAqB,QACrB,eAAgB,QAChB,gBAAiB,QACjB,kBAAmB,QACnB,eAAgB,QAChB,cAAe,QACf,eAAgB,QAChB,aAAc,QACd,oBAAqB,QACrB,iBAAkB,QAClB,iBAAkB,QAClB,eAAgB,SAChB,qBAAsB,SACtB,mBAAoB,OACpB,WAAY,SACZ,eAAgB,QAChB,aAAc,QACd,mBAAoB,SACpB,mBAAoB,QACpB,qBAAsB,QACtB,mBAAoB,OACpB,gBAAiB,QACjB,YAAa,SACb,WAAY,QACZ,cAAe,OACf,eAAgB,QAChB,iBAAkB,QAClB,oBAAqB,QACrB,gBAAiB,QACjB,cAAe,OACf,YAAe,SACf,OAAU,WACV,gBAAiB,WACjB,gBAAiB,WACjB,gCAAiC,UACjC,gCAAiC,UACjC,iCAAkC,UAClC,iCAAkC,UAClC,gCAAiC,UACjC,uDAAwD,WACxD,QAAW,QACX,QAAW,SACX,iBAAkB,MAClB,mBAAoB,UACpB,QAAW,MACX,OAAU,mBACV,SAAY,MACZ,sBAAuB,MACvB,UAAa,SACb,QAAW,QACX,qBAAsB,OACtB,KAAQ,WACR,2CAA4C,WAC5C,qBAAsB,WACtB,iDAAkD,UAClD,UAAa,SACb,wBAAyB,SACzB,QAAW,QACX,WAAc,SACd,KAAQ,WACR,MAAS,WACT,QAAW,OACX,QAAW,QACX,WAAc,UACd,SAAY,OACZ,QAAW,QACX,QAAW,SACX,OAAU,OACV,6BAA8B,WAC9B,+BAAgC,WAChC,6BAA8B,WAC9B,+BAAgC,UAChC,wDAAyD,UACzD,gCAAiC,SACjC,MAAS,SACT,0BAA2B,MAC3B,OAAU,OACV,wCAAyC,UACzC,8CAA+C,SAC/C,QAAW,SACX,mCAAoC,MACpC,yBAA0B,QAC1B,SAAY,QACZ,OAAU,UACV,yBAA0B,MAC1B,OAAU,OACV,SAAY,QACZ,eAAgB,SAChB,QAAW,SACX,aAAc,OACd,SAAY,mBACZ,SAAY,SACZ,OAAU,SACV,UAAa,SACb,kDAAmD,SACnD,iCAAkC,MAClC,2BAA4B,QAC5B,kBAAmB,UACnB,eAAgB,SAChB,gDAAiD,SACjD,4BAA6B,WAC7B,KAAQ,SACR,kCAAmC,OACnC,yBAA0B,MAC1B,MAAS,SACT,MAAS,WACT,2BAA4B,WAC5B,uBAAwB,QACxB,mBAAoB,OACpB,UAAW,SACX,SAAY,SACZ,2CAA4C,UAC5C,0BAA2B,WAC3B,uBAAwB,UACxB,qBAAsB,WACtB,uCAAwC,SACxC,uBAAwB,SACxB,wBAAyB,SACzB,QAAW,OACX,mBAAoB,OACpB,sBAAuB,KACvB,eAAgB,MAChB,aAAc,QACd,mCAAoC,WACpC,2CAA4C,UAC5C,yCAA0C,WAC1C,2CAA4C,UAC5C,oEAAqE,UACrE,qDAAsD,UACtD,4CAA6C,SAC7C,QAAW,QACX,KAAQ,SACR,uBAAwB,OACxB,OAAU,QACV,QAAW,SACX,gBAAiB,SACjB,kCAAmC,SACnC,mBAAoB,QACpB,QAAW,QACX,6BAA8B,QAC9B,SAAY,OACZ,SAAY,MACZ,qBAAsB,SACtB,uBAAwB,UACxB,gBAAiB,WACjB,uBAAwB,UACxB,uBAAwB,SACxB,yCAA0C,WAC1C,uCAAwC,UACxC,wBAAyB,SACzB,0CAA2C,WAC3C,gCAAiC,UACjC,gDAAiD,WACjD,uDAAqD,UACrD,oCAAkC,WAClC,wCAAyC,WACzC,eAAgB,UAChB,sBAAuB,SACvB,aAAc,UACd,oBAAqB,WACrB,sCAAuC,UACvC,0CAA2C,UAC3C,mCAAoC,SACpC,eAAgB,WAChB,8BAA+B,UAC/B,6BAA8B,SAC9B,sCAAuC,WACvC,sCAAuC,WACvC,0BAA2B,WAC3B,kBAAmB,UACnB,qBAAsB,UACtB,uBAAwB,WACxB,iBAAkB,WAClB,oBAAqB,WACrB,0BAA2B,WAC3B,6BAA8B,UAC9B,4CAA6C,UAC7C,0BAA2B,UAC3B,6BAA8B,WAC9B,wBAAyB,UACzB,wCAAyC,SACzC,4CAA6C,SAC7C,2BAA4B,SAC5B,2BAA4B,UAC5B,0BAA2B,UAC3B,+BAAgC,UAChC,iBAAkB,UAClB,eAAgB,WAChB,iBAAkB,UAClB,yBAA0B,UAC1B,iCAAkC,WAClC,uDAAwD,UACxD,qDAAsD,UACtD,0CAA2C,UAC3C,QAAW,SACX,MAAS,UACT,cAAe,QACf,oBAAqB,QACrB,QAAW,QACX,QAAW,QACX,SAAY,QACZ,SAAY,UACZ,wCAAyC,UACzC,OAAU,UACV,cAAe,UACf,8BAA+B,WAC/B,8BAA+B,UAC/B,uCAAwC,SACxC,0BAA2B,UAC3B,0BAA2B,UAC3B,8BAA+B,KAC/B,yBAA0B,MAC1B,KAAQ,OACR,QAAW,QACX,iBAAkB,SAClB,OAAU,SACV,4BAA6B,SAC7B,wBAAyB,OACzB,2BAA4B,OAC5B,MAAS,QACT,cAAe,QACf,OAAU,QACV,QAAW,QACX,QAAW,SACX,MAAS,SACT,4BAA6B,MAC7B,uCAAwC,UACxC,OAAU,SACV,qBAAsB,MACtB,QAAW,OACX,oBAAqB,WACrB,sBAAuB,UACvB,sBAAuB,UACvB,wCAAyC,WACzC,qBAAsB,OACtB,WAAY,OACZ,UAAa,SACb,OAAU,SACV,gBAAiB,QACjB,iCAAkC,SAClC,OAAU,OACV,MAAS,SACT,wBAAyB,WACzB,WAAY,IACZ,SAAY,QACZ,QAAW,QACX,QAAW,OACX,MAAS,WACT,UAAa,UACb,KAAQ,SACR,KAAQ,SACR,QAAW,QACX,8BAA+B,MAC/B,OAAU,QACV,MAAS,SACT,QAAW,QACX,MAAS,UACT,OAAU,SACV,WAAc,SACd,MAAS,SACT,SAAY,OACZ,OAAU,OACV,OAAU,QACV,WAAc,QACd,eAAgB,UAChB,aAAc,UACd,eAAgB,QAChB,sBAAuB,SACvB,wBAAyB,UACzB,iCAAkC,SAClC,0CAA2C,mBAC3C,KAAQ,QACR,kCAAmC,UACnC,iDAAkD,UAClD,8CAA+C,UAC/C,OAAU,QACV,0DAA2D,UAC3D,4BAA6B,WAC7B,0BAA2B,UAC3B,wBAAyB,UACzB,mDAAoD,SACpD,2BAA4B,QAC5B,QAAW,QACX,QAAW,QACX,yBAA0B,WAC1B,0CAA2C,WAC3C,8DAA+D,WAC/D,yBAA0B,WAC1B,uBAAwB,WACxB,kDAAmD,UACnD,0BAA2B,SAC3B,QAAW,QACX,MAAS,QACT,cAAiB,MACjB,UAAa,QACb,uBAAwB,UACxB,gCAAiC,WACjC,WAAc,OACd,WAAc,SACd,OAAU,SACV,SAAY,SACZ,SAAY,OACZ,KAAQ,SACR,MAAS,OACT,mBAAoB,MACpB,qBAAsB,OACtB,WAAc,QACd,UAAa,QACb,kBAAmB,OACnB,UAAa,SACb,OAAU,UACV,WAAc,OACd,8BAA+B,OAC/B,gBAAiB,UACjB,0BAA2B,WAC3B,OAAU,MACV,SAAY,QACZ,WAAc,OACd,6BAA8B,KAC9B,yBAA0B,WAC1B,uBAAwB,UACxB,yBAA0B,UAC1B,mCAAoC,UACpC,0BAA2B,SAC3B,QAAW,SACX,WAAc,SACd,QAAW,SACX,QAAW,QACX,MAAS,MACT,MAAS,SACT,2BAA4B,SAC5B,YAAe,SACf,iCAAkC,SAClC,wBAAyB,OACzB,2CAA4C,UAC5C,cAAe,QACf,iCAAkC,QAClC,UAAa,QACb,MAAS,SACT,QAAW,UACX,KAAQ,KACR,4BAA6B,QAC7B,iCAAkC,QAClC,8CAA+C,UAC/C,4CAA6C,UAC7C,kBAAmB,QACnB,kBAAmB,UACnB,mCAAoC,UACpC,mBAAoB,UACpB,kBAAmB,UACnB,2BAA4B,MAC5B,OAAU,QACV,QAAW,SACX,gDAAiD,SACjD,KAAQ,QACR,gEAAiE,WACjE,8DAA+D,WAC/D,wCAAyC,WACzC,uDAAwD,UACxD,+CAAgD,WAChD,SAAY,UACZ,MAAS,MACT,OAAU,QACV,mBAAoB,QACpB,SAAY,QACZ,KAAQ,mBACR,YAAe,UACf,OAAU,SACV,UAAa,OACb,SAAY,SACZ,+BAAgC,OAChC,kBAAmB,QACnB,MAAS,QACT,eAAgB,SAChB,QAAW,QACX,QAAW,SACX,OAAU,UACV,OAAU,SACV,kBAAmB,OACnB,4EAA6E,SAC7E,iBAAkB,SAClB,eAAgB,SAChB,2BAA4B,KAC5B,eAAgB,KAChB,wBAAyB,MACzB,cAAe,OACf,oBAAqB,MACrB,4BAA6B,KAC7B,mCAAoC,OACpC,MAAS,OACT,aAAc,MACd,wBAAyB,OACzB,eAAgB,SAChB,QAAW,SACX,OAAU,QACV,WAAc,MACd,0CAA2C,WAC3C,eAAgB,QAChB,UAAa,QACb,4BAA6B,MAC7B,SAAY,QACZ,SAAY,mBACZ,wCAAyC,SACzC,kBAAmB,OACnB,QAAW,SACX,eAAgB,SAChB,gBAAiB,UACjB,2DAA4D,WAC5D,cAAe,SACf,qBAAsB,UACtB,kBAAmB,SACnB,gDAAiD,UACjD,gBAAiB,WACjB,oCAAqC,UACrC,kBAAmB,UACnB,MAAS,SACT,YAAa,SACb,qBAAsB,QACtB,qBAAsB,WACtB,MAAS,SACT,SAAY,OACZ,OAAU,SACV,YAAe,QACf,MAAS,SACT,WAAc,QACd,SAAY,SACZ,cAAe,QACf,KAAQ,kBACR,QAAW,KACX,MAAS,OACT,sBAAuB,QACvB,QAAW,SACX,OAAU,SACV,aAAgB,QAChB,2BAA4B,MAC5B,OAAU,MACV,2BAA4B,WAC5B,gBAAiB,WACjB,0BAA2B,UAC3B,mCAAoC,WACpC,wCAAyC,UACzC,gDAAiD,UACjD,+CAAgD,UAChD,uCAAwC,UACxC,2BAA4B,WAC5B,0DAA2D,WAC3D,8CAA+C,QAC/C,gEAAiE,UACjE,6DAA8D,UAC9D,0CAA2C,UAC3C,gEAAiE,UACjE,kEAAmE,UACnE,8CAA+C,WAC/C,4DAA6D,UAC7D,iBAAkB,WAClB,wCAAyC,WACzC,kDAAmD,UACnD,8CAA+C,UAC/C,0CAA2C,UAC3C,8CAA+C,UAC/C,+CAAgD,UAChD,gCAAiC,UACjC,6BAA8B,WAC9B,qCAAsC,WACtC,0CAA2C,UAC3C,iCAAkC,UAClC,kDAAmD,WACnD,OAAU,QACV,QAAW,SACX,uBAAwB,QACxB,iCAAkC,SAClC,iBAAkB,SAClB,oCAAqC,SACrC,yDAA0D,WAC1D,oFAAqF,UACrF,4FAA6F,WAC7F,+BAAgC,WAChC,SAAY,SACZ,qBAAsB,OACtB,2BAA4B,UAC5B,GAAM,UACN,8CAA+C,UAC/C,gCAAiC,WACjC,QAAW,QACX,WAAc,SACd,QAAW,OACX,UAAa,SACb,QAAW,SACX,2DAA4D,mBAC5D,6DAA8D,UAC9D,iEAAkE,UAClE,kEAAmE,UACnE,gDAAiD,WACjD,wDAAyD,WACzD,cAAe,WACf,6BAA8B,WAC9B,uBAAwB,WACxB,2CAA4C,UAC5C,8BAA+B,UAC/B,sCAAuC,WACvC,qCAAsC,WACtC,4BAA6B,MAC7B,mDAAoD,UACpD,iBAAkB,UAClB,eAAgB,UAChB,iBAAkB,UAClB,2CAA4C,UAC5C,iBAAkB,OAClB,MAAS,WACT,+CAAgD,WAChD,MAAS,SACT,OAAU,SACV,SAAY,SACb,mBAAoB,UACpB,kBAAmB,UACnB,eAAgB,SAChB,iBAAkB,SAClB,iBAAkB,SAClB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,eAAgB,SAChB,kBAAmB,SACnB,iBAAkB,SAClB,gBAAiB,SACjB,iBAAkB,SAClB,kBAAmB,SACnB,gBAAiB,SACjB,iBAAkB,SAClB,sBAAuB,SACvB,gBAAiB,SACjB,iBAAkB,SAClB,mBAAoB,SACpB,eAAgB,SAChB,eAAgB,SAChB,wBAAyB,SACzB,kBAAmB,SACnB,kBAAmB,SACnB,iBAAkB,SAClB,iBAAkB,SAClB,gBAAiB,QACjB,mBAAoB,QACpB,iBAAkB,QAClB,iBAAkB,QAClB,eAAgB,QAChB,eAAgB,OAChB,6BAA8B,QAC3B,0CAA2C,OAC3C,gCAAiC,OACpC,wBAAyB,QACzB,6BAA8B,QAC9B,sBAAuB,OACvB,sBAAuB,QACvB,+BAAgC,QAC/B,kBAAmB,QACnB,2BAA4B,QAC5B,wBAAyB,OACzB,gCAAiC,MACjC,sBAAuB,OACvB,kBAAmB,SACnB,iBAAkB,QAClB,uBAAwB,QACxB,oCAAqC,OACrC,mBAAoB,QAClB,gBAAiB,MAEnB,gCAAiC,KACjC,2BAA4B,KAC5B,mBAAoB,KACpB,yBAA0B,MCrlBfC,EAAQ,CAGnB,UAAa,KACb,QAAW,KACX,UAAa,OACb,QAAW,MACX,QAAW,MACX,QAAW,KACX,QAAW,MACX,QAAW,IACX,yBAA0B,KAC1B,OAAU,MACV,OAAU,OACV,kBAAmB,MACnB,2BAA4B,MAC5B,mBAAoB,KACpB,uBAAwB,MACxB,wBAAyB,KACzB,mCAAoC,IACpC,gCAAiC,IACjC,sBAAuB,KACvB,kBAAmB,MACnB,+BAAgC,IAChC,iBAAkB,MAClB,uBAAwB,KACxB,iBAAkB,IAClB,MAAS,KACT,oBAAqB,KACrB,SAAY,KACZ,aAAc,KACd,QAAW,KACX,QAAW,MACX,QAAW,MACX,QAAW,KACX,QAAW,KACX,QAAW,IACX,iBAAkB,OAClB,QAAW,OACX,QAAW,GACX,YAAa,KACb,QAAW,KACX,QAAW,MACX,MAAS,MACT,UAAa,KACb,KAAQ,IACR,QAAW,MACX,OAAU,MACV,MAAS,OACT,MAAS,MACT,OAAU,KACV,WAAc,KACd,OAAU,MACV,UAAa,KACb,SAAY,MACZ,MAAS,KACT,OAAU,KACV,MAAS,IACT,2BAA4B,MAC5B,cAAe,MACf,OAAU,MACV,SAAY,KACZ,UAAa,KACb,OAAU,KACV,KAAQ,KACR,YAAe,KACf,OAAU,MACV,SAAY,MACZ,QAAW,MACX,OAAU,OACV,OAAU,KACV,UAAa,KACb,SAAY,KACZ,SAAY,MACZ,eAAgB,KAChB,cAAe,OACf,MAAS,MACT,OAAU,MACV,YAAe,MACf,OAAU,MACV,SAAY,MACZ,OAAU,MACV,QAAW,KACX,uBAAwB,MACxB,iBAAkB,OAClB,gBAAiB,OACjB,GAAM,OACN,QAAW,KACX,QAAW,MAIX,6BAA8B,MAC9B,wBAAyB,KACzB,+BAAgC,KAChC,sBAAuB,MACvB,6BAA8B,MAC9B,sBAAuB,IACvB,gBAAiB,KACjB,WAAc,KACd,MAAS,KAGT,aAAsB,IACtB,cAAsB,IACtB,eAAsB,IACtB,cAAsB,IACtB,iBAAsB,MACtB,eAAsB,KACtB,kBAAsB,KACtB,GAAsB,IACtB,eAAsB,GACtB,cAAsB,KACtB,cAAsB,KACtB,KAAsB,IACtB,aAAsB,IACtB,WAAsB,KACtB,YAAsB,IACtB,eAAsB,KACtB,cAAsB,IACtB,aAAsB,IACtB,eAAsB,IACtB,gBAAsB,KACtB,oBAAsB,KACtB,eAAsB,IACtB,YAAsB,KACtB,eAAsB,KACtB,gBAAsB,KACtB,eAAsB,IACtB,GAAM,EACN,kBAAsB,IACtB,cAAsB,KACtB,qBAAsB,KACtB,mBAAsB,KACtB,eAAsB,IACtB,oBAAsB,KACtB,iBAAsB,KACtB,iBAAsB,KACtB,aAAsB,KACtB,eAAsB,MACtB,WAAsB,IACtB,eAAsB,IACtB,aAAsB,KACtB,mBAAsB,KACtB,cAAsB,IACtB,mBAAsB,KACtB,qBAAsB,KACtB,mBAAsB,IACtB,gBAAsB,KACtB,YAAsB,KACtB,WAAsB,KACtB,eAAsB,KACtB,iBAAsB,EACtB,cAAsB,IACtB,iBAAsB,MACtB,gBAAsB,KACtB,oBAAsB,IACtB,cAAsB,KCrJXC,EAAb,YAEI,aAAe,IAAD,8BACV,4CAAM,iCAMVtB,cAAgB,SAACuB,GACb,IAAIC,EAAK,IAAItB,EAEb,EAAKuB,YAAY,EAAKC,cAAc,SAACC,GACjC,EAAKF,YAAY,EAAKG,cAAc,SAACC,GACjC,EAAKJ,YAAY,EAAKK,aAAa,SAACC,GAChC,EAAKC,MAAMR,EAAIG,EAAazC,KAAM2C,EAAa3C,KAAM6C,EAAY7C,KAAMqC,GACvEA,EAASC,aAdX,EAoBdQ,MAAQ,SAACR,EAAIS,EAAgBC,EAAgBC,GACzC,EAAKC,WAAWZ,EAAI,YAAaS,GAAgB,GACjD,EAAKG,WAAWZ,EAAI,YAAaU,GAAgB,GACjD,EAAKE,WAAWZ,EAAI,WAAYW,GAAe,GAC/C,EAAKE,cAAcb,GACnB,EAAKc,0BAA0Bd,GAC/B,EAAKe,wBAAwBf,GAC7B,EAAKgB,cAAchB,IA3BT,EA8BdgB,cAAgB,SAAChB,GACbA,EAAGpD,SAASC,KAAI,SAACC,EAASmE,GACtBvE,OAAOC,OAAOG,EAAQY,MAAMb,KAAI,SAACqE,EAAcC,GAG3CrE,EAAQiC,gBAAkBmC,EAAavD,SAASC,QAAQC,UACxDf,EAAQkC,gBAAkBkC,EAAavD,SAASC,QAAQE,UACxDhB,EAAQmC,eAAiBiC,EAAavD,SAASC,QAAQG,SACvDjB,EAAQoC,aAAegC,EAAavD,SAASC,QAAQ0B,OACrDxC,EAAQqC,yBAA2B5B,KAAKF,IAAI6D,EAAavD,SAASC,QAAQC,UACtEqD,EAAavD,SAASC,QAAQ2B,oBAGlCS,EAAG1C,SAAWC,KAAKF,IAAI2C,EAAG1C,SAAU4D,EAAavD,SAASC,QAAQC,WAClEmC,EAAG1C,SAAWC,KAAKF,IAAI2C,EAAG1C,SAAU4D,EAAavD,SAASC,QAAQ2B,2BA5ChE,EAiDdwB,wBAA0B,SAACf,GACvBA,EAAGpD,SAASC,KAAI,SAACC,EAASmE,GACtBvE,OAAOC,OAAOG,EAAQY,MAAMb,KAAI,SAACqE,EAAcC,GAC3C,GAA+C,IAA5CD,EAAavD,SAASC,QAAQC,UAAjC,CAGA,IAGIuD,EAHK,GAAMF,EAAavD,SAAS6B,eAAe3B,UAAYqD,EAAavD,SAASC,QAAQC,UACrF,GAAMqD,EAAavD,SAAS8B,gBAAgB5B,UAAYqD,EAAavD,SAASC,QAAQC,UACtF,GAAMqD,EAAavD,SAAS+B,gBAAgB7B,UAAYqD,EAAavD,SAASC,QAAQC,UAE5FuD,GAAK,EACJF,EAAa7B,iBAAmB,EAE5B+B,GAAK,GACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,GACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,GACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,IACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,IACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,IACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,KACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,KACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,KACTF,EAAa7B,iBAAmB,EAE5B+B,GAAK,IACTF,EAAa7B,iBAAmB,YA1FlC,EAgGdyB,0BAA4B,SAACd,GAEzB,IAAIqB,EAAY,EACZC,EAAgB,EAChBC,EAAc,EACdC,EAAkB,EACtB9E,OAAO+E,KAAKzB,EAAGrB,WAAW9B,KAAI,SAACT,EAAMsF,GAC9BC,EAAcvF,IAASwF,EAAoBxF,KAC1CiF,GAAaM,EAAcvF,GAC3BkF,GAAiBM,EAAoBxF,GACrCmF,IACAC,QAQR,IAAIK,GAFJR,GAAaE,IACbD,GAAiBE,GAEjBxB,EAAGpD,SAASC,KAAI,SAACC,EAASmE,GACtBvE,OAAO+E,KAAK3E,EAAQY,MAAMb,KAAI,SAACT,EAAM+E,GAC9BQ,EAAcvF,IAASwF,EAAoBxF,KAC1C,EAAK0F,+BAA+B1F,EAAMU,EAAQY,KAAKtB,GAAMuB,SAAUkE,GACvE,EAAKC,+BAA+B1F,EAAMU,EAAQY,KAAKtB,GAAMuD,IAAKkC,WAxHpE,EA8HdC,+BAAiC,SAAC1F,EAAM2F,EAAOF,GAC3C,IACIG,EAAQH,GADWF,EAAcvF,GAAQwF,EAAoBxF,IAEjE,EAAK6F,4BAA4BD,EAAOD,EAAMnE,SAC9C,EAAKqE,4BAA4BD,EAAOD,EAAMvC,gBAC9C,EAAKyC,4BAA4BD,EAAOD,EAAMtC,iBAC9C,EAAKwC,4BAA4BD,EAAOD,EAAMrC,kBApIpC,EAuIduC,4BAA8B,SAACD,EAAOE,GAClCA,EAAK,mBAAyBA,EAAK,UAAgBF,GAxIzC,EA2IdnB,cAAgB,SAACb,GACbA,EAAGpD,SAASC,KAAI,SAACC,EAASmE,GACtBvE,OAAOC,OAAOG,EAAQY,MAAMb,KAAI,SAACqE,EAAcC,GAC3C,EAAKgB,mBAAmBjB,EAAavD,UACrC,EAAKwE,mBAAmBjB,EAAavB,YA/InC,EAoJdwC,mBAAqB,SAACJ,GAClB,EAAKK,gBAAgBL,EAAMnE,SAC3B,EAAKwE,gBAAgBL,EAAMvC,gBAC3B,EAAK4C,gBAAgBL,EAAMtC,iBAC3B,EAAK2C,gBAAgBL,EAAMrC,kBAxJjB,EA2Jd0C,gBAAkB,SAACF,GACfA,EAAK,OAAaA,EAAK,UAAgBA,EAAK,UAAgBA,EAAK,UA5JvD,EA+JdtB,WAAa,SAACZ,EAAIqC,EAAWC,EAAOC,GAChC,IAAIC,GAAS,EADmC,uBAEhD,IAAI,IAAJ,IAAgBF,EAAhB,+CAAuB,CAAC,IAAhB5E,EAAe,QAChB8E,GACID,GACC,EAAKA,YAAYvC,EAAItC,GAEzB8E,GAAS,GAGT,EAAKC,SAASzC,EAAIqC,EAAW3E,IAVW,oFA/JtC,EA8Kd6E,YAAc,SAACvC,EAAIwC,GACf,IAAI,IAAIE,EAAI,EAAGA,EAAIF,EAAOpF,OAAQsF,IAC9B1C,EAAGpD,SAAS+F,KAAK,IAAI/D,EAAQ4D,EAAOE,MAhL9B,EAoLdD,SAAW,SAACzC,EAAIqC,EAAWO,GACvB,IAAIxG,GAAQwG,EAAI,GAAKA,EAAI,GAAK,KAAOA,EAAI,GAAKA,EAAI,IAAOA,EAAI,GAAKA,EAAI,GAAK,KAAOA,EAAI,GAAKA,EAAI,GAAM,GACrG5C,EAAGrB,UAAUvC,GAAQ,CAACwG,EAAI,GAAIA,EAAI,IAClC,IAAI,IAAIF,EAAI,EAAGA,EAAIE,EAAIxF,OAAQsF,IAAK,CAChC,IAAIhF,EAAOsC,EAAGpD,SAAS8F,EAAI,GAAGhF,KAC1BA,EAAKtB,KACLsB,EAAKtB,GAAQ,IAAIgD,GAErB,IAAI8B,EAAexD,EAAKtB,GACxB,EAAKyG,WAAWzG,EAAMwG,EAAKF,EAAGL,EAAWnB,KA7LnC,EAiMd2B,WAAa,SAACzG,EAAMwG,EAAKF,EAAGL,EAAWnB,GAEnC,IAAIgB,EAAQY,OAAOF,EAAIF,IACvBxB,EAAavD,SAASC,QAAQyE,GAAaH,EAC3ChB,EAAavB,IAAI/B,QAAQyE,GAAa,EAAK1C,IAAIvD,EAAM8F,GAGlDQ,GAAK,GACJxB,EAAavD,SAAS6B,eAAe6C,GAAaH,EAAQY,OAAOF,EAAIF,EAAI,IACzExB,EAAavB,IAAIH,eAAe6C,GAAa,EAAK1C,IAAIvD,EAAM8F,EAAQY,OAAOF,EAAIF,EAAI,OAEnFxB,EAAavD,SAAS6B,eAAe6C,GAAa,EAClDnB,EAAavB,IAAIH,eAAe6C,GAAa,GAI9CK,GAAK,GACJxB,EAAavD,SAAS8B,gBAAgB4C,GAAaH,EAAQY,OAAOF,EAAIF,EAAI,IAC1ExB,EAAavB,IAAIF,gBAAgB4C,GAAa,EAAK1C,IAAIvD,EAAM8F,EAAQY,OAAOF,EAAIF,EAAI,OAEpFxB,EAAavD,SAAS8B,gBAAgB4C,GAAa,EACnDnB,EAAavB,IAAIF,gBAAgB4C,GAAa,GAI/CK,GAAK,IACJxB,EAAavD,SAAS+B,gBAAgB2C,GAAaH,EAAQY,OAAOF,EAAIF,EAAI,IAC1ExB,EAAavB,IAAID,gBAAgB2C,GAAa,EAAK1C,IAAIvD,EAAM8F,EAAQY,OAAOF,EAAIF,EAAI,OAEpFxB,EAAavD,SAAS+B,gBAAgB2C,GAAa,EACnDnB,EAAavB,IAAID,gBAAgB2C,GAAa,IA/NxC,EAmOd1C,IAAM,SAACvD,EAAM8F,GACT,OAAO,IAAUA,EAAQN,EAAoBxF,IApOnC,EAuOd6D,YAAc,SAAC8C,EAAKhD,GAChBiD,IAAKxC,MAAMuC,EAAK,CACZE,UAAU,EACVC,SAAS,WAAD,4BAAE,WAAgBC,GAAhB,SAAAC,EAAA,sDACNrD,EAASoD,GADH,2CAAF,mDAAC,MAxOb,EAAKjD,aAAe,yJACpB,EAAKE,aAAe,yJACpB,EAAKE,YAAc,sJAJT,EAFlB,2BAA0C/B,GCPrB8E,E,kCAAAA,EAEVC,QAAU,SAAAC,GACb,OAAIA,EAAM,IACChG,KAAKC,MAAM+F,EAAM,KAAa,GAAK,KACnCA,EAAM,IACNhG,KAAKC,MAAM+F,EAAM,KAAU,GAAK,IAChCA,EAAM,IACNhG,KAAKC,MAAM+F,EAAM,KAAO,GAAK,IAE7BhG,KAAKC,MAAM+F,I,YCTTC,E,iLAEjB,IAEIvH,EAAaC,KAAKC,MAAMF,WACxBI,EAAUH,KAAKC,MAAME,QACrBC,EAAYJ,KAAKC,MAAMG,UACvBa,EALW,IAKYlB,EAAWW,SAASQ,OAC/C,OACE,yBAAKb,MAPQ,IAOSC,OANR,IAM2BC,KAAK,OAE1CP,KAAKC,MAAMsH,MAAM5G,KAAI,SAACT,EAAMsF,GAC1B,IAAIrE,EAAMpB,EAAWqB,SACjBoG,EAAS,GAcb,OAZAhH,OAAOC,OAAOV,EAAWW,UAAUC,KAAI,SAACC,EAASC,GAC/C,IAAImF,EAAQpF,EAAQY,KAAKtB,GAAMuB,SAASC,QAAQC,UAC7CqE,EAAQ,IAEPA,EADE7F,EACMkB,KAAKC,MAAOD,KAAKE,IAAIyE,GAAS3E,KAAKE,IAAIJ,GAhB7C,KAkBME,KAAKC,MAAO0E,EAAQ7E,EAlB1B,KAoBQ6E,GAEdwB,GAAU3G,EAAYI,EAAW,KAtB3B,IAsB8C+E,GAAS,OAG7D,2BACE,8BAAUlE,UAAW,YAAY0D,EAC/BgC,OAAQA,IAEV,0BACE1F,UAAW,gBAAgB0D,EAC3BzD,EAAG,EACHE,EAAG,IAAMuD,EAAQ,IAEhBtF,OAMX,uBAAG4B,UAAU,wBACX,0BACIC,GAAIhC,EAAWW,SAASQ,OAAS,EAAId,GAAaa,EAClDgB,EAAG,EACH5B,MAAOY,EACPiB,OA7CM,Y,GAHmBC,IAAMC,WCyCvCqF,EAAeC,aAAW,SAAAC,GAAK,MAAK,CACxCC,QAAS,CACPC,gBAAiBF,EAAMG,QAAQC,OAAOC,MACtCC,MAAO,sBACPC,UAAWP,EAAMQ,QAAQ,OAJRT,CAMjBU,KAEEC,E,YAEJ,WAAYpI,GAAQ,IAAD,uBACjB,4CAAMA,KAsCRqI,kBAAoB,WAChB,EAAKC,UAxCU,EA2CnBC,mBAAqB,SAACC,GACpB,GAAG,EAAKC,MAAM3I,WAAY,CACxB,EAAK4I,qBAAqBF,EAAW,EAAKxI,OAC1C,IAAM2I,EAAS,EAAKjI,IAAIkI,eAAeC,QAGvCtI,OAAOC,OAAOmI,GAAQjI,KAAI,SAACoI,GACO,cAA5BA,EAAMC,QAAQlH,WAChBiH,EAAME,kBAIVzI,OAAOC,OAAOmI,GAAQjI,KAAI,SAACoI,GACO,cAA5BA,EAAMC,QAAQlH,WAChBiH,EAAME,kBAIVzI,OAAOC,OAAOmI,GAAQjI,KAAI,SAACoI,GACO,cAA5BA,EAAMC,QAAQlH,WAChBiH,EAAME,kBAIVzI,OAAOC,OAAOmI,GAAQjI,KAAI,SAACoI,GACO,aAA5BA,EAAMC,QAAQlH,WAChBiH,EAAME,oBArEK,EAsYnBC,YAAc,SAACpF,GACb,OACE,yBAAKhC,UAAU,eACb,+BACE,+BACE,4BACE,wBAAIA,UAAW,8BACf,wBAAIA,UAAW,sCAAuCqH,MAAO,UAC3D,kBAAC1B,EAAD,CACE2B,MACE,yBAAKC,MAAO,CAACC,UAAW,YAAxB,WACU,4CAGZC,MAAO,OACPC,sBAAsB,GAEtB,uBACEC,QAAS,WACP,EAAKC,SAAS,CACZC,WAAY,aAEb,kBAAC,IAAD,CAAiBC,KAAMC,IAAcC,KAAM,UAIpD,wBAAIhI,UAAW,kBACb,kBAAC2F,EAAD,CACE2B,MACE,yBAAKC,MAAO,CAACC,UAAW,YAAxB,WACU,wCAGZC,MAAO,OACPC,sBAAsB,GAEtB,uBACEC,QAAS,WACP,EAAKC,SAAS,CACZC,WAAY,WAHlB,cASJ,wBAAI7H,UAAW,iBAAkBqH,MAAO,UACxC,kBAAC1B,EAAD,CACE2B,MACE,yBAAKC,MAAO,CAACC,UAAW,YACtB,gDADF,yKAMFC,MAAO,OACPC,sBAAsB,GAEtB,uBACEC,QAAS,WACP,EAAKC,SAAS,CACZC,WAAY,uBAIhB,kBAAC,IAAD,CAAiBC,KAAMG,IAAaD,KAAM,UAI9C,wBAAIhI,UAAW,6BAA8BqH,MAAO,UAClD,kBAAC1B,EAAD,CACE2B,MACE,yBAAKC,MAAO,CAACC,UAAW,YAAxB,WACU,+CAGZC,MAAO,OACPC,sBAAsB,GAEtB,uBACEC,QAAS,WACP,EAAKC,SAAS,CACZC,WAAY,gBAIhB,kBAAC,IAAD,CAAiBC,KAAMI,IAAaF,KAAM,UAIhD,wBAAIhI,UAAW,8BAA+BqH,MAAO,UACnD,kBAAC1B,EAAD,CACE2B,MACE,yBAAKC,MAAO,CAACC,UAAW,YAAxB,WACU,+CAGZC,MAAO,OACPC,sBAAsB,GAEtB,uBACEC,QAAS,WACP,EAAKC,SAAS,CACZC,WAAY,gBAIhB,kBAAC,IAAD,CAAiBC,KAAMK,IAAaH,KAAM,UAIhD,wBAAIhI,UAAW,2BAA4BqH,MAAO,UAChD,kBAAC1B,EAAD,CACE2B,MACE,yBAAKC,MAAO,CAACC,UAAW,YAAxB,WACU,8CAGZC,MAAO,OACPC,sBAAsB,GAEtB,uBACEC,QAAS,WACP,EAAKC,SAAS,CACZC,WAAY,eAIhB,kBAAC,IAAD,CAAiBC,KAAMM,IAAeJ,KAAM,YAMtD,+BAEItJ,OAAO+E,KAAKzB,EAAGtC,MAAM2I,MAAK,SAACjD,EAAGkD,GAC5B,IAAIC,EAAO,EAAK3B,MAAM4B,QAAU,MAAQ,WACxC,GAA4B,SAAxB,EAAK5B,MAAMiB,WAAqB,CAClC,IAAIY,EAAIrD,EACRA,EAAIkD,EACJA,EAAIG,MAE2B,qBAAxB,EAAK7B,MAAMiB,YAClBzC,EAAIpD,EAAGtC,KAAK0F,GAAG/D,iBACfiH,EAAItG,EAAGtC,KAAK4I,GAAGjH,mBAEf+D,EAAIpD,EAAGtC,KAAK0F,GAAGmD,GAAM3I,QAAQ,EAAKgH,MAAMiB,YACxCzC,EAAIsD,MAAMtD,GAAK,EAAIA,EACnBkD,EAAItG,EAAGtC,KAAK4I,GAAGC,GAAM3I,QAAQ,EAAKgH,MAAMiB,YACxCS,EAAII,MAAMJ,GAAK,EAAIA,GAErB,OAAS,OAANlD,GAAoB,OAANkD,EACR,EACO,OAANlD,EACD,EACO,OAANkD,GAGAlD,GAAKkD,GAFL,EAEe,KAExBzJ,KAAI,SAACT,EAAM+E,GACZ,GAAY,WAAT/E,EAAmB,CACpB,IAAIyB,EAAa,EAAK+G,MAAM4B,QAAWxG,EAAGtC,KAAKtB,GAAMuD,IAAI/B,QAAQC,UAAYmC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQC,UACxGyB,EAAU,EAAKsF,MAAM4B,QAAWxG,EAAGtC,KAAKtB,GAAMuD,IAAI/B,QAAQ0B,OAASU,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQ0B,OACtGA,EAASoH,MAAMpH,GAAU,MAAQA,EACjC,IAAIxB,EAAa,EAAK8G,MAAM4B,QAAWxG,EAAGtC,KAAKtB,GAAMuD,IAAI/B,QAAQE,UAAYkC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQE,UACxGC,EAAY,EAAK6G,MAAM4B,QAAWxG,EAAGtC,KAAKtB,GAAMuD,IAAI/B,QAAQG,SAAWiC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQG,SACtGsB,EAAmBW,EAAGtC,KAAKtB,GAAMiD,iBAIrC,OAHwB,OAArBA,IACDA,EAAmB,OAGnB,wBAAIrB,UAAU,iBAAiB2H,QAAS,WAClC,EAAKC,SAAS,CACVe,IAAK,EAAK/B,MAAM3I,WAAW0C,UAAUvC,GAAM,GAC3CwK,IAAK,EAAKhC,MAAM3I,WAAW0C,UAAUvC,GAAM,GAC3CyK,KAAM,EAAItJ,KAAKuJ,SAAW,OAGlC,wBAAI9I,UAAW,iCAAkCqH,MAAO,UAAWlE,EAAgB,GACnF,wBAAInD,UAAW,2CAA4CqH,MAAO,SAAUhC,EAAMC,QAAQhE,IAC1F,wBAAItB,UAAW,0BAA2B5B,GAC1C,wBAAI4B,UAAW,kBACb,yBAAKA,UAAW,oCAAsCqB,GACnDA,EAAuC,QAArBA,EAA6B,MAAQ,KAG5D,wBAAIrB,UAAW,kCAAmCqH,MAAO,SAAUhC,EAAMC,QAAQzF,IACjF,wBAAIG,UAAW,mCAAoCqH,MAAO,SAAUhC,EAAMC,QAAQxF,IAClF,wBAAIE,UAAW,gCAAiCqH,MAAO,SAAUhC,EAAMC,QAAQvF,aAnkBhF,EA+kBnBgJ,WAAa,SAAC/G,GACZ,IAAMgH,EAAW,CAAC,EAAKpC,MAAMgC,IAAK,EAAKhC,MAAM+B,KAC7C,OACE,kBAACM,EAAA,EAAD,CAAKC,IAAK,SAACA,GAAU,EAAKrK,IAAMqK,GAAMC,OAAQH,EAAUH,KAAM,EAAKjC,MAAMiC,KAAMO,aAAa,GAC1F,kBAACC,EAAA,EAAD,CACEC,YAAY,yEACVvE,IAAK,EAAK6B,MAAM2C,WAGpB,kBAACC,EAAA,EAAD,CAAYC,IAAK,GACb,EAAKC,gBAAgB1H,IAGzB,kBAACwH,EAAA,EAAD,CAAYC,IAAK,EAAGzJ,UAAW,iBAC3B,EAAK2J,iBAAiB3H,IAG1B,kBAACwH,EAAA,EAAD,CAAYC,IAAK,EAAGzJ,UAAW,iBAC3B,EAAK4J,iBAAiB5H,IAG1B,kBAACwH,EAAA,EAAD,CAAYC,IAAK,EAAGzJ,UAAW,kBAC3B,EAAK6J,iBAAiB7H,IAG1B,kBAACwH,EAAA,EAAD,CAAYC,IAAK,EAAGzJ,UAAW,iBAC3B,EAAK8J,gBAAgB9H,MAzmBZ,EA+mBnB0H,gBAAkB,SAAC1H,GACjB,MAC0B,SAAxB,EAAK4E,MAAMmD,UACXrL,OAAO+E,KAAKzB,EAAGtC,MAAMb,KAAI,SAACT,EAAM+E,GAC9B,IACI6E,EADAgC,EAAMpG,EAAoBxF,GAE9B,OAAQ,EAAKwI,MAAMmD,UACjB,IAAK,QACH/B,EAAOhG,EAAGtC,KAAKtB,GAAMuB,SAAS6B,eAAeF,OAAS,EAAKsF,MAAM3I,WAAWqB,SAC5E,MACF,IAAK,QACH0I,EAAOhG,EAAGtC,KAAKtB,GAAMuB,SAAS8B,gBAAgBH,OAAS,EAAKsF,MAAM3I,WAAWqB,SAC7E,MACF,IAAK,QACH0I,EAAOhG,EAAGtC,KAAKtB,GAAMuB,SAAS+B,gBAAgBJ,OAAS,EAAKsF,MAAM3I,WAAWqB,SAGjF,IAAI2K,EAAMjC,GAAQ,EAClBA,EAAOzI,KAAK2K,IAAIlC,GAChBA,EAAO,EAAKmC,SAASnC,GACrBA,EAAO,EAAKoC,SAASpC,EAAMgC,GAC3BhC,EAAO,EAAKqC,eAAerC,GAC3B,IAAIsC,EAAc,EAAK1D,MAAM3I,WAAW0C,UAAUvC,GAClD,OAAI4J,EAAO,GAAc,WAAT5J,GAA8B,WAATA,EAE/B,kBAACmM,EAAA,EAAD,CACId,IAAK,UAAYtG,EACjBoE,MAA4B,QAArB,EAAKX,MAAM4D,MAAkB,CAACC,QAAS,SAAW,CAACA,QAAS,QACnEtB,OAAQ,CAACmB,EAAY,GAAIA,EAAY,IACrCI,UAAWT,EAAM,UAAY,UAC7BU,OAAQjC,MAAMV,GAAQ,EAAIzI,KAAKqL,KAAK5C,GAAQ,EAAKpB,MAAMiE,OACvDC,QAAS,EACTC,YAAa,KAIhB,OAnpBM,EAuqBnBpB,iBAAmB,SAAC3H,GAClB,IAAIgJ,EAAI,eACR,MACwB,SAAtB,EAAKpE,MAAMmD,UACTrL,OAAO+E,KAAKzB,EAAGtC,MAAMb,KAAI,SAACT,EAAM+E,GAC9B,IAAIe,EAAQlC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQ2B,mBAAqByJ,EAAKpE,MAAM3I,WAAWqB,SAAW0L,EAAKpE,MAAMqE,UAExGjD,EAAO,EAAKhE,MAAME,EAAON,EAAoBxF,IACjD,OAAO,EAAK8M,OAAO/H,EAAe6H,EAAKpE,MAAM3I,WAAW0C,UAAUvC,GAAO,OAAQ4J,EAAMhG,EAAGtC,KAAKtB,GAAOA,EAAM,YAAa,QA/qB9G,EAorBnBwL,iBAAmB,SAAC5H,GAClB,IAAIgJ,EAAI,eACR,MACwB,SAAtB,EAAKpE,MAAMmD,UACTrL,OAAO+E,KAAKzB,EAAGtC,MAAMb,KAAI,SAACT,EAAM+E,GAC9B,IAAIe,EAAQlC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQC,UAAYmL,EAAKpE,MAAM3I,WAAWqB,SAEzE0I,EAAO,EAAKhE,MAAME,EAAON,EAAoBxF,IACjD,OAAO,EAAK8M,OAAO/H,EAAe6H,EAAKpE,MAAM3I,WAAW0C,UAAUvC,GAAO,OAAQ4J,EAAMhG,EAAGtC,KAAKtB,GAAOA,EAAM,YAAa,QA5rB9G,EAisBnByL,iBAAmB,SAAC7H,GAClB,IAAIgJ,EAAI,eACR,MACwB,SAAtB,EAAKpE,MAAMmD,UACTrL,OAAO+E,KAAKzB,EAAGtC,MAAMb,KAAI,SAACT,EAAM+E,GAC9B,IAAIe,EAAQlC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQE,UAAYkL,EAAKpE,MAAM3I,WAAWqB,SAC7E4E,GAASlC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQG,SAAWiL,EAAKpE,MAAM3I,WAAWqB,SAEzE,IAAI0I,EAAO,EAAKhE,MAAME,EAAON,EAAoBxF,IACjD,OAAO,EAAK8M,OAAO/H,EAAe6H,EAAKpE,MAAM3I,WAAW0C,UAAUvC,GAAO,OAAQ4J,EAAMhG,EAAGtC,KAAKtB,GAAOA,EAAM,YAAa,QA1sB9G,EA+sBnB0L,gBAAkB,SAAC9H,GACjB,IAAIgJ,EAAI,eACR,MACwB,SAAtB,EAAKpE,MAAMmD,UACTrL,OAAO+E,KAAKzB,EAAGtC,MAAMb,KAAI,SAACT,EAAM+E,GAC9B,IAAIe,EAAQlC,EAAGtC,KAAKtB,GAAMuB,SAASC,QAAQG,SAAWiL,EAAKpE,MAAM3I,WAAWqB,SAExE0I,EAAO,EAAKhE,MAAME,EAAON,EAAoBxF,IACjD,OAAO,EAAK8M,OAAO/H,EAAe6H,EAAKpE,MAAM3I,WAAW0C,UAAUvC,GAAO,OAAQ4J,EAAMhG,EAAGtC,KAAKtB,GAAOA,EAAM,WAAY,QAvtB7G,EA4tBnB8M,OAAS,SAACxH,EAAO4G,EAAanE,EAAO6B,EAAMtI,EAAMtB,EAAM+M,EAAML,GAC3D,OAAG9C,EAAO,GAAc,WAAT5J,GAA8B,WAATA,EAGhC,kBAACmM,EAAA,EAAD,CACEvK,UAAWmL,EACX1B,IAAK0B,EAAO,IAAMzH,EAClB6D,MAA4B,QAArB,EAAKX,MAAM4D,MAAkB,CAACC,QAAS,SAAW,CAACA,QAAS,QACnEtB,OAAQ,CAACmB,EAAY,GAAIA,EAAY,IACrCI,UAAWvE,EACXwE,OAAQ3C,GAAQA,EAAO,EAAIzI,KAAKqL,KAAK5C,GAAQ,EAAKpB,MAAMiE,OAAS,EACjEC,QAAS,EACTC,YAAaD,GAEb,kBAAC,IAAD,CAAUM,UAAU,SAASC,OAAQ,CAAC,EAAG,IAAKP,QAAS,GAEnD,EAAKhF,QAAQ1H,EAAMsB,KAMtB,IAlvBU,EAsvBnBoG,QAAU,SAAC1H,EAAMsB,GACf,IAAI6I,EAAO,EAAK3B,MAAM4B,QAAU,MAAQ,WACpC8C,EAAO,EAAK1E,MAAM4B,QAAU,MAAQ,GACpCnH,EAAmB3B,EAAK2B,iBACJ,OAArBA,IACDA,EAAmB,OAErB,IACE,OACE,6BACE,6BACI,2BAAIjD,GAAS,6BACb,kBAAC,IAAD,CAAiB0J,KAAMyD,MAF3B,IAEuClG,EAAMC,QAAQ1B,EAAoBxF,IAFzE,eAII,0BAAM4B,UAAW,eACf,kBAAC,IAAD,CAAiB8H,KAAMI,MADzB,OAEG,8BAAO7C,EAAMC,QAAQ5F,EAAK6I,GAAM3I,QAAQC,WAAxC,IAAqDyL,IAN5D,eASI,0BAAMtL,UAAW,gBACf,kBAAC,IAAD,CAAiB8H,KAAMK,MADzB,OAEG,8BAAO9C,EAAMC,QAAQ5F,EAAK6I,GAAM3I,QAAQE,WAAxC,IAAqDwL,IAX5D,eAcI,0BAAMtL,UAAW,aACf,kBAAC,IAAD,CAAiB8H,KAAMM,MADzB,OAEG,8BAAO/C,EAAMC,QAAQ5F,EAAK6I,GAAM3I,QAAQG,UAAxC,IAAoDuL,KAG3D,6BAEI5L,EAAK6I,GAAM3I,QAAQ2B,mBAAqB7B,EAAK6I,GAAM3I,QAAQC,WAAa,EAAK+G,MAAM4E,UAAY,EAAK5E,MAAMqE,UAAY,GACtH,CACE,kBAACQ,EAAA,EAAD,CAAOzL,UAAW,gBAChB,kBAAC,IAAD,CAAiB8H,KAAMI,MADzB,SAEO,8BAAO7C,EAAMC,QAAQ5F,EAAK6I,GAAM3I,QAAQ2B,mBAAqB,EAAKqF,MAAMqE,WAAxE,IAAqFK,EAArF,iBAAyG,EAAK1E,MAAMqE,UAApH,+BAEP,8BAGJ,kBAACQ,EAAA,EAAD,CAAOC,QAAS,UACZ,kBAAC,IAAD,CAAiB5D,KAAMC,MAD3B,OAEK,8BAAO1C,EAAMC,QAAQ5F,EAAK6I,GAAM3I,QAAQ0B,QAAxC,IAAkDgK,EAAlD,YAbP,eAgBE,kBAACG,EAAA,EAAD,CAAOC,QAAS,WACZ,kBAAC,IAAD,CAAiB5D,KAAM6D,MAD3B,OAEMhI,EAAcvF,IAAS,8BAAOiH,EAAMC,QAAQ3B,EAAcvF,IAAnC,YACtBuF,EAAcvF,IAAS,kDAE9B,8BAEF,yBAAK4B,UAAU,wBAEX,CACE,0BAAMA,UAAU,oBAAoB,EAAK4L,iBAAiBlM,EAAKC,SAASC,QAAQ0B,SAChF,8BAGJ,+BACE,+BACE,4BACE,wBAAIuK,OAAQ,OACV,yBAAK7L,UAAS,yCAAoCqB,IAC/CA,EAAuC,QAArBA,EAA6B,MAAQ,KAG5D,4BACE,6BACE,gDADF,kCACyD,6BADzD,kDAEiD,6BAFjD,uDAOJ,4BACE,6BACA,4BAAI,kBAAC,IAAD,CAAiByG,KAAMgE,MAA3B,IAAoD,sEAA2C,6BAA3C,oCAGpD,EAAKlF,MAAM4B,SACX,4BACE,6BACA,4BAAI,0BAAMxI,UAAU,cAAhB,oDAMd,kBAAC,EAAD,CACE/B,WAAY,EAAK2I,MAAM3I,WACvBG,KAAMA,EACNC,QAAS,EAAKuI,MAAMvI,QACpBC,UAAW,EAAKsI,MAAMtI,YAExB,6BACA,yBAAK0B,UAAW,eAAhB,0BAC2B,2BAAI,EAAK4G,MAAMvI,QAAU,kBAAoB,aADxE,eACoG,6BAAM,gFAI9G,MAAM0N,GAEN,OADAC,QAAQvM,IAAIsM,GACL,iCA71BQ,EAi2BnBH,iBAAmB,SAACtK,GAClB,OAAGA,EAAS,IACH,2CAELA,EAAS,EACJ,sCAEF,4CAx2BU,EAk9BnB0C,MAAQ,SAACE,EAAO+H,GAKd,OAJA/H,EAAQ,EAAKgI,iBAAiBhI,GAC9BA,EAAQ,EAAKiG,SAASjG,GACtBA,EAAQ,EAAKkG,SAASlG,EAAO+H,GAC7B/H,EAAQ,EAAKmG,eAAenG,IAt9BX,EA09BnBgI,iBAAmB,SAAChI,GAClB,MAAsB,SAAnB,EAAK0C,MAAM4D,OAAqC,QAAnB,EAAK5D,MAAM4D,MAC1B,GAARtG,EAEFA,GA99BU,EAi+BnBiG,SAAW,SAACjG,GACV,OAAI,EAAK0C,MAAMvI,QAGZ6F,EAAQ,EACPA,EAAQ3E,KAAKE,IAAIyE,EAAQ,EAAK0C,MAAM3I,WAAWqB,UAAYC,KAAKE,IAAI,EAAKmH,MAAM3I,WAAWqB,UAAY,GAGnG,EANE4E,GAn+BQ,EA4+BnBkG,SAAW,SAAClG,EAAO+H,GACjB,OAAI,EAAKrF,MAAM4B,QAGZyD,GACG/H,EAAQ,GAAQ+H,EAAa,IACxB,IAAU/H,EAAQ+H,EAAa,GAGnC,EAPE/H,GA9+BQ,EAw/BnBmG,eAAiB,SAACnG,GAChB,OAAG,EAAK0C,MAAMvI,SAAW,EAAKuI,MAAM4B,QAC3BtE,EAAQ,EAEVA,GA5/BU,EA+/BnBiI,MA//BmB,uCA+/BX,WAAOC,GAAP,SAAAhH,EAAA,+EACC,IAAIiH,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAD5C,2CA//BW,sDAGjB,EAAKxF,MAAQ,CACX4F,kBAAmBrO,EAAMqO,kBACzBC,kBAAmBtO,EAAMsO,kBACzBC,iBAAkBvO,EAAMuO,iBACxBC,2BAA4BxO,EAAMwO,2BAClC9B,OAAQ,GACRxM,SAAS,EACT0L,SAAU,OACVvB,SAAS,EACToE,WAAW,EACXpB,UAAU,EACVP,UAAW,EACX3M,UAAW,EACXuO,UAAU,EACVtD,SAAU,2CACVuD,aAAc,CAAC,YAAa,YAAa,YAAa,YACtD7O,WAAY,KACZ4J,WAAY,SAEZe,IAAK,EACLD,IAAK,EACLE,KAAM,GAMR,EAAKhK,IAAM,KAEX,IAAImM,EAAI,eAhCS,OAiCjB,IAAIlJ,GAAuBtB,eAAc,SAACvC,GACxC+M,EAAKpE,MAAM3I,WAAaA,EACxB+M,EAAKpD,SAAS,OAnCC,E,sEA2ET,IAAD,OACP,GAAI1J,KAAK0I,MAAM3I,WAGV,CACH,IAAI+M,EAAO9M,KACP8D,EAAK9D,KAAK0I,MAAM3I,WAAWW,SAASW,KAAKF,IAAI,EAAGnB,KAAK0I,MAAM3I,WAAWW,SAASQ,OAAS,EAAIlB,KAAK0I,MAAMtI,YAK3G,OAJA0M,EAAKpE,MAAM4F,kBAAkBxK,EAAGjB,gBAChCiK,EAAKpE,MAAM6F,kBAAkBzK,EAAGhB,gBAChCgK,EAAKpE,MAAM8F,iBAAiB1K,EAAGf,eAC/B+J,EAAKpE,MAAM+F,2BAA2B3K,EAAGb,wBAA0B6J,EAAKpE,MAAMqE,WAE1E,oCACE,yBAAKjL,UAAW,kBAAoBgL,EAAKpE,MAAMgG,UAAY,aAAe,KAOxE,4BAAQG,OAAQ/B,EAAKpE,MAAMgG,UAAW5M,UAAW,eAAgB2H,QAAS,WACxEqD,EAAKpD,SAAS,CAACgF,WAAW,MAD5B,YAEY,kBAAC,IAAD,CAAiB9E,KAAMkF,OACnC,4BAAQD,QAAS/B,EAAKpE,MAAMgG,UAAW5M,UAAW,eAAgB2H,QAAS,WACzEqD,EAAKpD,SAAS,CAACgF,WAAW,MAD5B,QAIA,yBAAKG,OAAQ/B,EAAKpE,MAAMgG,WACtB,0BAAM5M,UAAU,yBAAhB,SACA,kBAAC,IAAD,CACIsH,MAAO,8BAAM,yCAAN,0EAA8F,6BAAK,6BAAK,6CAAxG,gGACPG,MAAO,OACPwF,OAAK,EACLvF,sBAAsB,GAExB,0BAAM1H,UAAU,QAAO,kBAAC,IAAD,CAAiB8H,KAAMoF,IAAYlF,KAAM,SAElE,kBAACmF,EAAA,EAAKC,QAAN,CAAclJ,MAAO8G,EAAKpE,MAAMmD,SAClBxC,MAAO,CAAC8F,WAAY,OAAQC,QAAS,MAAOC,SAAU,OAAQnN,OAAQ,QAAS4H,KAAK,KACpFwF,GAAG,SAASC,SAAU,SAAC1B,GACnCf,EAAKpD,SAAS,CAACmC,SAAUgC,EAAE2B,YAAYC,OAAOzJ,MAAOsG,MAAO,MAAOgB,UAAU,EAAOP,UAAW,MAE/F,4BAAQ/G,MAAM,QAAd,aACA,4BAAQA,MAAM,SAAd,iCACA,4BAAQA,MAAM,SAAd,+BACA,4BAAQA,MAAM,SAAd,gCAEF,0BAAMlE,UAAU,yBAAhB,kBACA,kBAAC,IAAD,CACIsH,MAAM,2EACNG,MAAO,OACPwF,OAAK,EACLvF,sBAAsB,GAExB,0BAAM1H,UAAU,QAAO,kBAAC,IAAD,CAAiB8H,KAAMoF,IAAYlF,KAAM,SAElE,6BACA,kBAACmF,EAAA,EAAKS,MAAN,CACIC,QAAM,EACN7N,UAAU,QACV8N,QAAS9C,EAAKpE,MAAMvI,QACpB0P,MACE,kBAAC,IAAD,CACIzG,MAAM,4DACNG,MAAO,OACPwF,OAAK,EACLvF,sBAAsB,GAExB,sCAGJyD,KAAM,WACN/M,KAAM,IACN4P,GAAE,oBACFP,SAAU,WACRzC,EAAKpD,SAAS,CACZvJ,SAAU2M,EAAKpE,MAAMvI,aAI7B,kBAAC8O,EAAA,EAAKS,MAAN,CACIC,QAAM,EACN7N,UAAU,QACV8N,QAAS9C,EAAKpE,MAAM4B,QACpBuF,MACE,kBAAC,IAAD,CACIzG,MAAM,8FACNG,MAAO,OACPwF,OAAK,EACLvF,sBAAsB,GAExB,6CAGJyD,KAAM,WACN/M,KAAM,IACN4P,GAAE,oBACFP,SAAU,WACRzC,EAAKpD,SAAS,CACZY,SAAUwC,EAAKpE,MAAM4B,aAG3B,6BAEwB,SAAxBwC,EAAKpE,MAAMmD,WAAwBiB,EAAKpE,MAAMiG,UAC9C,CACE,0BAAM7M,UAAU,yBAAhB,0BACA,kBAAC,IAAD,CACIsH,MAAM,4GACNG,MAAO,OACPwF,OAAK,EACLvF,sBAAsB,GAExB,0BAAM1H,UAAW,QAAQ,kBAAC,IAAD,CAAiB8H,KAAMoF,IAAYlF,KAAM,SAEpE,6BACA,kBAAC,IAAD,CACEiG,MAAO,CAAC,EAAG,EAAG,EAAG,GACjBC,aAAc,CAAC,MAAO,cAAe,KAAM,MAC3ChK,MAAOhG,KAAK0I,MAAMqE,UAClBkD,OAAQ,SAAApC,GACN,EAAKnF,MAAMqE,UAAYc,EAAE4B,OAAOzJ,MAChC,EAAK0C,MAAM4E,UAAW,EACtB,EAAK/E,UAEP2H,KAAM,GACN/O,IAAK,EACLgP,IAAK,IAEP,8BAGJ,0BAAMrO,UAAU,yBAAhB,eAA0D,6BAC1D,kBAAC,IAAD,CAAsBkE,MAAOhG,KAAK0I,MAAMiE,OAAQsD,OAAQ,SAAApC,GACtD,EAAKnE,SAAS,CAACiD,OAAQkB,EAAE4B,OAAOzJ,MAAO3F,MAAOwN,EAAE4B,OAAOzJ,MAAQ,MAC9DkK,KAAM,EAAG/O,IAAK,IAAKgP,IAAK,IAA0B,6BAIrD,0BAAMrO,UAAU,oBAAhB,cAAoD,6BACpD,kBAACmN,EAAA,EAAKC,QAAN,CAAclJ,MAAO8G,EAAKpE,MAAM2C,SAClBhC,MAAO,CAAC8F,WAAY,OAAQC,QAAS,MAAOC,SAAU,OAAQnN,OAAQ,QAAS4H,KAAK,KACpFwF,GAAG,SAASC,SAAU,SAAC1B,GACnCf,EAAKpD,SAAS,CAAC2B,SAAUwC,EAAE2B,YAAYC,OAAOzJ,UAE9C,4BAAQA,MAAM,4CAAd,SACA,4BAAQA,MAAM,gFAAd,SAEA,4BAAQA,MAAM,+EAAd,SAIF,yBAAKlE,UAAW,WACd,kBAACyL,EAAA,EAAD,KAAO,uBAAGkC,OAAO,SAAS3N,UAAU,iBAAiBsO,IAAI,sBAC/CC,KAAM,qDAAqD,kBAAC,IAAD,CACjEzG,KAAM0G,MAFH,YAGP,kBAAC/C,EAAA,EAAD,KAAO,uBAAGkC,OAAO,SAAS3N,UAAU,iBAAiBsO,IAAI,sBAC/CC,KAAM,oDAAoD,kBAAC,IAAD,CAChEzG,KAAM2G,MAFH,WAGP,kBAAChD,EAAA,EAAD,KAAO,uBAAGkC,OAAO,SAAS3N,UAAU,iBAAiBsO,IAAI,sBAC/CC,KAAM,sEAAsE,kBAAC,IAAD,CAClFzG,KAAM4G,MAFH,gBAMb,yBAAK1O,UAAU,kBACb,4BAAQ2O,UAAQ,EAACpH,MAAO,CAACuD,QAAS,EAAG8D,cAAe,QAAS5O,UAAW,wBACtE,2BAAIgC,EAAGnB,OAET,yBAAKb,UAAW,aACd,kBAAC,EAAD,CACE/B,WAAYC,KAAK0I,MAAM3I,WACvBK,UAAWJ,KAAK0I,MAAMtI,UACtBD,QAASH,KAAK0I,MAAMvI,QACpBoH,MAAO,CAAC,KAAM,QAAS,QAAS,UAAW,SAAU,OAAQ,iBAAkB,cAAe,kBAGlG,4BACIzF,UAAW9B,KAAK0I,MAAMtI,UAAY,EAAI,+BAAiC,uCACvEiJ,MAAO,CAACnH,OAAQ,OAAQiN,WAAY,QACpC1F,QAAS,WACL,EAAKC,SAAS,CACXtJ,UAAW,EAAKsI,MAAMtI,UAAY,EAClCkN,UAAU,MAGpB,kBAAC,IAAD,CAAiB1D,KAAM+G,OAExB,4BACI7O,UAAW,mCACXuH,MAAOrJ,KAAK0I,MAAMtI,UAAY,IAAMJ,KAAK0I,MAAMiG,SAAW,CACxDzM,OAAQ,OACRiN,WAAY,QACV,CAAC5C,QAAS,QACd9C,QAAS,WACP,EAAKf,MAAMtI,UAAYiB,KAAK8O,IAAI,EAAG,EAAKzH,MAAMtI,UAAY,GAC7B,IAAzB,EAAKsI,MAAMtI,UACb,EAAKsI,MAAMiG,UAAW,EAEtB,EAAKjG,MAAM4E,UAAW,EAExB,EAAK/E,WAEV,kBAAC,IAAD,CAAiBqB,KAAMgH,OAExB,4BACI9O,UAAW9B,KAAK0I,MAAMtI,UAAY,EAAI,0CAA4C,kCAClFiJ,MAAO,CAACnH,OAAQ,OAAQiN,WAAY,QACpC1F,QAAS,WACP,EAAKC,SAAS,CACZtJ,UAAW,MALnB,UAUA,4BACI0B,UAAW,8BACXuH,MAAO,CAACnH,OAAQ,OAAQiN,WAAY,QACpC1F,QAAS,WACPoH,SAASC,uBAAuB,aAAa,GAAGzH,MAAMkD,QAAU,OAChEsE,SAASC,uBAAuB,QAAQ,GAAGzH,MAAMkD,QAAU,OAC3DsE,SAASC,uBAAuB,YAAY,GAAGzH,MAAMkD,QAAU,OAC/DsE,SAASC,uBAAuB,WAAW,GAAGzH,MAAMkD,QAAU,OAE9D,IAAIwE,EAAM,IAAIC,KACVC,EAAY,IAAID,KAAK,6BAEzB,EAAKtH,SAAS,CACZtJ,WAAaiB,KAAKC,MAAMD,KAAK2K,KAAK+E,EAAME,GAF3B,QAGb3D,UAAU,EACVP,UAAW,EACX4B,UAAU,EACVuC,WAAW,IAEb,IAAIC,EAAWC,aAAY,WACzB,IAAKtE,EAAKpE,MAAMiG,SAKd,OAJA0C,cAAcF,QACd,EAAKzH,SAAS,CACVtJ,UAAW,IAIZ,EAAKsI,MAAMwI,YACd,EAAKxH,SAAS,CACVtJ,UAAW,EAAKsI,MAAMtI,UAAY,IAET,IAAzB,EAAKsI,MAAMtI,YACbyQ,SAASC,uBAAuB,aAAa,GAAGzH,MAAMkD,QAAU,SAChEsE,SAASC,uBAAuB,QAAQ,GAAGzH,MAAMkD,QAAU,SAC3DsE,SAASC,uBAAuB,YAAY,GAAGzH,MAAMkD,QAAU,SAC/DsE,SAASC,uBAAuB,WAAW,GAAGzH,MAAMkD,QAAU,OAC9D,EAAK7C,SAAS,CACXiF,UAAU,EACV5B,UAAW,EACXO,UAAU,QAIhB,OAER,kBAAC,IAAD,CAAiB1D,KAAM0H,OAExB,4BACIxP,UAAW,qBAAuB9B,KAAK0I,MAAMwI,UAAY,cAAgB,oBACzE7H,MAAOrJ,KAAK0I,MAAMiG,SAAW,CAACzM,OAAQ,OAAQiN,WAAY,QAAU,CAAC5C,QAAS,QAC9E9C,QAAS,WACL,EAAKC,SAAS,CACVwH,WAAY,EAAKxI,MAAMwI,eAK9BlR,KAAK0I,MAAMwI,WACZ,CAAC,kBAAC,IAAD,CAAiBtH,KAAM2H,MAAkB,UAG1CvR,KAAK0I,MAAMwI,WACX,CAAC,kBAAC,IAAD,CAAiBtH,KAAM0H,MAAiB,cAI7C,4BACIxP,UAAW,6BACXuH,MAAOrJ,KAAK0I,MAAMiG,SAAW,CAACzM,OAAQ,OAAQiN,WAAY,QAAU,CAAC5C,QAAS,QAC9E9C,QAAS,WACPoH,SAASC,uBAAuB,aAAa,GAAGzH,MAAMkD,QAAU,SAChEsE,SAASC,uBAAuB,QAAQ,GAAGzH,MAAMkD,QAAU,SAC3DsE,SAASC,uBAAuB,YAAY,GAAGzH,MAAMkD,QAAU,SAC/DsE,SAASC,uBAAuB,WAAW,GAAGzH,MAAMkD,QAAU,OAC9D,EAAK7D,MAAMiG,UAAW,EACtB,EAAKjG,MAAMqE,UAAY,EACvB,EAAKxE,WAEV,kBAAC,IAAD,CAAiBqB,KAAM4H,MAZxB,UAgBwB,SAAxB1E,EAAKpE,MAAMmD,UACX,2BAAO4F,wBAAyB,CAC9BC,OAAO,yNASV5E,EAAKjC,WAAW/G,GAChBgJ,EAAK5D,YAAYpF,IAnTxB,OAAQ,kBAAC6N,EAAA,EAAD,U,GA/ES5G,KAsgCR6G,iBAAKvJ,G,gCCp/BLwJ,MAxDf,WAAgB,IAAD,EAC+BC,mBAAS,GADxC,mBACNjP,EADM,KACUyL,EADV,OAE+BwD,mBAAS,GAFxC,mBAENhP,EAFM,KAEUyL,EAFV,OAG6BuD,mBAAS,GAHtC,mBAGN/O,EAHM,KAGSyL,EAHT,OAIiDsD,mBAAS,GAJ1D,mBAIN7O,EAJM,KAImBwL,EAJnB,KAMb,MACE,CACE,kBAACsD,EAAA,EAAD,CAAQC,GAAG,QAAQC,MAAM,MAAMnQ,UAAW,WAAYoQ,OAAQ,MAC5D,kBAACH,EAAA,EAAOI,MAAR,KACI,0BAAMrQ,UAAU,SAAhB,IAAyB,kBAAC,IAAD,CAAiB8H,KAAMwI,MAAhD,UACA,0BAAMtQ,UAAW,SAAS,kCAAU,0BAAMA,UAAU,kBAAhB,SAEtC,8BAEImB,EAA0BJ,GAC1B,0BAAMf,UAAW,2BACf,kBAAC,IAAD,CAAiB8H,KAAMI,IAAalI,UAAW,SAC9CqF,EAAMC,QAAQnE,IAIjBA,GAA2BJ,GAC3B,0BAAMf,UAAW,0BACf,kBAAC,IAAD,CAAiB8H,KAAMI,IAAalI,UAAW,SAC9CqF,EAAMC,QAAQvE,IAGnB,0BAAMf,UAAW,2BACf,kBAAC,IAAD,CAAiB8H,KAAMK,IAAanI,UAAW,SAC9CqF,EAAMC,QAAQtE,IAEjB,0BAAMhB,UAAW,cACf,kBAAC,IAAD,CAAiB8H,KAAMM,IAAepI,UAAW,SAChDqF,EAAMC,QAAQrE,MAIvB,kBAACsP,EAAA,EAAD,CAAWC,OAAK,EAACxQ,UAAW,mBAC1B,kBAACyQ,EAAA,EAAD,CAAKC,UAAW,OAAQ1Q,UAAW,SACjC,kBAAC2Q,EAAA,EAAD,CAAK3Q,UAAW,SACd,kBAAC,EAAD,CACIyJ,IAAK,WACLlC,MAAO,CAACqJ,UAAW,QACnBpE,kBAAmBA,EACnBC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,2BAA4BA,SCrD5CkE,IAASpK,OAAO,kBAAC,EAAD,MAASsI,SAAS+B,eAAe,W","file":"static/js/main.d6a45e03.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class BarChart extends React.Component {\n  render() {\n    let datasource = this.props.datasource;\n    let name = this.props.name;\n    let logmode = this.props.logmode;\n    let dayOffset = this.props.dayOffset;\n    return (\n      <svg width=\"272\" heigth=\"145\" role=\"img\">\n        {\n          Object.values(datasource.datasets).map((dataset, dateIndex) => {\n            let svgWidth = 272;\n            let svgHeight = 145;\n            let barWidth = svgWidth / (datasource.datasets.length);\n            let max = datasource.maxValue;\n            // let confirmedProjectedBarHeight;\n            let confirmedBarHeight;\n            let recoveredBarHeight;\n            let deceasedBarHeight;\n            if(logmode) {\n                // confirmedProjectedBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.confirmedProjected * this.state.testscale) / Math.log(max)) * svgHeight);\n                confirmedBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.confirmed) / Math.log(max)) * svgHeight);\n                recoveredBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.recovered) / Math.log(max)) * svgHeight);\n                deceasedBarHeight = Math.round((Math.log(dataset.data[name].absolute.current.deceased) / Math.log(max)) * svgHeight);\n            } else {\n                // confirmedProjectedBarHeight = Math.round((dataset.data[name].absolute.current.confirmedProjected * this.state.testscale / max) * svgHeight);\n                confirmedBarHeight = Math.round((dataset.data[name].absolute.current.confirmed / max) * svgHeight);\n                recoveredBarHeight = Math.round((dataset.data[name].absolute.current.recovered / max) * svgHeight);\n                deceasedBarHeight = Math.round((dataset.data[name].absolute.current.deceased / max) * svgHeight);\n            }\n            return(\n              <g>\n                {\n                  dayOffset === dateIndex - datasource.datasets.length + 1 &&\n                  <g className=\"todayMarker\">\n                    <rect x={String(dateIndex * barWidth)} y={0} width={barWidth} height={svgHeight}></rect>\n                  </g>\n                }\n                {\n                  /*<g className=\"confirmedProjectedBar\">\n                    <rect x={String(dateIndex * barWidth)} y={svgHeight - confirmedProjectedBarHeight} width={barWidth} height={confirmedProjectedBarHeight}></rect>\n                  </g>*/\n                }\n                <g className=\"confirmedBar\">\n                 <rect x={String(dateIndex * barWidth)} y={svgHeight - confirmedBarHeight} width={barWidth} height={confirmedBarHeight}></rect>\n                </g>\n                <g className=\"recoveredBar\">\n                  <rect x={String(dateIndex * barWidth)} y={svgHeight - recoveredBarHeight} width={barWidth} height={recoveredBarHeight}></rect>\n                </g>\n                <g className=\"deceasedBar\">\n                  <rect x={String(dateIndex * barWidth)} y={svgHeight - deceasedBarHeight} width={barWidth} height={deceasedBarHeight}></rect>\n                </g>\n              </g>\n            );\n          })\n        }\n      </svg>\n    );\n  }\n}\n","export class DatasourceProvider {\n\n    constructor(name) {\n        this.name = name;\n    }\n\n    getDatasource = () => {\n        throw Error(\"not implemented\");\n    };\n}\n","\n\nexport class Datasource {\n\n    constructor() {\n\n        // data sets order by time\n        this.datasets = [];\n\n        // location id -> lat/lon\n        this.locations = {};\n\n        // maximum value (for normalization)\n        this.maxValue = 0;\n    }\n\n}\n\nexport class Dataset {\n\n    constructor(date) {\n\n        this.date = date;\n\n        // camera coordinates (for story mode)\n        this.cameraCoordinates = null;\n\n        // location id -> data\n        this.data = {};\n\n        // stats\n        this.totalConfirmed = 0;\n        this.totalRecovered = 0;\n        this.totalDeceased = 0;\n        this.totalActive = 0;\n        this.totalConfirmedProjected = 0;\n    }\n}\n\nexport class Data {\n    constructor() {\n\n        this.containmentScore = null;\n\n        this.absolute = {\n            current: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast1Day: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast3Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast7Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            }\n        };\n\n        this.ppm = {\n            current: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast1Day: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast3Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            },\n            growthLast7Days: {\n                confirmed: null,\n                recovered: null,\n                deceased: null,\n                active: null,\n                confirmedProjected: null\n            }\n        };\n    }\n}\n\nexport class CameraCoordinates {\n    constructor(location, zoom) {\n        this.location = location;\n        this.zoom = zoom;\n    }\n}\n\nexport class Location {\n    constructor(lat, lon) {\n        this.lat = lat;\n        this.lon = lon;\n    }\n}\n","// Population counts extracted from the following sources:\n// US States: from https://www.census.gov/newsroom/press-kits/2019/national-state-estimates.html:\n// Countries: from https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/CSV_FILES/WPP2019_TotalPopulationBySex.csv\n// China: from https://www.worldatlas.com/articles/chinese-provinces-by-population.html\n// Australia: from https://en.wikipedia.org/wiki/States_and_territories_of_Australia\n// Diamond Princess: https://www.nytimes.com/2020/03/08/world/asia/coronavirus-cruise-ship.html\nexport const ABSOLUTE = {\n  \"Alabama, US\": 4903185,\n  \"Alaska, US\": 731545,\n  \"Arizona, US\": 7278717,\n  \"Arkansas, US\": 3017804,\n  \"California, US\": 39512223,\n  \"Colorado, US\": 5758736,\n  \"Connecticut, US\": 3565287,\n  \"Delaware, US\": 973764,\n  \"District of Columbia, US\": 705749,\n  \"Florida, US\": 21477737,\n  \"Georgia, US\": 10617423,\n  \"Hawaii, US\": 1415872,\n  \"Idaho, US\": 1787065,\n  \"Illinois, US\": 12671821,\n  \"Indiana, US\": 6732219,\n  \"Iowa, US\": 3155070,\n  \"Kansas, US\": 2913314,\n  \"Kentucky, US\": 4467673,\n  \"Louisiana, US\": 4648794,\n  \"Maine, US\": 1344212,\n  \"Maryland, US\": 6045680,\n  \"Massachusetts, US\": 6892503,\n  \"Michigan, US\": 9986857,\n  \"Minnesota, US\": 5639632,\n  \"Mississippi, US\": 2976149,\n  \"Missouri, US\": 6137428,\n  \"Montana, US\": 1068778,\n  \"Nebraska, US\": 1934408,\n  \"Nevada, US\": 3080156,\n  \"New Hampshire, US\": 1359711,\n  \"New Jersey, US\": 8882190,\n  \"New Mexico, US\": 2096829,\n  \"New York, US\": 19453561,\n  \"North Carolina, US\": 10488084,\n  \"North Dakota, US\": 762062,\n  \"Ohio, US\": 11689100,\n  \"Oklahoma, US\": 3956971,\n  \"Oregon, US\": 4217737,\n  \"Pennsylvania, US\": 12801989,\n  \"Rhode Island, US\": 1059361,\n  \"South Carolina, US\": 5148714,\n  \"South Dakota, US\": 884659,\n  \"Tennessee, US\": 6829174,\n  \"Texas, US\": 28995881,\n  \"Utah, US\": 3205958,\n  \"Vermont, US\": 623989,\n  \"Virginia, US\": 8535519,\n  \"Washington, US\": 7614893,\n  \"West Virginia, US\": 1792147,\n  \"Wisconsin, US\": 5822434,\n  \"Wyoming, US\": 578759,\n  \"Afghanistan\": 38928341,\n  \"Africa\": 1340598113,\n  \"African Group\": 1338826591,\n  \"African Union\": 1339423921,\n  \"African Union: Central Africa\": 158619638,\n  \"African Union: Eastern Africa\": 392563672,\n  \"African Union: Northern Africa\": 207032899,\n  \"African Union: Southern Africa\": 184002188,\n  \"African Union: Western Africa\": 397205524,\n  \"African, Caribbean and Pacific (ACP) Group of States\": 1179679906,\n  \"Albania\": 2877800,\n  \"Algeria\": 43851043,\n  \"American Samoa\": 55197,\n  \"Andean Community\": 113170819,\n  \"Andorra\": 77265,\n  \"Angola\": 32866267.999999996,\n  \"Anguilla\": 15002,\n  \"Antigua and Barbuda\": 97928,\n  \"Argentina\": 45195777,\n  \"Armenia\": 2963234,\n  \"Aruba, Netherlands\": 106766,\n  \"Asia\": 4641054786,\n  \"Asia-Pacific Economic Cooperation (APEC)\": 2972249482,\n  \"Asia-Pacific Group\": 4621682230,\n  \"Association of Southeast Asian Nations (ASEAN)\": 667301412,\n  \"Australia\": 25499881,\n  \"Australia/New Zealand\": 30322114,\n  \"Austria\": 9006400,\n  \"Azerbaijan\": 10139175,\n  \"BRIC\": 3177822028,\n  \"BRICS\": 3237130718,\n  \"Bahamas\": 393248,\n  \"Bahrain\": 1701583,\n  \"Bangladesh\": 164689383,\n  \"Barbados\": 287371,\n  \"Belarus\": 9449321,\n  \"Belgium\": 11589616,\n  \"Belize\": 397621,\n  \"Belt-Road Initiative (BRI)\": 3403061795,\n  \"Belt-Road Initiative: Africa\": 1192659576,\n  \"Belt-Road Initiative: Asia\": 1572525725,\n  \"Belt-Road Initiative: Europe\": 413895375,\n  \"Belt-Road Initiative: Latin America and the Caribbean\": 208569955,\n  \"Belt-Road Initiative: Pacific\": 15411164,\n  \"Benin\": 12123198,\n  \"Bermuda, United Kingdom\": 62273,\n  \"Bhutan\": 771612,\n  \"Black Sea Economic Cooperation (BSEC)\": 343357186,\n  \"Bolivarian Alliance for the Americas (ALBA)\": 58690348,\n  \"Bolivia\": 11673029,\n  \"Bonaire, Sint Eustatius and Saba\": 26221,\n  \"Bosnia and Herzegovina\": 3280815,\n  \"Botswana\": 2351625,\n  \"Brazil\": 212559409,\n  \"British Virgin Islands\": 30237,\n  \"Brunei\": 437483,\n  \"Bulgaria\": 6948445,\n  \"Burkina Faso\": 20903278,\n  \"Burundi\": 11890781,\n  \"Cabo Verde\": 555988,\n  \"Cambodia\": 16718971.000000002,\n  \"Cameroon\": 26545864,\n  \"Canada\": 37742157,\n  \"Caribbean\": 43532374,\n  \"Caribbean Community and Common Market (CARICOM)\": 18849823,\n  \"Cayman Islands, United Kingdom\": 65720,\n  \"Central African Republic\": 4829764,\n  \"Central America\": 179670186,\n  \"Central Asia\": 74338926,\n  \"Central European Free Trade Agreement (CEFTA)\": 25746658,\n  \"Central and Southern Asia\": 2014708531,\n  \"Chad\": 16425859,\n  \"Channel Islands, United Kingdom\": 173859,\n  \"Jersey, United Kingdom\": 97857,\n  \"Chile\": 19116209,\n  \"China\": 1439323774,\n  \"China (and dependencies)\": 1471286879,\n  \"China, Hong Kong SAR\": 7496988,\n  \"China, Macao SAR\": 649342,\n  \"Taiwan*\": 23816775,\n  \"Colombia\": 50882884,\n  \"Commonwealth of Independent States (CIS)\": 290592838,\n  \"Commonwealth of Nations\": 2565385550,\n  \"Commonwealth: Africa\": 583993867,\n  \"Commonwealth: Asia\": 1825653173,\n  \"Commonwealth: Caribbean and Americas\": 44597814,\n  \"Commonwealth: Europe\": 69534904,\n  \"Commonwealth: Pacific\": 41605792,\n  \"Comoros\": 869595,\n  \"Congo (Kinshasa)\": 11860000,\n  \"Congo (Brazzaville)\": 1800000,\n  \"Cook Islands\": 17564,\n  \"Costa Rica\": 5094114,\n  \"Countries with Access to the Sea\": 7199203331,\n  \"Countries with Access to the Sea: Africa\": 999209561,\n  \"Countries with Access to the Sea: Asia\": 4474222842,\n  \"Countries with Access to the Sea: Europe\": 679066702,\n  \"Countries with Access to the Sea: Latin America and the Caribbean\": 635156773,\n  \"Countries with Access to the Sea: Northern America\": 368869644,\n  \"Countries with Access to the Sea: Oceania\": 42677809,\n  \"Croatia\": 4105268,\n  \"Cuba\": 11326616,\n  \"Curacao, Netherlands\": 164100,\n  \"Cyprus\": 1207361,\n  \"Czechia\": 10708982,\n  \"Cote d'Ivoire\": 26378275,\n  \"Dem. People's Republic of Korea\": 25778815,\n  \"Denmark, Denmark\": 5792203,\n  \"Denmark\": 5792203,\n  \"Denmark (and dependencies)\": 5897840,\n  \"Djibouti\": 988002,\n  \"Dominica\": 71991,\n  \"Dominican Republic\": 10847904,\n  \"ECE: North America-2\": 368744804,\n  \"ECE: UNECE-52\": 1301482488,\n  \"ECLAC: Latin America\": 641934032,\n  \"ECLAC: The Caribbean\": 12024817,\n  \"ESCAP region: East and North-East Asia\": 1654272852,\n  \"ESCAP region: North and Central Asia\": 237364970,\n  \"ESCAP region: Pacific\": 42665213,\n  \"ESCAP region: South and South-West Asia\": 2024708672,\n  \"ESCAP region: South-East Asia\": 668619854,\n  \"ESCAP: ADB Developing member countries (DMCs)\": 4064234805,\n  \"ESCAP: ADB Group A (Concessional assistance only)\": 165457879,\n  \"ESCAP: ADB Group B (OCR blend)\": 1812617151,\n  \"ESCAP: ADB Group C (Regular OCR only)\": 2086159775,\n  \"ESCAP: ASEAN\": 667301412,\n  \"ESCAP: Central Asia\": 91430510,\n  \"ESCAP: ECO\": 512630793,\n  \"ESCAP: HDI groups\": 4627631561,\n  \"ESCAP: Landlocked countries (LLDCs)\": 166831944,\n  \"ESCAP: Least Developed Countries (LDCs)\": 314374173,\n  \"ESCAP: Pacific island dev. econ.\": 12343099,\n  \"ESCAP: SAARC\": 1856376652,\n  \"ESCAP: WB High income econ.\": 223305480,\n  \"ESCAP: WB Low income econ.\": 93843964,\n  \"ESCAP: WB Lower middle income econ.\": 2414189200,\n  \"ESCAP: WB Upper middle income econ.\": 1896273735,\n  \"ESCAP: WB income groups\": 4627612379,\n  \"ESCAP: high HDI\": 222728251,\n  \"ESCAP: high income\": 222956185,\n  \"ESCAP: income groups\": 4627631561,\n  \"ESCAP: low HDI\": 1933858787,\n  \"ESCAP: low income\": 2096735108,\n  \"ESCAP: lower middle HDI\": 2069715776,\n  \"ESCAP: lower middle income\": 586217954,\n  \"ESCAP: other Asia-Pacific countries/areas\": 200828133,\n  \"ESCAP: upper middle HDI\": 401328747,\n  \"ESCAP: upper middle income\": 1721722314,\n  \"ESCWA: Arab countries\": 436378875,\n  \"ESCWA: Arab least developed countries\": 96075713,\n  \"ESCWA: Gulf Cooperation Council countries\": 58664095,\n  \"ESCWA: Maghreb countries\": 99451506,\n  \"ESCWA: Mashreq countries\": 182187561,\n  \"ESCWA: member countries\": 374777016,\n  \"East African Community (EAC)\": 195283232,\n  \"Eastern Africa\": 445405578,\n  \"Eastern Asia\": 1678089627,\n  \"Eastern Europe\": 293013210,\n  \"Eastern European Group\": 339831453,\n  \"Eastern and South-Eastern Asia\": 2346709481,\n  \"Economic Community of Central African States (ECCAS)\": 204438115,\n  \"Economic Community of West African States (ECOWAS)\": 397205524,\n  \"Economic Cooperation Organization (ECO)\": 512630793,\n  \"Ecuador\": 17643060,\n  \"Egypt\": 102334403,\n  \"El Salvador\": 6486201,\n  \"Equatorial Guinea\": 1402985,\n  \"Eritrea\": 3546427,\n  \"Estonia\": 1326539,\n  \"Eswatini\": 1160164,\n  \"Ethiopia\": 114963583,\n  \"Eurasian Economic Community (Eurasec)\": 223691520,\n  \"Europe\": 747636045,\n  \"Europe (48)\": 747636045,\n  \"Europe and Northern America\": 1116505689,\n  \"European Community (EC: 12)\": 384860299,\n  \"European Free Trade Agreement (EFTA)\": 14455247,\n  \"European Union (EU: 15)\": 409506687,\n  \"European Union (EU: 28)\": 513136526,\n  \"Falkland Islands (Malvinas)\": 3483,\n  \"Faroe Islands, Denmark\": 48865,\n  \"Fiji\": 896444,\n  \"Finland\": 5540718,\n  \"France, France\": 65273512,\n  \"France\": 65273512,\n  \"France (and dependencies)\": 68147687,\n  \"French Guiana, France\": 298682,\n  \"French Polynesia, France\": 280904,\n  \"Gabon\": 2225728,\n  \"Gambia, The\": 2416664,\n  \"Gambia\": 2416664,\n  \"Georgia\": 3989175,\n  \"Germany\": 83783945,\n  \"Ghana\": 31072945,\n  \"Gibraltar, United Kingdom\": 33691,\n  \"Greater Arab Free Trade Area (GAFTA)\": 413978399,\n  \"Greece\": 10423056,\n  \"Greenland, Denmark\": 56772,\n  \"Grenada\": 112519,\n  \"Group of 77 (G77)\": 6135279467,\n  \"Group of Eight (G8)\": 918561011,\n  \"Group of Seven (G7)\": 772626551,\n  \"Group of Twenty (G20) - member states\": 4653331418,\n  \"Guadeloupe, France\": 400127,\n  \"Guam, US\": 168783,\n  \"Guatemala\": 17915567,\n  \"Guinea\": 13132792,\n  \"Guinea-Bissau\": 1967998,\n  \"Gulf Cooperation Council (GCC)\": 58664095,\n  \"Guyana\": 786559,\n  \"Haiti\": 11402533,\n  \"High-income countries\": 1263092934,\n  \"Holy See\": 809,\n  \"Honduras\": 9904608,\n  \"Hungary\": 9660350,\n  \"Iceland\": 341250,\n  \"India\": 1380004385,\n  \"Indonesia\": 273523621,\n  \"Iran\": 83992953,\n  \"Iraq\": 40222503,\n  \"Ireland\": 4937796,\n  \"Isle of Man, United Kingdom\": 85032,\n  \"Israel\": 8655541,\n  \"Italy\": 60461828,\n  \"Jamaica\": 2961161,\n  \"Japan\": 126476458,\n  \"Jordan\": 10203140,\n  \"Kazakhstan\": 18776707,\n  \"Kenya\": 53771300,\n  \"Kiribati\": 119446,\n  \"Kosovo\": 1831000,\n  \"Kuwait\": 4270563,\n  \"Kyrgyzstan\": 6524191,\n  \"LLDC: Africa\": 341388552,\n  \"LLDC: Asia\": 166831944,\n  \"LLDC: Europe\": 6117343,\n  \"LLDC: Latin America\": 18805559,\n  \"Land-locked Countries\": 595596207,\n  \"Land-locked Countries (Others)\": 62452809,\n  \"Land-locked Developing Countries (LLDC)\": 533143398.00000006,\n  \"Laos\": 7275556,\n  \"Latin America and the Caribbean\": 653962332,\n  \"Latin American Integration Association (ALADI)\": 573658551,\n  \"Latin American and Caribbean Group (GRULAC)\": 649376323,\n  \"Latvia\": 1886202,\n  \"League of Arab States (LAS, informal name: Arab League)\": 436378875,\n  \"Least developed countries\": 1057438163,\n  \"Least developed: Africa\": 701835489,\n  \"Least developed: Asia\": 343074875,\n  \"Least developed: Latin America and the Caribbean\": 11402533,\n  \"Least developed: Oceania\": 1125266,\n  \"Lebanon\": 6825442,\n  \"Lesotho\": 2142252,\n  \"Less developed regions\": 6521494468,\n  \"Less developed regions, excluding China\": 5050207589,\n  \"Less developed regions, excluding least developed countries\": 5464056305,\n  \"Less developed: Africa\": 1340598113,\n  \"Less developed: Asia\": 4514578328,\n  \"Less developed: Latin America and the Caribbean\": 653962332,\n  \"Less developed: Oceania\": 12355695,\n  \"Liberia\": 5057677,\n  \"Libya\": 6871287,\n  \"Liechtenstein\": 38137,\n  \"Lithuania\": 2722291,\n  \"Low-income countries\": 775710612,\n  \"Lower-middle-income countries\": 3098235284,\n  \"Luxembourg\": 625976,\n  \"Madagascar\": 27691019,\n  \"Malawi\": 19129955,\n  \"Malaysia\": 32365998,\n  \"Maldives\": 540542,\n  \"Mali\": 20250834,\n  \"Malta\": 441539,\n  \"Marshall Islands\": 59194,\n  \"Martinique, France\": 375265,\n  \"Mauritania\": 4649660,\n  \"Mauritius\": 1271767,\n  \"Mayotte, France\": 272813,\n  \"Melanesia\": 11122990,\n  \"Mexico\": 128932753,\n  \"Micronesia\": 548927,\n  \"Micronesia (Fed. States of)\": 115021,\n  \"Middle Africa\": 179595125,\n  \"Middle-income countries\": 5753051615,\n  \"Monaco\": 39244,\n  \"Mongolia\": 3278292,\n  \"Montenegro\": 628062,\n  \"Montserrat, United Kingdom\": 4999,\n  \"More developed regions\": 1273304261,\n  \"More developed: Asia\": 126476458,\n  \"More developed: Europe\": 747636045,\n  \"More developed: Northern America\": 368869644,\n  \"More developed: Oceania\": 30322114,\n  \"Morocco\": 36910558,\n  \"Mozambique\": 31255435,\n  \"Myanmar\": 54409794,\n  \"Namibia\": 2540916,\n  \"Nauru\": 10834,\n  \"Nepal\": 29136808,\n  \"Netherlands, Netherlands\": 17134873,\n  \"Netherlands\": 17134873,\n  \"Netherlands (and dependencies)\": 17474842,\n  \"New Caledonia, France\": 285491,\n  \"New EU member states (joined since 2004)\": 103629839,\n  \"New Zealand\": 4822233,\n  \"New Zealand (and dependencies)\": 4842765,\n  \"Nicaragua\": 6624554,\n  \"Niger\": 24206636,\n  \"Nigeria\": 206139587,\n  \"Niue\": 1618,\n  \"No income group available\": 2943568,\n  \"Non-Self-Governing Territories\": 1753672,\n  \"North American Free Trade Agreement (NAFTA)\": 497677557,\n  \"North Atlantic Treaty Organization (NATO)\": 944255667,\n  \"North Macedonia\": 2083380,\n  \"Northern Africa\": 246232508,\n  \"Northern Africa and Western Asia\": 525869282,\n  \"Northern America\": 368869644,\n  \"Northern Europe\": 106261271,\n  \"Northern Mariana Islands\": 57557,\n  \"Norway\": 5421242,\n  \"Oceania\": 42677809,\n  \"Oceania (excluding Australia and New Zealand)\": 12355695,\n  \"Oman\": 5106622,\n  \"Organisation for Economic Co-operation and Development (OECD)\": 1313469470,\n  \"Organization for Security and Co-operation in Europe (OSCE)\": 1296294632,\n  \"Organization of American States (OAS)\": 1018121127,\n  \"Organization of Petroleum Exporting countries (OPEC)\": 518144279,\n  \"Organization of the Islamic Conference (OIC)\": 1907530488,\n  \"Pakistan\": 220892331,\n  \"Palau\": 18092,\n  \"Panama\": 4314768,\n  \"Papua New Guinea\": 8947027,\n  \"Paraguay\": 7132530,\n  \"Peru\": 32971845.999999996,\n  \"Philippines\": 109581085,\n  \"Poland\": 37846605,\n  \"Polynesia\": 683778,\n  \"Portugal\": 10196707,\n  \"Prince Edward Island, Canada\": 156947,\n  \"Puerto Rico, US\": 2860840,\n  \"Qatar\": 2881060,\n  \"Korea, South\": 51269183,\n  \"Moldova\": 4033963,\n  \"Romania\": 19237682,\n  \"Russia\": 145934460,\n  \"Rwanda\": 12952209,\n  \"Reunion, France\": 895308,\n  \"SIDS Atlantic, and Indian Ocean, Mediterranean and South China Sea (AIMS)\": 16226846,\n  \"SIDS Caribbean\": 43506153,\n  \"SIDS Pacific\": 12343099,\n  \"Saint Barthelemy, France\": 9885,\n  \"Saint Helena\": 6071,\n  \"Saint Kitts and Nevis\": 53192,\n  \"Saint Lucia\": 183629,\n  \"St Martin, France\": 38659,\n  \"Saint Pierre and Miquelon\": 5795,\n  \"Saint Vincent and the Grenadines\": 110947,\n  \"Samoa\": 198410,\n  \"San Marino\": 33938,\n  \"Sao Tome and Principe\": 219161,\n  \"Saudi Arabia\": 34813867,\n  \"Senegal\": 16743930,\n  \"Serbia\": 8737370,\n  \"Seychelles\": 98340,\n  \"Shanghai Cooperation Organization (SCO)\": 3254462689,\n  \"Sierra Leone\": 7976985,\n  \"Singapore\": 5850343,\n  \"Sint Maarten, Netherlands\": 42882,\n  \"Slovakia\": 5459643,\n  \"Slovenia\": 2078931.9999999998,\n  \"Small Island Developing States (SIDS)\": 72076098,\n  \"Solomon Islands\": 686878,\n  \"Somalia\": 15893219,\n  \"South Africa\": 59308690,\n  \"South America\": 430759772,\n  \"South Asian Association for Regional Cooperation (SAARC)\": 1856376652,\n  \"South Sudan\": 11193729,\n  \"South-Eastern Asia\": 668619854,\n  \"Southern Africa\": 67503647,\n  \"Southern African Development Community (SADC)\": 363228526,\n  \"Southern Asia\": 1940369605,\n  \"Southern Common Market (MERCOSUR)\": 308470415,\n  \"Southern Europe\": 152215243,\n  \"Spain\": 46754783,\n  \"Sri Lanka\": 21413250,\n  \"West Bank and Gaza\": 5101416,\n  \"Sub-Saharan Africa\": 1094365605,\n  \"Sudan\": 43849269,\n  \"Suriname\": 586634,\n  \"Sweden\": 10099270,\n  \"Switzerland\": 8654618,\n  \"Syria\": 17500657,\n  \"Tajikistan\": 9537642,\n  \"Thailand\": 69799978,\n  \"Timor-Leste\": 1318442,\n  \"Togo\": 8278736.999999999,\n  \"Tokelau\": 1350,\n  \"Tonga\": 105697,\n  \"Trinidad and Tobago\": 1399491,\n  \"Tunisia\": 11818618,\n  \"Turkey\": 84339067,\n  \"Turkmenistan\": 6031187,\n  \"Turks and Caicos Islands\": 38718,\n  \"Tuvalu\": 11792,\n  \"UN-ECE: member countries\": 1301671072,\n  \"UNFPA Regions\": 6435966035,\n  \"UNFPA: Arab States (AS)\": 377302147,\n  \"UNFPA: Asia and the Pacific (AP)\": 4082579031,\n  \"UNFPA: East and Southern Africa (ESA)\": 617189215,\n  \"UNFPA: Eastern Europe and Central Asia (EECA)\": 249965985,\n  \"UNFPA: Latin America and the Caribbean (LAC)\": 649907020,\n  \"UNFPA: West and Central Africa (WCA)\": 459022637,\n  \"UNICEF PROGRAMME REGIONS\": 6518336209,\n  \"UNICEF Programme Regions: East Asia and Pacific (EAPRO)\": 2142209426,\n  \"UNICEF Programme Regions: Eastern Caribbean\": 2406024,\n  \"UNICEF Programme Regions: Eastern and Southern Africa (ESARO)\": 542249263,\n  \"UNICEF Programme Regions: Europe and Central Asia (CEECIS)\": 280885442,\n  \"UNICEF Programme Regions: Latin America\": 646666007,\n  \"UNICEF Programme Regions: Latin America and Caribbean (LACRO)\": 649072031,\n  \"UNICEF Programme Regions: Middle East and North Africa (MENARO)\": 498959354,\n  \"UNICEF Programme Regions: South Asia (ROSA)\": 1856376652,\n  \"UNICEF Programme Regions: West and Central Africa (WCARO)\": 548584041,\n  \"UNICEF REGIONS\": 7794798729,\n  \"UNICEF Regions: East Asia and Pacific\": 2389387290,\n  \"UNICEF Regions: Eastern Europe and Central Asia\": 426819902,\n  \"UNICEF Regions: Eastern and Southern Africa\": 589624762,\n  \"UNICEF Regions: Europe and Central Asia\": 924612983,\n  \"UNICEF Regions: Latin America and Caribbean\": 653962332,\n  \"UNICEF Regions: Middle East and North Africa\": 463374954,\n  \"UNICEF Regions: North America\": 368869644,\n  \"UNICEF Regions: South Asia\": 1856376652,\n  \"UNICEF Regions: Sub-Saharan Africa\": 1138214874,\n  \"UNICEF Regions: West and Central Africa\": 548590112,\n  \"UNICEF Regions: Western Europe\": 497793081,\n  \"UNITED NATIONS Regional Groups of Member States\": 7789099185,\n  \"Uganda\": 45741000,\n  \"Ukraine\": 43733759,\n  \"United Arab Emirates\": 9890400,\n  \"United Kingdom, United Kingdom\": 67886004,\n  \"United Kingdom\": 67886004,\n  \"United Kingdom (and dependencies)\": 68405089,\n  \"United Nations Economic Commission for Africa (UN-ECA)\": 1338826591,\n  \"United Nations Economic Commission for Latin America and the Caribbean (UN-ECLAC)\": 653958849,\n  \"United Nations Economic and Social Commission for Asia and the Pacific (UN-ESCAP) Regions\": 4627631561,\n  \"United Nations Member States\": 7789099174,\n  \"Tanzania\": 59734213,\n  \"Virgin Islands, US\": 104423,\n  \"United States of America\": 331002647,\n  \"US\": 331002647,\n  \"United States of America (and dependencies)\": 334249447,\n  \"Upper-middle-income countries\": 2654816331,\n  \"Uruguay\": 3473727,\n  \"Uzbekistan\": 33469199,\n  \"Vanuatu\": 307150,\n  \"Venezuela\": 28435943,\n  \"Vietnam\": 97338583,\n  \"WB region: East Asia and Pacific (excluding high income)\": 2142225998.9999998,\n  \"WB region: Europe and Central Asia (excluding high income)\": 422714634,\n  \"WB region: Latin America and Caribbean (excluding high income)\": 575044612,\n  \"WB region: Middle East and North Africa (excluding high income)\": 396445990,\n  \"WB region: South Asia (excluding high income)\": 1856376652,\n  \"WB region: Sub-Saharan Africa (excluding high income)\": 1135954340,\n  \"WHO Regions\": 7750010916,\n  \"WHO: African region (AFRO)\": 1120161235,\n  \"WHO: Americas (AMRO)\": 1018121127,\n  \"WHO: Eastern Mediterranean Region (EMRO)\": 725720786,\n  \"WHO: European Region (EURO)\": 932888131,\n  \"WHO: South-East Asia region (SEARO)\": 2021386630,\n  \"WHO: Western Pacific region (WPRO)\": 1931733007,\n  \"Wallis and Futuna Islands\": 11246,\n  \"West African Economic and Monetary Union (UEMOA)\": 130852886,\n  \"Western Africa\": 401861255,\n  \"Western Asia\": 279636774,\n  \"Western Europe\": 196146321,\n  \"Western European and Others Group (WEOG)\": 923721644,\n  \"Western Sahara\": 597330,\n  \"World\": 7794798729,\n  \"World Bank Regional Groups (developing only)\": 6528762227,\n  \"Yemen\": 29825968,\n  \"Zambia\": 18383956,\n  \"Zimbabwe\": 14862927,\n\t\"Guangdong, China\":\t104303132,\n\t\"Shandong, China\":\t100063065,\n\t\"Henan, China\":\t94023567,\n\t\"Sichuan, China\":\t80418200,\n\t\"Jiangsu, China\":\t78659903,\n\t\"Hebei, China\":\t71854202,\n\t\"Hunan, China\":\t65683722,\n\t\"Anhui, China\":\t59500510,\n\t\"Hubei, China\":\t57237740,\n\t\"Zhejiang, China\":\t54426891,\n\t\"Guangxi, China\":\t46026629,\n\t\"Yunnan, China\":\t45966239,\n\t\"Jiangxi, China\":\t44567475,\n\t\"Liaoning, China\":\t43746323,\n\t\"Fujian, China\":\t36894216,\n\t\"Shaanxi, China\":\t37327378,\n\t\"Heilongjiang, China\":\t38312224,\n\t\"Shanxi, China\":\t37022111,\n\t\"Guizhou, China\":\t35806468,\n\t\"Chongqing, China\":\t28846170,\n\t\"Jilin, China\":\t27462297,\n\t\"Gansu, China\":\t25575254,\n\t\"Inner Mongolia, China\":\t24706321,\n\t\"Xinjiang, China\":\t21813334,\n\t\"Shanghai, China\":\t23019148,\n\t\"Beijing, China\":\t19612368,\n\t\"Tianjin, China\":\t12938224,\n\t\"Hainan, China\":\t9261518,\n\t\"Hong Kong, China\":\t7061200,\n\t\"Ningxia, China\":\t6176900,\n\t\"Qinghai, China\":\t5626722,\n\t\"Tibet, China\":\t3002166,\n\t\"Macau, China\":\t552503,\n\t\"New South Wales, Australia\": 8089952,\n    \"Australian Capital Territory, Australia\": 418440,\n    \"Northern Territory, Australia\": 244300,\n\t\"Queensland, Australia\": 5095100,\n\t\"South Australia, Australia\": 1044353,\n\t\"Tasmania, Australia\": 534281,\n\t\"Victoria, Australia\": 6594804,\n\t\"Western Australia, Australia\": 2621680,\n  \"Alberta, Canada\": 4335768,\n  \"British Columbia, Canada\": 5031893,\n  \"New Brunswick, Canada\": 772790,\n  \"Northwest Territories, Canada\": 45047,\n  \"Nova Scotia, Canada\": 965249,\n  \"Ontario, Canada\": 14441694,\n  \"Quebec, Canada\": 8429241,\n  \"Saskatchewan, Canada\": 1170028,\n  \"Newfoundland and Labrador, Canada\": 521542,\n  \"Manitoba, Canada\": 1361997,\n    \"Yukon, Canada\": 35874,\n\n  \"Diamond Princess, Cruise Ship\": 3700,\n  \"Diamond Princess, Canada\": 3700,\n  \"Diamond Princess\": 3700,\n  \"Grand Princess, Canada\": 3100\n};\n","export const RATES = {\n\n  // https://en.wikipedia.org/wiki/COVID-19_testing\n  \"Argentina\": 2448,\n  \"Armenia\": 1580,\n  \"Australia\": 190926,\n  \"Austria\": 35995,\n  \"Bahrain\": 30506,\n  \"Belarus\": 24000,\n  \"Belgium\": 18360,\n  \"Bolivia\": 191,\n  \"Bosnia and Herzegovina\": 1475,\n  \"Brazil\": 45708,\n  \"Canada\": 161603,\n  \"Alberta, Canada\": 36174,\n  \"British Columbia, Canada\": 34561,\n  \"Manitoba, Canada\": 5606,\n  \"National lab, Canada\": 54956,\n  \"New Brunswick, Canada\": 1828,\n  \"Newfoundland and Labrador, Canda\": 791,\n  \"Northwest Territories, Canada\": 299,\n  \"Nova Scotia, Canada\": 2349,\n  \"Ontario, Canada\": 35635,\n  \"Prince Edward Island, Canada\": 167,\n  \"Quebec, Canada\": 33483,\n  \"Saskatchewan, Canada\": 6270,\n  \"Yukon, Canadaa\": 398,\n  \"Chile\": 7542,\n  \"China - Guangdong\": 320000,\n  \"Colombia\": 8456,\n  \"Costa Rica\": 1885,\n  \"Croatia\": 4482,\n  \"Czechia\": 31127,\n  \"Denmark\": 20716,\n  \"Ecuador\": 5090,\n  \"Estonia\": 7090,\n  \"Finland\": 10000,\n  \"France, France\": 101046,\n  \"Germany\": 483295,\n  \"Grenada\": 18,\n  \"Hong Kong\": 5271,\n  \"Hungary\": 6817,\n  \"Iceland\": 10658,\n  \"India\": 26798,\n  \"Indonesia\": 4489,\n  \"Iran\": 80000,\n  \"Ireland\": 17992,\n  \"Israel\": 37586,\n  \"Italy\": 361060,\n  \"Japan\": 27005,\n  \"Kuwait\": 120000,\n  \"Kazakhstan\": 5093,\n  \"Latvia\": 10613,\n  \"Lithuania\": 5495,\n  \"Malaysia\": 20861,\n  \"Malta\": 4462,\n  \"Mexico\": 2232,\n  \"Nepal\": 802,\n  \"Netherlands, Netherlands\": 44137,\n  \"New Zealand\": 12683,\n  \"Norway\": 73089,\n  \"Pakistan\": 7835,\n  \"Palestine\": 2519,\n  \"Panama\": 4248,\n  \"Peru\": 8037,\n  \"Philippines\": 2285,\n  \"Poland\": 34067,\n  \"Portugal\": 22257,\n  \"Romania\": 17453,\n  \"Russia\": 223509,\n  \"Serbia\": 1456,\n  \"Singapore\": 39000,\n  \"Slovakia\": 4751,\n  \"Slovenia\": 17294,\n  \"South Africa\": 7425,\n  \"South Korea\": 376961,\n  \"Spain\": 355000,\n  \"Sweden\": 24500,\n  \"Switzerland\": 97012,\n  \"Taiwan\": 28507,\n  \"Thailand\": 15342,\n  \"Turkey\": 40290,\n  \"Ukraine\": 1401,\n  \"United Arab Emirates\": 125000,\n  \"United Kingdom\": 113777,\n  \"United States\": 599064,\n  \"US\": 599064,\n  \"Uruguay\": 1538,\n  \"Vietnam\": 31811,\n\n\n  // world in data\n  \"New South Wales, Australia\": 39089,\n  \"Queensland, Australia\": 27000,\n  \"Western Australia, Australia\": 8603,\n  \"Victoria, Australia\": 19337,\n  \"South Australia, Australia\": 16717,\n  \"Tasmania, Australia\": 807,\n  \"Faroe Islands\": 1641,\n  \"Kyrgyzstan\": 1545,\n  \"Qatar\": 8400,\n\n  // https://docs.google.com/spreadsheets/u/2/d/e/2PACX-1vRwAqp96T9sYYq2-i7Tj0pvTf6XVHjDSMIKBdZHXiCGGdNC0ypEU9NbngS8mxea55JuCFuua1MUeOj5/pubhtml#\n  \"Alaska, US\":\t        772,\n  \"Alabama, US\":        152,\n  \"Arkansas, US\":       839,\n  \"Arizona, US\":        516,\n  \"California, US\":     12528,\n  \"Colorado, US\":       3680,\n  \"Connecticut, US\":    2300,\n  \"DC\":                 583,              /* unkown */\n  \"Delaware, US\":       81,\n  \"Florida, US\":        8239,\n  \"Georgia, US\":        3064,\n  \"Guam\":               123,\n  \"Hawaii, US\":         170,\n  \"Iowa, US\":           1117,\n  \"Idaho, US\":          911,\n  \"Illinois, US\":       6247,\n  \"Indiana, US\":        833,\n  \"Kansas, US\":         472,\n  \"Kentucky, US\":       768,\n  \"Louisiana, US\":      2765,\n  \"Massachusetts, US\":  5277,\n  \"Maryland, US\":       284,\n  \"Maine, US\":          2337,\n  \"Michigan, US\":       2856,\n  \"Minnesota, US\":      4090,\n  \"Missouri, US\":       442,\n  \"MP\": 0,               /* unkown */\n  \"Mississippi, US\":    835,\n  \"Montana, US\":        1166,\n  \"North Carolina, US\": 5276,\n  \"North Dakota, US\":   1169,\n  \"Nebraska, US\":       394,\n  \"New Hampshire, US\":  1970,\n  \"New Jersey, US\":     1661,\n  \"New Mexico, US\":     3828,\n  \"Nevada, US\":         2508,\n  \"New York, US\":       45437,\n  \"Ohio, US\":           387,\n  \"Oklahoma, US\":       757,\n  \"Oregon, US\":         2550,\n  \"Pennsylvania, US\":   4137,\n  \"Puerto Rico\":        235,\n  \"Rhode Island, US\":   1218,\n  \"South Carolina, US\": 1407,\n  \"South Dakota, US\":   973,\n  \"Tennessee, US\":      3643,\n  \"Texas, US\":          6522,\n  \"Utah, US\":           2560,\n  \"Virginia, US\":       2790,\n  \"Virgin Islands\":     6,\n  \"Vermont, US\":        808,\n  \"Washington, US\":     23243,\n  \"Wisconsin, US\":      4967,\n  \"West Virginia, US\":  343,\n  \"Wyoming, US\":        461\n\n};\n","import {DatasourceProvider} from \"./DatasourceProvider\";\n\nimport Papa from \"papaparse\";\nimport {Data, Dataset, Datasource} from \"./Datasource\";\n\nimport * as Population from \"../Population\";\nimport * as Testing from \"../TestingRates\";\n\nexport class JHDatasourceProvider extends DatasourceProvider {\n\n    constructor() {\n        super(\"Johns Hopkins CSSE COVID-19\");\n        this.confirmedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\";\n        this.recoveredUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv\";\n        this.deceasedUrl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv\";\n    }\n\n    getDatasource = (callback) => {\n        let ds = new Datasource();\n        // load confirmed data\n        this.loadFromUrl(this.confirmedUrl, (rawConfirmed) => {\n            this.loadFromUrl(this.recoveredUrl, (rawRecovered) => {\n                this.loadFromUrl(this.deceasedUrl, (rawDeceased) => {\n                    this.parse(ds, rawConfirmed.data, rawRecovered.data, rawDeceased.data, callback);\n                    callback(ds);\n                });\n            })\n        });\n    };\n\n    parse = (ds, tableConfirmed, tableRecovered, tableDeceased) => {\n        this.parseTable(ds, \"confirmed\", tableConfirmed, true);\n        this.parseTable(ds, \"recovered\", tableRecovered, false);\n        this.parseTable(ds, \"deceased\", tableDeceased, false);\n        this.computeActive(ds);\n        this.computeConfirmedProjected(ds);\n        this.computeContainmentScore(ds);\n        this.computeTotals(ds);\n    };\n\n    computeTotals = (ds) => {\n        ds.datasets.map((dataset, datasetIndex) => {\n            Object.values(dataset.data).map((locationData, locationIndex) => {\n\n                // sums\n                dataset.totalConfirmed += locationData.absolute.current.confirmed;\n                dataset.totalRecovered += locationData.absolute.current.recovered;\n                dataset.totalDeceased += locationData.absolute.current.deceased;\n                dataset.totalActive += locationData.absolute.current.active;\n                dataset.totalConfirmedProjected += Math.max(locationData.absolute.current.confirmed,\n                    locationData.absolute.current.confirmedProjected);\n\n                // track max\n                ds.maxValue = Math.max(ds.maxValue, locationData.absolute.current.confirmed);\n                ds.maxValue = Math.max(ds.maxValue, locationData.absolute.current.confirmedProjected);\n            });\n        });\n    };\n\n    computeContainmentScore = (ds) => {\n        ds.datasets.map((dataset, datasetIndex) => {\n            Object.values(dataset.data).map((locationData, locationIndex) => {\n                if(locationData.absolute.current.confirmed === 0) {\n                    return;\n                }\n                let g1 = 0.5 * locationData.absolute.growthLast1Day.confirmed / locationData.absolute.current.confirmed;\n                let g3 = 0.3 * locationData.absolute.growthLast3Days.confirmed / locationData.absolute.current.confirmed;\n                let g7 = 0.2 * locationData.absolute.growthLast7Days.confirmed / locationData.absolute.current.confirmed;\n                let g = (g1 + g3 + g7);\n                if(g >= 1) {\n                    locationData.containmentScore = 0;\n                }\n                else if(g >= 0.5) {\n                    locationData.containmentScore = 1;\n                }\n                else if(g >= 0.2) {\n                    locationData.containmentScore = 2;\n                }\n                else if(g >= 0.1) {\n                    locationData.containmentScore = 3;\n                }\n                else if(g >= 0.05) {\n                    locationData.containmentScore = 4;\n                }\n                else if(g >= 0.02) {\n                    locationData.containmentScore = 5;\n                }\n                else if(g >= 0.01) {\n                    locationData.containmentScore = 6;\n                }\n                else if(g >= 0.005) {\n                    locationData.containmentScore = 7;\n                }\n                else if(g >= 0.002) {\n                    locationData.containmentScore = 8;\n                }\n                else if(g >= 0.001) {\n                    locationData.containmentScore = 9;\n                }\n                else if(g >= 0.0) {\n                    locationData.containmentScore = 10;\n                }\n            });\n        });\n    };\n\n    computeConfirmedProjected = (ds) => {\n        // compute global average testing rate\n        let avgTested = 0;\n        let avgPopulation = 0;\n        let countTested = 0;\n        let countPopulation = 0;\n        Object.keys(ds.locations).map((name, index) => {\n            if(Testing.RATES[name] && Population.ABSOLUTE[name]) {\n                avgTested += Testing.RATES[name];\n                avgPopulation += Population.ABSOLUTE[name];\n                countTested++;\n                countPopulation++;\n            }\n            else {\n                // console.log(\"No testing rates or population data for '\" + name + \"'.\")\n            }\n        });\n        avgTested /= countTested;\n        avgPopulation /= countPopulation;\n        let globalTestingRate = avgTested / avgPopulation;\n        ds.datasets.map((dataset, datasetIndex) => {\n            Object.keys(dataset.data).map((name, locationIndex) => {\n                if(Testing.RATES[name] && Population.ABSOLUTE[name]) {\n                    this.computeConfirmedProjectedBlock(name, dataset.data[name].absolute, globalTestingRate);\n                    this.computeConfirmedProjectedBlock(name, dataset.data[name].ppm, globalTestingRate);\n                }\n            });\n        });\n    };\n\n    computeConfirmedProjectedBlock = (name, block, globalTestingRate) => {\n        let localTestingRate = Testing.RATES[name] / Population.ABSOLUTE[name];\n        let scale = globalTestingRate / localTestingRate;\n        this.calculateConfirmedProjected(scale, block.current);\n        this.calculateConfirmedProjected(scale, block.growthLast1Day);\n        this.calculateConfirmedProjected(scale, block.growthLast3Days);\n        this.calculateConfirmedProjected(scale, block.growthLast7Days);\n    };\n\n    calculateConfirmedProjected = (scale, value) => {\n        value[\"confirmedProjected\"] = value[\"confirmed\"] * scale;\n    };\n\n    computeActive = (ds) => {\n        ds.datasets.map((dataset, datasetIndex) => {\n            Object.values(dataset.data).map((locationData, locationIndex) => {\n                this.computeActiveBlock(locationData.absolute);\n                this.computeActiveBlock(locationData.ppm);\n            });\n        });\n    };\n\n    computeActiveBlock = (block) => {\n        this.calculateActive(block.current);\n        this.calculateActive(block.growthLast1Day);\n        this.calculateActive(block.growthLast3Days);\n        this.calculateActive(block.growthLast7Days);\n    };\n\n    calculateActive = (value) => {\n        value[\"active\"] = value[\"confirmed\"] - value[\"recovered\"] - value[\"deceased\"];\n    };\n\n    parseTable = (ds, attribute, table, parseHeader) => {\n        let header = true;\n        for(let data of table) {\n            if(header) {\n                if(parseHeader) {\n                    this.parseHeader(ds, data);\n                }\n                header = false;\n            }\n            else {\n                this.parseRow(ds, attribute, data);\n            }\n        }\n    };\n\n    parseHeader = (ds, header) => {\n        for(let i = 4; i < header.length; i++) {\n            ds.datasets.push(new Dataset(header[i]));\n        }\n    };\n\n    parseRow = (ds, attribute, row) => {\n        let name = (row[0] ? row[0] + \", \" + row[1] : row[1]) ? (row[0] ? row[0] + \", \" + row[1] : row[1]) : \"\";\n        ds.locations[name] = [row[3], row[2]];\n        for(let i = 4; i < row.length; i++) {\n            let data = ds.datasets[i - 4].data;\n            if(!data[name]) {\n                data[name] = new Data();\n            }\n            let locationData = data[name];\n            this.parseBlock(name, row, i, attribute, locationData);\n        }\n    };\n\n    parseBlock = (name, row, i, attribute, locationData) => {\n        // absolute current\n        let value = Number(row[i]);\n        locationData.absolute.current[attribute] = value;\n        locationData.ppm.current[attribute] = this.ppm(name, value);\n\n        // absolute growth last 1 day\n        if(i >= 5) {\n            locationData.absolute.growthLast1Day[attribute] = value - Number(row[i - 1]);\n            locationData.ppm.growthLast1Day[attribute] = this.ppm(name, value - Number(row[i - 1]));\n        } else {\n            locationData.absolute.growthLast1Day[attribute] = 0;\n            locationData.ppm.growthLast1Day[attribute] = 0;\n        }\n\n        // absolute growth last 3 days\n        if(i >= 7) {\n            locationData.absolute.growthLast3Days[attribute] = value - Number(row[i - 3]);\n            locationData.ppm.growthLast3Days[attribute] = this.ppm(name, value - Number(row[i - 3]));\n        } else {\n            locationData.absolute.growthLast3Days[attribute] = 0;\n            locationData.ppm.growthLast3Days[attribute] = 0;\n        }\n\n        // absolute growth last 7 days\n        if(i >= 11) {\n            locationData.absolute.growthLast7Days[attribute] = value - Number(row[i - 7]);\n            locationData.ppm.growthLast7Days[attribute] = this.ppm(name, value - Number(row[i - 7]));\n        } else {\n            locationData.absolute.growthLast7Days[attribute] = 0;\n            locationData.ppm.growthLast7Days[attribute] = 0;\n        }\n    };\n\n    ppm = (name, value) => {\n        return 1000000 * value / Population.ABSOLUTE[name];\n    };\n\n    loadFromUrl = (url, callback) => {\n        Papa.parse(url, {\n            download: true,\n            complete: async function (results) {\n                callback(results);\n            }\n        });\n    };\n}\n\n\n\n  // get_sums(NAME, extension) {\n\t//   let that = this;\n\t// \t\t  let population_sum = 0;\n\t// \t\t  let confirmed_sum = 0;\n\t// \t\t  let projected_sum = 0;\n\t// \t\t  let active_sum = 0;\n\t// \t\t  let recovered_sum = 0;\n\t// \t\t  let deaths_sum = 0;\n\t// \t          for(let c of that.confirmed) {\n  //                   if (c.name.endsWith(extension)) {\n  //                     if (!isNaN(Population.ABSOLUTE[c.name])) {\n  //                       population_sum += Population.ABSOLUTE[c.name];\n  //                       confirmed_sum += that.confirmed[c.rowId].val;\n  //                       projected_sum += that.projected[c.rowId].val;\n  //                       active_sum += that.confirmed[c.rowId].val - that.recoveredAbsByRowId[c.rowId] - that.deathsAbsByRowId[c.rowId];\n  //                       recovered_sum += that.recovered[c.rowId].val;\n  //                       deaths_sum += that.deaths[c.rowId].val;\n  //                     }\n  //                   }\n  //                 }\n\t//   return [population_sum, confirmed_sum, projected_sum, active_sum, recovered_sum, deaths_sum];\n  // }\n","\nexport default class Utils {\n\n    static rounded = num => {\n        if (num > 1000000000) {\n            return Math.round(num / 100000000) / 10 + \"Bn\";\n        } else if (num > 1000000) {\n            return Math.round(num / 100000) / 10 + \"M\";\n        } else if (num > 1000) {\n            return Math.round(num / 100) / 10 + \"K\";\n        } else {\n            return Math.round(num);\n        }\n    };\n}\n","import React from \"react\";\n\nexport default class RaceChart extends React.Component {\n  render() {\n    let svgWidth = 200;\n    let svgHeight = 145;\n    let datasource = this.props.datasource;\n    let logmode = this.props.logmode;\n    let dayOffset = this.props.dayOffset;\n    let barWidth = svgWidth / (datasource.datasets.length);\n    return (\n      <svg width={svgWidth} heigth={svgHeight} role=\"img\">\n        {\n          this.props.names.map((name, index) => {\n            let max = datasource.maxValue;\n            let points = \"\";\n            let lastValue;\n            Object.values(datasource.datasets).map((dataset, dateIndex) => {\n              let value = dataset.data[name].absolute.current.confirmed;\n              if(value > 0) {\n                if (logmode) {\n                  value = Math.round((Math.log(value) / Math.log(max)) * svgHeight);\n                } else {\n                  value = Math.round((value / max) * svgHeight);\n                }\n                lastValue = value;\n              }\n              points += dateIndex * barWidth + \",\" + (svgHeight - value) + \" \";\n            });\n            return (\n              <g>\n                <polyline className={\"line line\"+index}\n                  points={points}\n                ></polyline>\n                <text\n                  className={\"legend legend\"+index}\n                  x={0}\n                  y={10 * (index + 1)}\n                >\n                  {name}\n                </text>\n              </g>\n            );\n          })\n        }\n        <g className=\"todayMarkerLineChart\">\n          <rect\n              x={(datasource.datasets.length - 1 + dayOffset) * barWidth}\n              y={0}\n              width={barWidth}\n              height={svgHeight}></rect>\n        </g>\n      </svg>\n    );\n  }\n}\n","import React, {memo} from \"react\";\nimport { Map, TileLayer, Tooltip as LTooltip,\n    CircleMarker, LayerGroup } from \"react-leaflet\";\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faWindowMinimize,\n  faUsers,\n  faProcedures,\n  faHeartbeat,\n  faHeartBroken,\n  faBiohazard,\n  faStopCircle,\n  faPauseCircle,\n  faQuestion,\n  faQuestionCircle, \n  faBug, \n  faBalanceScale, \n  faVial,\n  faStepBackward,\n  faStepForward,\n  faShieldAlt,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {faPlayCircle} from '@fortawesome/free-regular-svg-icons';\n\nimport Form from 'react-bootstrap/Form';\nimport Badge from 'react-bootstrap/Badge';\nimport ReactBootstrapSlider from \"react-bootstrap-slider\";\n\nimport BarChart from \"./BarChart\";\nimport {JHDatasourceProvider} from \"./datasource/JHDatasourceProvider\";\nimport * as Population from \"./Population\";\nimport * as Testing from \"./TestingRates\";\nimport Utils from \"./Utils\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport RaceChart from \"./RaceChart\";\n\nconst LightTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n  },\n}))(Tooltip);\n\nclass MapChart extends Map {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      setTotalConfirmed: props.setTotalConfirmed,\n      setTotalRecovered: props.setTotalRecovered,\n      setTotalDeceased: props.setTotalDeceased,\n      setTotalConfirmedProjected: props.setTotalConfirmedProjected,\n      factor: 50,\n      logmode: true,\n      momentum: \"none\",\n      ppmmode: false,\n      minimized: false,\n      testmode: true,\n      testscale: 0,\n      dayOffset: 0,\n      playmode: false,\n      mapstyle: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\",\n      selectedData: [\"projected\", \"confirmed\", \"recovered\", \"deceased\"],\n      datasource: null,\n      leadership: \"active\",\n\n      lat: 0,\n      lng: 0,\n      zoom: 2\n\n      //chart: \"pie\",\n      //width: 2,\n    };\n\n    this.map = null;\n\n    let that = this;\n    new JHDatasourceProvider().getDatasource((datasource) => {\n      that.state.datasource = datasource;\n      that.setState({});\n    });\n  }\n\n  componentDidMount = () => {\n      this.render();\n  };\n\n  componentDidUpdate = (prevProps) => {\n    if(this.state.datasource) {\n      this.updateLeafletElement(prevProps, this.props);\n      const layers = this.map.leafletElement._layers;\n\n      // bring to front one by one\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"projected\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"confirmed\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"recovered\") {\n          layer.bringToFront();\n        }\n      });\n\n      Object.values(layers).map((layer) => {\n        if (layer.options.className === \"deceased\") {\n          layer.bringToFront();\n        }\n      });\n    }\n  };\n\n  render() {\n    if(!this.state.datasource) {\n      return (<LinearProgress />);\n    }\n    else {\n      let that = this;\n      let ds = this.state.datasource.datasets[Math.max(0, this.state.datasource.datasets.length - 1 + this.state.dayOffset)];\n      that.state.setTotalConfirmed(ds.totalConfirmed);\n      that.state.setTotalRecovered(ds.totalRecovered);\n      that.state.setTotalDeceased(ds.totalDeceased);\n      that.state.setTotalConfirmedProjected(ds.totalConfirmedProjected * that.state.testscale);\n      return (\n          <>\n            <div className={\"small controls\" + (that.state.minimized ? \" minimized\" : \"\")}>\n              {/*\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"none\" } label=\"Live situation\" type={\"radio\"} name={\"a\"} id={`inline-radio-4`} onClick={() => {that.setState({momentum: \"none\"});}} />\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last1\" } label=\"Momentum last 1 day\" type={\"radio\"} name={\"b\"} id={`inline-radio-5`} onClick={() => {that.setState({momentum: \"last1\", chart: \"pie\"});}} />\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last3\" } label=\"Momentum last 3 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-6`} onClick={() => {that.setState({momentum: \"last3\", chart: \"pie\"});}} />\n                 <Form.Check inline className=\"small hideInJh\" checked={that.state.momentum===\"last7\" } label=\"Momentum last 7 days\" type={\"radio\"} name={\"b\"} id={`inline-radio-7`} onClick={() => {that.setState({momentum: \"last7\", chart: \"pie\"});}} />\n              */}\n              <button hidden={that.state.minimized} className={\"btn-collapse\"} onClick={() => {\n                that.setState({minimized: true})\n              }}>minimize <FontAwesomeIcon icon={faWindowMinimize}/></button>\n              <button hidden={!that.state.minimized} className={\"btn-collapse\"} onClick={() => {\n                that.setState({minimized: false})\n              }}>open\n              </button>\n              <div hidden={that.state.minimized}>\n                <span className=\"small text-muted mr-2\">Mode:</span>\n                <Tooltip\n                    title={<span><b>Live mode:</b> Glyphs show confirmed, recovered and deceased numbers (updated daily).<br/><br/><b>Momentum mode:</b> Glyphs show growth (red) and shrinking (green) of active cases since last 1, 3 or 7 day(s).</span>}\n                    small={\"true\"}\n                    arrow\n                    disableTouchListener={true}\n                >\n                  <span className=\"test\"><FontAwesomeIcon icon={faQuestion} size={\"xs\"}/></span>\n                </Tooltip>\n                <Form.Control value={that.state.momentum}\n                              style={{lineHeight: \"12px\", padding: \"0px\", fontSize: \"12px\", height: \"24px\"}} size=\"sm\"\n                              as=\"select\" onChange={(e) => {\n                  that.setState({momentum: e.nativeEvent.target.value, chart: \"pie\", testmode: false, testscale: 0});\n                }}>\n                  <option value=\"none\">Live mode</option>\n                  <option value=\"last1\">Momentum mode (last 24 hours)</option>\n                  <option value=\"last3\">Momentum mode (last 3 days)</option>\n                  <option value=\"last7\">Momentum mode (last 7 days)</option>\n                </Form.Control>\n                <span className=\"small text-muted mr-2\">Normalization:</span>\n                <Tooltip\n                    title=\"Scale the size of the glyphs on the map according to different criteria.\"\n                    small={\"true\"}\n                    arrow\n                    disableTouchListener={true}\n                >\n                  <span className=\"test\"><FontAwesomeIcon icon={faQuestion} size={\"xs\"}/></span>\n                </Tooltip>\n                <br/>\n                <Form.Check\n                    inline\n                    className=\"small\"\n                    checked={that.state.logmode}\n                    label={\n                      <Tooltip\n                          title=\"Scales the size of the glyphs on the map logarithmically.\"\n                          small={\"true\"}\n                          arrow\n                          disableTouchListener={true}\n                      >\n                        <span>Log</span>\n                      </Tooltip>\n                    }\n                    type={\"checkbox\"}\n                    name={\"a\"}\n                    id={`inline-checkbox-2`}\n                    onChange={() => {\n                      that.setState({\n                        logmode: !that.state.logmode\n                      });\n                    }}\n                />\n                <Form.Check\n                    inline\n                    className=\"small\"\n                    checked={that.state.ppmmode}\n                    label={\n                      <Tooltip\n                          title=\"Scales the size of the glyphs on the map according to the number of people in the location.\"\n                          small={\"true\"}\n                          arrow\n                          disableTouchListener={true}\n                      >\n                        <span>Population</span>\n                      </Tooltip>\n                    }\n                    type={\"checkbox\"}\n                    name={\"a\"}\n                    id={`inline-checkbox-3`}\n                    onChange={() => {\n                      that.setState({\n                        ppmmode: !that.state.ppmmode\n                      });\n                    }}\n                /><br/>\n                {\n                  that.state.momentum === \"none\" && !that.state.playmode &&\n                  [\n                    <span className=\"small text-muted mr-2\">Project testing rates:</span>,\n                    <Tooltip\n                        title=\"Display how many confirmed cases there might be if local testing rate was coinciding with global average.\"\n                        small={\"true\"}\n                        arrow\n                        disableTouchListener={true}\n                    >\n                      <span className={\"test\"}><FontAwesomeIcon icon={faQuestion} size={\"xs\"}/></span>\n                    </Tooltip>,\n                    <br/>,\n                    <ReactBootstrapSlider\n                      ticks={[0, 1, 2, 3]}\n                      ticks_labels={[\"off\", \"global avg.\", \"x2\", \"x3\"]}\n                      value={this.state.testscale}\n                      change={e => {\n                        this.state.testscale = e.target.value;\n                        this.state.testmode = true;\n                        this.render();\n                      }}\n                      step={0.1}\n                      max={3}\n                      min={0}\n                    ></ReactBootstrapSlider>,\n                    <br/>\n                  ]\n                }\n                <span className=\"small text-muted mr-2\">Glyph size:</span><br/>\n                <ReactBootstrapSlider value={this.state.factor} change={e => {\n                  this.setState({factor: e.target.value, width: e.target.value / 10});\n                }} step={1} max={100} min={1}></ReactBootstrapSlider><br/>\n                {/*<Form.Check inline title=\"Represent data as bubbles. Hover bubbles on map to see more details.\" className=\"small\" checked={that.state.chart===\"pie\" } label=\"Bubbles\" type={\"radio\"} name={\"a\"} id={`inline-radio-1`} onChange={() => {that.setState({chart: \"pie\"});}}/><br />*/}\n                {/*<Form.Check inline title=\"Represent data as vertical bars. Hover bars on map to see more details.\" className=\"small hideInMomentum\" checked={that.state.chart===\"bar\" } label=\"Bars\" type={\"radio\"} name={\"a\"} id={`inline-radio-2`} onChange={() => {that.setState({chart: \"bar\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/>*/}\n                {/*<Form.Check inline title=\"Represent data as horizontal pill. Hover pill on map to see more details.\" className=\"small hideInMomentum\" checked={that.state.chart===\"pill\" } label=\"Pills\" type={\"radio\"} name={\"a\"} id={`inline-radio-3`} onChange={() => {that.setState({chart: \"pill\"});}} disabled={that.state.momentum!==\"none\" ? true : false}/><br />*/}\n                <span className=\"small text-muted\">Map style:</span><br/>\n                <Form.Control value={that.state.mapstyle}\n                              style={{lineHeight: \"12px\", padding: \"0px\", fontSize: \"12px\", height: \"24px\"}} size=\"sm\"\n                              as=\"select\" onChange={(e) => {\n                  that.setState({mapstyle: e.nativeEvent.target.value});\n                }}>\n                  <option value=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\">Color</option>\n                  <option value=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\">Light\n                  </option>\n                  <option value=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/dark_all/{z}/{x}/{y}.png\">Dark\n                  </option>\n                </Form.Control>\n\n                <div className={\"credits\"}>\n                  <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\"\n                            href={\"https://github.com/daniel-karl/covid19-map/issues\"}><FontAwesomeIcon\n                      icon={faBug}/> Issues</a></Badge>\n                  <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\"\n                            href={\"https://github.com/daniel-karl/covid19-map#about\"}><FontAwesomeIcon\n                      icon={faQuestionCircle}/> About</a></Badge>\n                  <Badge><a target=\"_blank\" className=\"text-secondary\" rel=\"noopener noreferrer\"\n                            href={\"https://github.com/daniel-karl/covid19-map/blob/master/LICENSE.txt\"}><FontAwesomeIcon\n                      icon={faBalanceScale}/> License</a></Badge>\n                </div>\n              </div>\n            </div>\n            <div className=\"small timeline\">\n              <button disabled style={{opacity: 1, pointerEvents: \"none\"}} className={\"btn btn-sm text-dark\"}>\n                <b>{ds.date}</b>\n              </button>\n              <div className={\"race mb-1\"}>\n                <RaceChart\n                  datasource={this.state.datasource}\n                  dayOffset={this.state.dayOffset}\n                  logmode={this.state.logmode}\n                  names={[\"US\", \"Italy\", \"Spain\", \"Germany\", \"France\", \"Iran\", \"United Kingdom\", \"Switzerland\", \"Netherlands\"]}\n                />\n              </div>\n              <button\n                  className={this.state.dayOffset < 0 ? \"btn btn-sm btn-dark leftTime\" : \"btn btn-sm btn-outline-dark leftTime\"}\n                  style={{height: \"30px\", lineHeight: \"20px\"}}\n                  onClick={() => {\n                      this.setState({\n                         dayOffset: this.state.dayOffset - 1,\n                         testmode: false\n                      });\n                  }}\n              ><FontAwesomeIcon icon={faStepBackward}/></button>\n\n              <button\n                  className={\"btn btn-sm btn-secondary midTime\"}\n                  style={this.state.dayOffset < 0 && !this.state.playmode ? {\n                    height: \"30px\",\n                    lineHeight: \"20px\"\n                  } : {display: \"none\"}}\n                  onClick={() => {\n                    this.state.dayOffset = Math.min(0, this.state.dayOffset + 1);\n                    if (this.state.dayOffset === 0) {\n                      this.state.playmode = false;\n                    } else {\n                      this.state.testmode = false;\n                    }\n                    this.render();\n                  }}\n              ><FontAwesomeIcon icon={faStepForward}/></button>\n\n              <button\n                  className={this.state.dayOffset < 0 ? \"btn btn-sm btn-outline-danger todayTime\" : \"btn btn-sm btn-danger todayTime\"}\n                  style={{height: \"30px\", lineHeight: \"20px\"}}\n                  onClick={() => {\n                    this.setState({\n                      dayOffset: 0\n                    });\n                  }}\n              >Latest</button>\n\n              <button\n                  className={\"btn btn-sm btn-success play\"}\n                  style={{height: \"30px\", lineHeight: \"20px\"}}\n                  onClick={() => {\n                    document.getElementsByClassName(\"todayTime\")[0].style.display = \"none\";\n                    document.getElementsByClassName(\"play\")[0].style.display = \"none\";\n                    document.getElementsByClassName(\"leftTime\")[0].style.display = \"none\";\n                    document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n\n                    var now = new Date();\n                    var startDate = new Date(\"January 22, 2020 00:00:00\");\n                    const oneDay = 24 * 60 * 60 * 1000;\n                    this.setState({\n                      dayOffset:  -Math.round(Math.abs((now - startDate) / oneDay)),\n                      testmode: false,\n                      testscale: 0,\n                      playmode: true,\n                      playpause: false\n                    });\n                    let interval = setInterval(() => {\n                      if (!that.state.playmode) {\n                        clearInterval(interval);\n                        this.setState({\n                            dayOffset: 0\n                        });\n                        return;\n                      }\n                      if (!this.state.playpause) {\n                        this.setState({\n                            dayOffset: this.state.dayOffset + 1\n                        });\n                        if (this.state.dayOffset === 0) {\n                          document.getElementsByClassName(\"todayTime\")[0].style.display = \"inline\";\n                          document.getElementsByClassName(\"play\")[0].style.display = \"inline\";\n                          document.getElementsByClassName(\"leftTime\")[0].style.display = \"inline\";\n                          document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n                          this.setState({\n                             playmode: false,\n                             testscale: 0,\n                             testmode: false\n                          });\n                        }\n                      }\n                    }, 500);\n                  }}\n              ><FontAwesomeIcon icon={faPlayCircle}/></button>\n\n              <button\n                  className={\"btn btn-sm pause \" + (this.state.playpause ? \"btn-success\" : \"btn-outline-dark\")}\n                  style={this.state.playmode ? {height: \"30px\", lineHeight: \"20px\"} : {display: \"none\"}}\n                  onClick={() => {\n                      this.setState({\n                          playpause: !this.state.playpause\n                      });\n                  }}\n              >\n                {\n                  !this.state.playpause &&\n                  [<FontAwesomeIcon icon={faPauseCircle}/>, \" Pause\"]\n                }\n                {\n                  this.state.playpause &&\n                  [<FontAwesomeIcon icon={faPlayCircle}/>, \" Continue\"]\n                }\n              </button>\n\n              <button\n                  className={\"btn btn-sm btn-danger stop\"}\n                  style={this.state.playmode ? {height: \"30px\", lineHeight: \"20px\"} : {display: \"none\"}}\n                  onClick={() => {\n                    document.getElementsByClassName(\"todayTime\")[0].style.display = \"inline\";\n                    document.getElementsByClassName(\"play\")[0].style.display = \"inline\";\n                    document.getElementsByClassName(\"leftTime\")[0].style.display = \"inline\";\n                    document.getElementsByClassName(\"midTime\")[0].style.display = \"none\";\n                    this.state.playmode = false;\n                    this.state.testscale = 0;\n                    this.render();\n                  }}\n              ><FontAwesomeIcon icon={faStopCircle}/> Stop\n              </button>\n            </div>\n            {\n              that.state.momentum !== \"none\" &&\n              <style dangerouslySetInnerHTML={{\n                __html: `\n                  .hideInMomentum {\n                    display: none !important;\n                  }\n                  .showInMomentum {\n                    display: block !important;\n                  }`\n              }}/>\n            }\n            {that.leafletMap(ds)}\n            {that.leaderboard(ds)}\n          </>\n      );\n    }\n  }\n\n  leaderboard = (ds) => {\n    return (\n      <div className=\"leaderboard\">\n        <table>\n          <thead>\n            <tr>\n              <td className={\"p-1 valign-top text-muted\"}></td>\n              <td className={\"p-1 bg-danger text-light sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>active cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"active\"\n                      });\n                    }}><FontAwesomeIcon icon={faProcedures} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 sortHeader\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>location</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"name\"\n                      });\n                    }}\n                  >Location</a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 sortHeader\"} align={\"center\"}>\n              <LightTooltip\n                title={\n                  <div style={{textAlign: \"justify\"}}>\n                    <b>Containment Score</b> reflects the spread of COVID19\n                    in this region, based on weighted average growth\n                    of confirmed cases over the past 1, 3 and 7 days. From worst (0/10) to best (10/10).\n                  </div>\n                }\n                small={\"true\"}\n                disableTouchListener={true}\n              >\n                <a\n                  onClick={() => {\n                    this.setState({\n                      leadership: \"containmentScore\"\n                    });\n                  }}\n                >\n                  <FontAwesomeIcon icon={faShieldAlt} size={\"lg\"}/>\n                </a>\n              </LightTooltip>\n              </td>\n              <td className={\"p-1 text-danger sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>confirmed cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"confirmed\"\n                      });\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faBiohazard} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 text-success sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>recovered cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"recovered\"\n                      });\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faHeartbeat} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n              <td className={\"p-1 text-dark sortHeader\"} align={\"center\"}>\n                <LightTooltip\n                  title={\n                    <div style={{textAlign: \"justify\"}}>\n                      Sort by <b>deceased cases</b>\n                    </div>\n                  }\n                  small={\"true\"}\n                  disableTouchListener={true}\n                >\n                  <a\n                    onClick={() => {\n                      this.setState({\n                        leadership: \"deceased\"\n                      });\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faHeartBroken} size={\"lg\"}/>\n                  </a>\n                </LightTooltip>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              Object.keys(ds.data).sort((a, b) => {\n                let mode = this.state.ppmmode ? \"ppm\" : \"absolute\";\n                if (this.state.leadership===\"name\") {\n                  let c = a;\n                  a = b;\n                  b = c;\n\t\t        }\n                else if (this.state.leadership===\"containmentScore\") {\n                  a = ds.data[a].containmentScore;\n                  b = ds.data[b].containmentScore;\n\t\t        } else {\n                  a = ds.data[a][mode].current[this.state.leadership];\n                  a = isNaN(a) ? 0 : a;\n                  b = ds.data[b][mode].current[this.state.leadership];\n                  b = isNaN(b) ? 0 : b;\n                }\n                if(a === null && b === null) {\n                  return 0;\n                } else if(a === null) {\n                  return 1;\n                } else if(b === null) {\n                  return -1;\n                } else {\n                  return (a >= b) ? -1 : 1;\n                }\n              }).map((name, locationIndex) => {\n                if(name !== \"Canada\") {\n                  let confirmed = (this.state.ppmmode) ? ds.data[name].ppm.current.confirmed : ds.data[name].absolute.current.confirmed;\n                  let active = (this.state.ppmmode) ? ds.data[name].ppm.current.active : ds.data[name].absolute.current.active;\n                  active = isNaN(active) ? \"N/A\" : active;\n                  let recovered = (this.state.ppmmode) ? ds.data[name].ppm.current.recovered : ds.data[name].absolute.current.recovered;\n                  let deceased = (this.state.ppmmode) ? ds.data[name].ppm.current.deceased : ds.data[name].absolute.current.deceased;\n                  let containmentScore = ds.data[name].containmentScore;\n                  if(containmentScore === null) {\n                    containmentScore = \"N/A\";\n                  }\n                  return (\n                    <tr className=\"locationSelect\" onClick={() =>{\n                          this.setState({\n                              lng: this.state.datasource.locations[name][0],\n                              lat: this.state.datasource.locations[name][1],\n                              zoom: 5 + Math.random() / 10\n                          })\n                      }}>\n                      <td className={\"p-1 valign-top text-muted mono\"} align={\"center\"}>{locationIndex + 1}</td>\n                      <td className={\"p-1 valign-top stat bg-danger text-light\"} align={\"right\"}>{Utils.rounded(active)}</td>\n                      <td className={\"p-1 valign-top country\"}>{name}</td>\n                      <td className={\"p-1 valign-top\"}>\n                        <div className={\"containmentScore containmentScore\" + containmentScore}>\n                          {containmentScore}{containmentScore !== \"N/A\" ? \"/10\" : \"\"}\n                        </div>\n                      </td>\n                      <td className={\"p-1 valign-top stat text-danger\"} align={\"right\"}>{Utils.rounded(confirmed)}</td>\n                      <td className={\"p-1 valign-top stat text-success\"} align={\"right\"}>{Utils.rounded(recovered)}</td>\n                      <td className={\"p-1 valign-top stat text-dark\"} align={\"right\"}>{Utils.rounded(deceased)}</td>\n                    </tr>\n                  )\n                }\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  leafletMap = (ds) => {\n    const position = [this.state.lat, this.state.lng];\n    return (\n      <Map ref={(ref) => { this.map = ref}} center={position} zoom={this.state.zoom} zoomControl={false}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url={this.state.mapstyle}\n        />\n\n        <LayerGroup key={5}>\n          { this.momentumMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={4} className={\"deceasedLayer\"}>\n          { this.projectedMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={3} className={\"deceasedLayer\"}>\n          { this.confirmedMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={2} className={\"recoveredLayer\"}>\n          { this.recoveredMarkers(ds) }\n        </LayerGroup>\n\n        <LayerGroup key={1} className={\"deceasedLayer\"}>\n          { this.deceasedMarkers(ds) }\n        </LayerGroup>\n      </Map>\n    );\n  };\n\n  momentumMarkers = (ds) => {\n    return (\n      this.state.momentum !== \"none\" &&\n      Object.keys(ds.data).map((name, locationIndex) => {\n        let pop = Population.ABSOLUTE[name];\n        let size;\n        switch (this.state.momentum) {\n          case \"last1\":\n            size = ds.data[name].absolute.growthLast1Day.active / this.state.datasource.maxValue;\n            break;\n          case \"last3\":\n            size = ds.data[name].absolute.growthLast3Days.active / this.state.datasource.maxValue;\n            break;\n          case \"last7\":\n            size = ds.data[name].absolute.growthLast7Days.active / this.state.datasource.maxValue;\n            break;\n        }\n        let pos = size >= 0;\n        size = Math.abs(size);\n        size = this.scaleLog(size);\n        size = this.scalePpm(size, pop);\n        size = this.scaleLogAndPpm(size);\n        let coordinates = this.state.datasource.locations[name];\n        if (size > 0 && name !== \"US, US\" && name !== \"Canada\") {\n          return (\n              <CircleMarker\n                  key={\"change_\" + locationIndex}\n                  style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n                  center={[coordinates[1], coordinates[0]]}\n                  fillColor={pos ? \"#FF0000\" : \"#00FF00\"}\n                  radius={isNaN(size) ? 0 : Math.sqrt(size) * this.state.factor}\n                  opacity={0}\n                  fillOpacity={0.5}\n              />\n          );\n        }\n        return \"\";\n      })\n    );\n  };\n\n  /*<Marker coordinates={coordinates} key={\"change_\" + rowId}>\n              <circle r={isNaN(size)?0:Math.sqrt(size) * this.state.factor} fill={pos ? \"#F008\" : \"#0F08\"} />\n              <title>\n                {`${name} - ${Math.abs(val)} ${pos ? \"INCREASE\" : \"DECREASE\"} in active(= confirmed-recovered) cases (excl. deceased) (${Math.round(ONE_M*val/pop)} ppm)`\n                }\n              </title>\n              <text\n                textAnchor=\"middle\"\n                y={markerOffset}\n                style={{ fontSize: name.endsWith(\", US\") ? \"0.005em\" : \"2px\", fontFamily: \"Arial\", fill: \"#5D5A6D33\", pointerEvents: \"none\" }}\n              >\n                {name}\n              </text>\n            </Marker>*/\n\n  projectedMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.confirmedProjected / that.state.datasource.maxValue * that.state.testscale;\n          // let value = ds.data[name].ppm.current.confirmedProjected;\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#00F\", size, ds.data[name], name, \"projected\", 0.5);\n        })\n    )\n  };\n\n  confirmedMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.confirmed / that.state.datasource.maxValue;\n          // let value = ds.data[name].ppm.current.confirmed;\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#F00\", size, ds.data[name], name, \"confirmed\", 0.5);\n        })\n    )\n  };\n\n  recoveredMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.recovered / that.state.datasource.maxValue;\n          value += ds.data[name].absolute.current.deceased / that.state.datasource.maxValue;\n          // let value = ds.data[name].ppm.current.recovered;\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#0F0\", size, ds.data[name], name, \"recovered\", 0.5);\n        })\n    )\n  };\n\n  deceasedMarkers = (ds) => {\n    let that = this;\n    return (\n      this.state.momentum===\"none\" &&\n        Object.keys(ds.data).map((name, locationIndex) => {\n          let value = ds.data[name].absolute.current.deceased / that.state.datasource.maxValue;\n          // let value = ds.data[name].ppm.current.deceased;\n          let size = this.scale(value, Population.ABSOLUTE[name]);\n          return this.marker(locationIndex, that.state.datasource.locations[name], \"#000\", size, ds.data[name], name, \"deceased\", 0.8);\n        })\n    )\n  };\n\n  marker = (index, coordinates, color, size, data, name, type, opacity) => {\n    if(size > 0 && name !== \"US, US\" && name !== \"Canada\") {\n      return (\n        // bubble\n        <CircleMarker\n          className={type}\n          key={type + \"_\" + index}\n          style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n          center={[coordinates[1], coordinates[0]]}\n          fillColor={color}\n          radius={size && size > 0 ? Math.sqrt(size) * this.state.factor : 0}\n          opacity={0}\n          fillOpacity={opacity}\n        >\n          <LTooltip direction=\"bottom\" offset={[0, 20]} opacity={1}>\n            {\n              this.tooltip(name, data)\n            }\n          </LTooltip>\n        </CircleMarker>\n      );\n    }\n    return \"\";\n  };\n\n\n  tooltip = (name, data) => {\n    let mode = this.state.ppmmode ? \"ppm\" : \"absolute\";\n    let unit = this.state.ppmmode ? \"ppm\" : \"\";\n    let containmentScore = data.containmentScore;\n    if(containmentScore === null) {\n      containmentScore = \"N/A\";\n    }\n    try {\n      return (\n        <div>\n          <div>\n              <b>{name}</b><br />\n              <FontAwesomeIcon icon={faUsers}/> {Utils.rounded(Population.ABSOLUTE[name])}\n              &nbsp;&middot;&nbsp;\n              <span className={\"text-danger\"}>\n                <FontAwesomeIcon icon={faBiohazard}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.confirmed)} {unit}</span>}\n              </span>\n              &nbsp;&middot;&nbsp;\n              <span className={\"text-success\"}>\n                <FontAwesomeIcon icon={faHeartbeat}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.recovered)} {unit}</span>}\n              </span>\n              &nbsp;&middot;&nbsp;\n              <span className={\"text-dark\"}>\n                <FontAwesomeIcon icon={faHeartBroken}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.deceased)} {unit}</span>}\n              </span>\n          </div>\n          <div>\n            {\n              data[mode].current.confirmedProjected > data[mode].current.confirmed && this.state.testmode && this.state.testscale > 0 &&\n              [\n                <Badge className={\"text-primary\"}>\n                  <FontAwesomeIcon icon={faBiohazard}/>&nbsp;\n                  &gt;{<span>{Utils.rounded(data[mode].current.confirmedProjected * this.state.testscale)} {unit} projected at {this.state.testscale}x global avg. testing rate</span>}\n                </Badge>,\n                <br />\n              ]\n            }\n            <Badge variant={\"danger\"}>\n                <FontAwesomeIcon icon={faProcedures}/>&nbsp;\n                {<span>{Utils.rounded(data[mode].current.active)} {unit} active</span>}\n            </Badge>\n            &nbsp;&middot;&nbsp;\n            <Badge variant={\"primary\"}>\n                <FontAwesomeIcon icon={faVial}/>&nbsp;\n                { Testing.RATES[name] && <span>{Utils.rounded(Testing.RATES[name])} tested</span>}\n                { !Testing.RATES[name] && <span>No testing data</span>}\n            </Badge>\n            <br/>\n          </div>\n          <div className=\"stayAtHomeScoreLabel\">\n            {\n              [\n                <span className=\"stayAtHomeAdvice\">{this.stayAtHomeAdvice(data.absolute.current.active)}</span>,\n                <br/>\n              ]\n            }\n            <table>\n              <tbody>\n                <tr>\n                  <td valign={\"top\"}>\n                    <div className={`stayAtHomeScore stayAtHomeScore${containmentScore}`}>\n                      {containmentScore}{containmentScore !== \"N/A\" ? \"/10\" : \"\"}\n                    </div>\n                  </td>\n                  <td>\n                    <div>\n                      <i>Containment Score</i> reflects the spread of COVID19<br />\n                      in the region, based on weighted average growth<br />\n                      of confirmed cases over the past 1, 3 and 7 days.\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td></td>\n                  <td><FontAwesomeIcon icon={faExclamationTriangle}/> <b>Continue to follow the advice of the WHO<br/>and your local administration.</b></td>\n                </tr>\n                {\n                  this.state.ppmmode &&\n                  <tr>\n                    <td></td>\n                    <td><span className=\"text-muted\">ppm: confirmed cases per one million people</span></td>\n                  </tr>\n                }\n              </tbody>\n            </table>\n          </div>\n          <BarChart\n            datasource={this.state.datasource}\n            name={name}\n            logmode={this.state.logmode}\n            dayOffset={this.state.dayOffset}\n          />\n          <br />\n          <div className={\"text-center\"}>\n              Plot shows data scaled <b>{this.state.logmode ? \"logarithmically\" : \"linearly \"}</b>  over time.<br /><i>It is currently insensitive to population size.</i>\n          </div>\n        </div>\n      )\n    } catch(e) {\n      console.log(e);\n      return \"Could not load tooltip data.\";\n    }\n  };\n\n  stayAtHomeAdvice = (active) => {\n    if(active > 150) {\n      return \"You save lives by staying at home today!\"\n    }\n    if (active > 0) {\n      return \"Avoid crowds! Keep social distance!\";\n    }\n    return \"No active cases detected in this region.\";\n  };\n\n      /*\n\n        <Marker coordinates={coordinates} key={type + \"_\" + rowId}>\n          // pill\n          <rect\n              fill={color + transparency}\n              style={this.state.chart === \"pill\" ? {display: \"block\"} : {display: \"none\"}}\n              x={isNaN(size) ? 0 : -size * this.state.factor / 2}\n              y={-this.state.width / 2 * 3}\n              height={(this.state.width < 0) ? 0 : this.state.width * 3}\n              width={isNaN(size) ? 0 : (size * this.state.factor > 0) ? size * this.state.factor : 0}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          // bar\n          <rect\n              fill={color + transparency}\n              style={this.state.chart === \"bar\" ? {display: \"block\"} : {display: \"none\"}}\n              x={this.state.width * 3 * 2 - this.state.width * 3 * 1.5}\n              y={isNaN(size) ? 0 : -size * this.state.factor}\n              height={isNaN(size) ? 0 : (size * this.state.factor < 0) ? 0 : size * this.state.factor}\n              width={(this.state.width < 0) ? 0 : this.state.width * 3}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          // bubble\n          <circle\n              fill={color + transparency}\n              style={this.state.chart === \"pie\" ? {display: \"block\"} : {display: \"none\"}}\n              r={size && size > 0 ? Math.sqrt(size) * this.state.factor : 0}\n              onMouseOver={() => {\n                if (rowId < 0) {\n                  this.state.setTooltipContent(`Could not retrieve data for ${name}.`);\n                } else {\n                  let active = that.confirmed[rowId].val - that.recoveredAbsByRowId[rowId] - that.deathsAbsByRowId[rowId];\n                  this.state.setTooltipContent(\n                      <div>\n                        <b>{name}</b> &nbsp;\n                        <span><FontAwesomeIcon icon={faUsers}/> {rounded(Population.ABSOLUTE[name])}</span><br/>\n                        <span><FontAwesomeIcon\n                            icon={faBiohazard}/> {rounded(that.confirmed[rowId].val)} confirmed (>{rounded(that.projected[rowId].val)} at avg. test rate)</span><br/>\n                        <span><FontAwesomeIcon icon={faProcedures}/> {rounded(active)} active</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartbeat}/> {rounded(that.recovered[rowId].val)} recovered</span>\n                        &nbsp;<span><FontAwesomeIcon\n                          icon={faHeartBroken}/> {rounded(that.deaths[rowId].val)} deceased</span>\n                      </div>\n                  );\n                }\n              }}\n              onMouseOut={() => {\n                this.state.setTooltipContent(\"\");\n              }}\n          />\n\n          <title>{text}</title>\n        </Marker>\n      */\n\n  scale = (value, population) => {\n    value = this.scaleIfPillOrBar(value);\n    value = this.scaleLog(value);\n    value = this.scalePpm(value, population);\n    value = this.scaleLogAndPpm(value);\n    return value;\n  };\n\n  scaleIfPillOrBar = (value) => {\n    if(this.state.chart===\"pill\" || this.state.chart===\"bar\") {\n      return value * 10;\n    }\n    return value;\n  };\n\n  scaleLog = (value) => {\n    if(!this.state.logmode) {\n      return value;\n    }\n    if(value > 0) {\n        value = Math.log(value * this.state.datasource.maxValue) / Math.log(this.state.datasource.maxValue) / 20;\n        return value;\n    }\n    return 0;\n  };\n\n  scalePpm = (value, population) => {\n    if(!this.state.ppmmode) {\n      return value;\n    }\n    if(population) {\n      if((value > 0) && ( population > 1000000)) {\n        return 1000000 * value / population * 20;\n      }\n    }\n    return 0;\n  };\n\n  scaleLogAndPpm = (value) => {\n    if(this.state.logmode && this.state.ppmmode) {\n      return value / 3;\n    }\n    return value;\n  };\n\n  sleep = async (msec) => {\n    return new Promise(resolve => setTimeout(resolve, msec));\n  };\n}\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDotCircle} from '@fortawesome/free-regular-svg-icons';\nimport { faBiohazard, faHeartBroken, faHeartbeat} from '@fortawesome/free-solid-svg-icons';\n\nimport Utils from \"./Utils\";\n\nfunction App() {\n  const [totalConfirmed, setTotalConfirmed] = useState(0);\n  const [totalRecovered, setTotalRecovered] = useState(0);\n  const [totalDeceased, setTotalDeceased] = useState(0);\n  const [totalConfirmedProjected, setTotalConfirmedProjected] = useState(0);\n\n  return (\n    [\n      <Navbar bg=\"light\" fixed=\"top\" className={\"p-0 pl-2\"} expand={\"xs\"}>\n        <Navbar.Brand>\n            <span className=\"small\">C<FontAwesomeIcon icon={faDotCircle} />VID19 </span>\n            <span className={\"mapio\"}><b>MAP</b><span className=\"text-secondary\">.IO</span></span>\n        </Navbar.Brand>\n          <span>\n            {\n              totalConfirmedProjected > totalConfirmed &&\n              <span className={\"small text-primary mr-2\"}>\n                <FontAwesomeIcon icon={faBiohazard} className={\"mr-1\"}/>\n                {Utils.rounded(totalConfirmedProjected)}\n              </span>\n            }\n            {\n              totalConfirmedProjected <= totalConfirmed &&\n              <span className={\"small text-danger mr-2\"}>\n                <FontAwesomeIcon icon={faBiohazard} className={\"mr-1\"}/>\n                {Utils.rounded(totalConfirmed)}\n              </span>\n            }\n            <span className={\"small text-success mr-2\"}>\n              <FontAwesomeIcon icon={faHeartbeat} className={\"mr-1\"} />\n              {Utils.rounded(totalRecovered)}\n            </span>\n            <span className={\"small mr-2\"}>\n              <FontAwesomeIcon icon={faHeartBroken} className={\"mr-1\"} />\n              {Utils.rounded(totalDeceased)}\n            </span>\n          </span>\n      </Navbar>,\n      <Container fluid className={\"w-100 h-100 p-0\"}>\n        <Row noGutters={\"true\"} className={\"h-100\"}>\n          <Col className={\"h-100\"}>\n            <MapChart\n                key={\"mapChart\"}\n                style={{marginTop: \"50px\"}}\n                setTotalConfirmed={setTotalConfirmed}\n                setTotalRecovered={setTotalRecovered}\n                setTotalDeceased={setTotalDeceased}\n                setTotalConfirmedProjected={setTotalConfirmedProjected}\n            />\n          </Col>\n        </Row>\n      </Container>\n    ]\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-slider/dist/css/bootstrap-slider.css\"\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}