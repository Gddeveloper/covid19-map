{"version":3,"sources":["MapChart.js","App.js","index.js"],"names":["memo","setTooltipContent","Papa","parse","download","complete","results","alert","data","length","projection","zoom","geography","geographies","map","geo","key","rsmKey","onMouseEnter","num","properties","NAME","POP_EST","Math","round","onMouseLeave","style","default","fill","outline","hover","pressed","App","useState","content","setContent","Navbar","bg","fixed","className","expand","Brand","icon","faUserMd","Toggle","aria-controls","Collapse","id","Nav","Link","href","faDatabase","faCode","Container","fluid","Row","noGutters","Col","ReactDOM","render","document","getElementById"],"mappings":"qQAyEeA,kBAjDE,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBASjB,OAPAC,IAAKC,MAAM,mJAAoJ,CAC7JC,UAAU,EACVC,SAAU,SAASC,GACjBC,MAAM,4BAA8BD,EAAQE,KAAKC,OAAS,6BAK5D,kBAAC,gBAAD,CAAeC,WAAY,eACzB,kBAAC,gBAAD,CAAeC,KAAM,GACnB,kBAAC,cAAD,CAAaC,UAxBnB,2GA0BU,qBAAEC,YACYC,KAAI,SAAAC,GAAG,OACjB,kBAAC,YAAD,CACEC,IAAKD,EAAIE,OACTL,UAAWG,EACXG,aAAc,WAAO,IA7BvBC,EA6BsB,EACMJ,EAAIK,WAArBC,EADW,EACXA,KAAMC,EADK,EACLA,QACbrB,EAAkB,GAAD,OAAIoB,EAAJ,oBA/BrBF,EA+B2CG,GA9B/C,IACDC,KAAKC,MAAML,EAAM,KAAa,GAAK,KACjCA,EAAM,IACRI,KAAKC,MAAML,EAAM,KAAU,GAAK,IAEhCI,KAAKC,MAAML,EAAM,KAAO,GAAK,OA2BtBM,aAAc,WACZxB,EAAkB,KAEpByB,MAAO,CACLC,QAAS,CACPC,KAAM,UACNC,QAAS,QAEXC,MAAO,CACLF,KAAM,OACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,OACNC,QAAS,sB,gECdhBG,MAnCf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNC,EADM,KACGC,EADH,KAEb,MAEM,CACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,MAAM,MAAMC,UAAW,WAAaC,OAAO,MAC5D,kBAACJ,EAAA,EAAOK,MAAR,KACI,kBAAC,IAAD,CAAiBC,KAAMC,MACvB,0BAAMJ,UAAU,SAAhB,cAEJ,kBAACH,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,mBAAmBN,UAAW,cAC3D,kBAACH,EAAA,EAAOU,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKT,UAAU,WACb,kBAACS,EAAA,EAAIC,KAAL,CAAUV,UAAU,QAAQW,KAAM,uGAChC,kBAAC,IAAD,CAAiBR,KAAMS,MADzB,gBAGA,kBAACH,EAAA,EAAIC,KAAL,CAAUV,UAAU,QAAQW,KAAM,8CAChC,kBAAC,IAAD,CAAiBR,KAAMU,MADzB,mBAON,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACf,UAAW,OAC1B,kBAACgB,EAAA,EAAD,CAAKC,UAAW,QACd,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAUxD,kBAAmBkC,IAC7B,kBAAC,IAAD,KAAeD,QCjC/BwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e7642f71.chunk.js","sourcesContent":["import React, { memo} from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup,\n  Marker\n} from \"react-simple-maps\";\n\nimport Papa from \"papaparse\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({setTooltipContent}) => {\n\n  Papa.parse(\"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv\", {\n    download: true,\n    complete: function(results) {\n      alert(\"Loaded information about \" + results.data.length + \" countries or regions.\");\n    }\n  });\n\n  return (\n    <ComposableMap projection={\"geoMercator\"}>\n      <ZoomableGroup zoom={1}>\n        <Geographies geography={geoUrl}>\n          {\n            ({geographies}) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    const {NAME, POP_EST} = geo.properties;\n                    setTooltipContent(`${NAME} â€” ${rounded(POP_EST)}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n          }\n        </Geographies>\n      </ZoomableGroup>\n    </ComposableMap>\n  );\n};\n\nexport default memo(MapChart);\n","import React, {useState} from 'react';\nimport MapChart from \"./MapChart\";\nimport ReactTooltip from \"react-tooltip\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserMd, faDatabase, faCode } from '@fortawesome/free-solid-svg-icons';\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n\n        [\n          <Navbar bg=\"light\" fixed=\"top\" className={\"p-0 pl-2\"}  expand=\"lg\">\n            <Navbar.Brand>\n                <FontAwesomeIcon icon={faUserMd} />\n                <span className=\"small\"> COVID19 </span>\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className={\"border-0 \"} />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link className=\"small\" href={\"https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series\"}>\n                  <FontAwesomeIcon icon={faDatabase} /> Data source\n                </Nav.Link>\n                <Nav.Link className=\"small\" href={\"https://github.com/daniel-karl/covid19-map\"}>\n                  <FontAwesomeIcon icon={faCode} /> Source code\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>,\n\n          <Container fluid className={\"p-0\"}>\n            <Row noGutters={\"true\"}>\n              <Col>\n                <MapChart setTooltipContent={setContent} />\n                <ReactTooltip>{content}</ReactTooltip>\n              </Col>\n            </Row>\n          </Container>\n        ]\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}